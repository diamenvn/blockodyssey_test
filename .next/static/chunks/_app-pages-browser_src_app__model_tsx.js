"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_src_app__model_tsx"],{

/***/ "(app-pages-browser)/./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js ***!
  \**********************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar reactIs = __webpack_require__(/*! react-is */ \"(app-pages-browser)/./node_modules/react-is/index.js\");\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */ var REACT_STATICS = {\n    childContextTypes: true,\n    contextType: true,\n    contextTypes: true,\n    defaultProps: true,\n    displayName: true,\n    getDefaultProps: true,\n    getDerivedStateFromError: true,\n    getDerivedStateFromProps: true,\n    mixins: true,\n    propTypes: true,\n    type: true\n};\nvar KNOWN_STATICS = {\n    name: true,\n    length: true,\n    prototype: true,\n    caller: true,\n    callee: true,\n    arguments: true,\n    arity: true\n};\nvar FORWARD_REF_STATICS = {\n    \"$$typeof\": true,\n    render: true,\n    defaultProps: true,\n    displayName: true,\n    propTypes: true\n};\nvar MEMO_STATICS = {\n    \"$$typeof\": true,\n    compare: true,\n    defaultProps: true,\n    displayName: true,\n    propTypes: true,\n    type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\nfunction getStatics(component) {\n    // React v16.11 and below\n    if (reactIs.isMemo(component)) {\n        return MEMO_STATICS;\n    } // React v16.12 and above\n    return TYPE_STATICS[component[\"$$typeof\"]] || REACT_STATICS;\n}\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n    if (typeof sourceComponent !== \"string\") {\n        // don't hoist over string (html) components\n        if (objectPrototype) {\n            var inheritedComponent = getPrototypeOf(sourceComponent);\n            if (inheritedComponent && inheritedComponent !== objectPrototype) {\n                hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n            }\n        }\n        var keys = getOwnPropertyNames(sourceComponent);\n        if (getOwnPropertySymbols) {\n            keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n        }\n        var targetStatics = getStatics(targetComponent);\n        var sourceStatics = getStatics(sourceComponent);\n        for(var i = 0; i < keys.length; ++i){\n            var key = keys[i];\n            if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n                var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n                try {\n                    // Avoid failures from read-only properties\n                    defineProperty(targetComponent, key, descriptor);\n                } catch (e) {}\n            }\n        }\n    }\n    return targetComponent;\n}\nmodule.exports = hoistNonReactStatics;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9ob2lzdC1ub24tcmVhY3Qtc3RhdGljcy9kaXN0L2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzLmNqcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBLElBQUlBLFVBQVVDLG1CQUFPQSxDQUFDO0FBRXRCOzs7Q0FHQyxHQUNELElBQUlDLGdCQUFnQjtJQUNsQkMsbUJBQW1CO0lBQ25CQyxhQUFhO0lBQ2JDLGNBQWM7SUFDZEMsY0FBYztJQUNkQyxhQUFhO0lBQ2JDLGlCQUFpQjtJQUNqQkMsMEJBQTBCO0lBQzFCQywwQkFBMEI7SUFDMUJDLFFBQVE7SUFDUkMsV0FBVztJQUNYQyxNQUFNO0FBQ1I7QUFDQSxJQUFJQyxnQkFBZ0I7SUFDbEJDLE1BQU07SUFDTkMsUUFBUTtJQUNSQyxXQUFXO0lBQ1hDLFFBQVE7SUFDUkMsUUFBUTtJQUNSQyxXQUFXO0lBQ1hDLE9BQU87QUFDVDtBQUNBLElBQUlDLHNCQUFzQjtJQUN4QixZQUFZO0lBQ1pDLFFBQVE7SUFDUmpCLGNBQWM7SUFDZEMsYUFBYTtJQUNiSyxXQUFXO0FBQ2I7QUFDQSxJQUFJWSxlQUFlO0lBQ2pCLFlBQVk7SUFDWkMsU0FBUztJQUNUbkIsY0FBYztJQUNkQyxhQUFhO0lBQ2JLLFdBQVc7SUFDWEMsTUFBTTtBQUNSO0FBQ0EsSUFBSWEsZUFBZSxDQUFDO0FBQ3BCQSxZQUFZLENBQUMxQixRQUFRMkIsVUFBVSxDQUFDLEdBQUdMO0FBQ25DSSxZQUFZLENBQUMxQixRQUFRNEIsSUFBSSxDQUFDLEdBQUdKO0FBRTdCLFNBQVNLLFdBQVdDLFNBQVM7SUFDM0IseUJBQXlCO0lBQ3pCLElBQUk5QixRQUFRK0IsTUFBTSxDQUFDRCxZQUFZO1FBQzdCLE9BQU9OO0lBQ1QsRUFBRSx5QkFBeUI7SUFHM0IsT0FBT0UsWUFBWSxDQUFDSSxTQUFTLENBQUMsV0FBVyxDQUFDLElBQUk1QjtBQUNoRDtBQUVBLElBQUk4QixpQkFBaUJDLE9BQU9ELGNBQWM7QUFDMUMsSUFBSUUsc0JBQXNCRCxPQUFPQyxtQkFBbUI7QUFDcEQsSUFBSUMsd0JBQXdCRixPQUFPRSxxQkFBcUI7QUFDeEQsSUFBSUMsMkJBQTJCSCxPQUFPRyx3QkFBd0I7QUFDOUQsSUFBSUMsaUJBQWlCSixPQUFPSSxjQUFjO0FBQzFDLElBQUlDLGtCQUFrQkwsT0FBT2hCLFNBQVM7QUFDdEMsU0FBU3NCLHFCQUFxQkMsZUFBZSxFQUFFQyxlQUFlLEVBQUVDLFNBQVM7SUFDdkUsSUFBSSxPQUFPRCxvQkFBb0IsVUFBVTtRQUN2Qyw0Q0FBNEM7UUFDNUMsSUFBSUgsaUJBQWlCO1lBQ25CLElBQUlLLHFCQUFxQk4sZUFBZUk7WUFFeEMsSUFBSUUsc0JBQXNCQSx1QkFBdUJMLGlCQUFpQjtnQkFDaEVDLHFCQUFxQkMsaUJBQWlCRyxvQkFBb0JEO1lBQzVEO1FBQ0Y7UUFFQSxJQUFJRSxPQUFPVixvQkFBb0JPO1FBRS9CLElBQUlOLHVCQUF1QjtZQUN6QlMsT0FBT0EsS0FBS0MsTUFBTSxDQUFDVixzQkFBc0JNO1FBQzNDO1FBRUEsSUFBSUssZ0JBQWdCakIsV0FBV1c7UUFDL0IsSUFBSU8sZ0JBQWdCbEIsV0FBV1k7UUFFL0IsSUFBSyxJQUFJTyxJQUFJLEdBQUdBLElBQUlKLEtBQUs1QixNQUFNLEVBQUUsRUFBRWdDLEVBQUc7WUFDcEMsSUFBSUMsTUFBTUwsSUFBSSxDQUFDSSxFQUFFO1lBRWpCLElBQUksQ0FBQ2xDLGFBQWEsQ0FBQ21DLElBQUksSUFBSSxDQUFFUCxDQUFBQSxhQUFhQSxTQUFTLENBQUNPLElBQUksS0FBSyxDQUFFRixDQUFBQSxpQkFBaUJBLGFBQWEsQ0FBQ0UsSUFBSSxLQUFLLENBQUVILENBQUFBLGlCQUFpQkEsYUFBYSxDQUFDRyxJQUFJLEdBQUc7Z0JBQzdJLElBQUlDLGFBQWFkLHlCQUF5QkssaUJBQWlCUTtnQkFFM0QsSUFBSTtvQkFDRiwyQ0FBMkM7b0JBQzNDakIsZUFBZVEsaUJBQWlCUyxLQUFLQztnQkFDdkMsRUFBRSxPQUFPQyxHQUFHLENBQUM7WUFDZjtRQUNGO0lBQ0Y7SUFFQSxPQUFPWDtBQUNUO0FBRUFZLE9BQU9DLE9BQU8sR0FBR2QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzL2Rpc3QvaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MuY2pzLmpzPzkxZGIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgcmVhY3RJcyA9IHJlcXVpcmUoJ3JlYWN0LWlzJyk7XG5cbi8qKlxuICogQ29weXJpZ2h0IDIwMTUsIFlhaG9vISBJbmMuXG4gKiBDb3B5cmlnaHRzIGxpY2Vuc2VkIHVuZGVyIHRoZSBOZXcgQlNEIExpY2Vuc2UuIFNlZSB0aGUgYWNjb21wYW55aW5nIExJQ0VOU0UgZmlsZSBmb3IgdGVybXMuXG4gKi9cbnZhciBSRUFDVF9TVEFUSUNTID0ge1xuICBjaGlsZENvbnRleHRUeXBlczogdHJ1ZSxcbiAgY29udGV4dFR5cGU6IHRydWUsXG4gIGNvbnRleHRUeXBlczogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgZ2V0RGVmYXVsdFByb3BzOiB0cnVlLFxuICBnZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I6IHRydWUsXG4gIGdldERlcml2ZWRTdGF0ZUZyb21Qcm9wczogdHJ1ZSxcbiAgbWl4aW5zOiB0cnVlLFxuICBwcm9wVHlwZXM6IHRydWUsXG4gIHR5cGU6IHRydWVcbn07XG52YXIgS05PV05fU1RBVElDUyA9IHtcbiAgbmFtZTogdHJ1ZSxcbiAgbGVuZ3RoOiB0cnVlLFxuICBwcm90b3R5cGU6IHRydWUsXG4gIGNhbGxlcjogdHJ1ZSxcbiAgY2FsbGVlOiB0cnVlLFxuICBhcmd1bWVudHM6IHRydWUsXG4gIGFyaXR5OiB0cnVlXG59O1xudmFyIEZPUldBUkRfUkVGX1NUQVRJQ1MgPSB7XG4gICckJHR5cGVvZic6IHRydWUsXG4gIHJlbmRlcjogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlXG59O1xudmFyIE1FTU9fU1RBVElDUyA9IHtcbiAgJyQkdHlwZW9mJzogdHJ1ZSxcbiAgY29tcGFyZTogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlLFxuICB0eXBlOiB0cnVlXG59O1xudmFyIFRZUEVfU1RBVElDUyA9IHt9O1xuVFlQRV9TVEFUSUNTW3JlYWN0SXMuRm9yd2FyZFJlZl0gPSBGT1JXQVJEX1JFRl9TVEFUSUNTO1xuVFlQRV9TVEFUSUNTW3JlYWN0SXMuTWVtb10gPSBNRU1PX1NUQVRJQ1M7XG5cbmZ1bmN0aW9uIGdldFN0YXRpY3MoY29tcG9uZW50KSB7XG4gIC8vIFJlYWN0IHYxNi4xMSBhbmQgYmVsb3dcbiAgaWYgKHJlYWN0SXMuaXNNZW1vKGNvbXBvbmVudCkpIHtcbiAgICByZXR1cm4gTUVNT19TVEFUSUNTO1xuICB9IC8vIFJlYWN0IHYxNi4xMiBhbmQgYWJvdmVcblxuXG4gIHJldHVybiBUWVBFX1NUQVRJQ1NbY29tcG9uZW50WyckJHR5cGVvZiddXSB8fCBSRUFDVF9TVEFUSUNTO1xufVxuXG52YXIgZGVmaW5lUHJvcGVydHkgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgZ2V0T3duUHJvcGVydHlOYW1lcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzO1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcbnZhciBnZXRQcm90b3R5cGVPZiA9IE9iamVjdC5nZXRQcm90b3R5cGVPZjtcbnZhciBvYmplY3RQcm90b3R5cGUgPSBPYmplY3QucHJvdG90eXBlO1xuZnVuY3Rpb24gaG9pc3ROb25SZWFjdFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50LCBzb3VyY2VDb21wb25lbnQsIGJsYWNrbGlzdCkge1xuICBpZiAodHlwZW9mIHNvdXJjZUNvbXBvbmVudCAhPT0gJ3N0cmluZycpIHtcbiAgICAvLyBkb24ndCBob2lzdCBvdmVyIHN0cmluZyAoaHRtbCkgY29tcG9uZW50c1xuICAgIGlmIChvYmplY3RQcm90b3R5cGUpIHtcbiAgICAgIHZhciBpbmhlcml0ZWRDb21wb25lbnQgPSBnZXRQcm90b3R5cGVPZihzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgICBpZiAoaW5oZXJpdGVkQ29tcG9uZW50ICYmIGluaGVyaXRlZENvbXBvbmVudCAhPT0gb2JqZWN0UHJvdG90eXBlKSB7XG4gICAgICAgIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKHRhcmdldENvbXBvbmVudCwgaW5oZXJpdGVkQ29tcG9uZW50LCBibGFja2xpc3QpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHZhciBrZXlzID0gZ2V0T3duUHJvcGVydHlOYW1lcyhzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgaWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuICAgICAga2V5cyA9IGtleXMuY29uY2F0KGdldE93blByb3BlcnR5U3ltYm9scyhzb3VyY2VDb21wb25lbnQpKTtcbiAgICB9XG5cbiAgICB2YXIgdGFyZ2V0U3RhdGljcyA9IGdldFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50KTtcbiAgICB2YXIgc291cmNlU3RhdGljcyA9IGdldFN0YXRpY3Moc291cmNlQ29tcG9uZW50KTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7ICsraSkge1xuICAgICAgdmFyIGtleSA9IGtleXNbaV07XG5cbiAgICAgIGlmICghS05PV05fU1RBVElDU1trZXldICYmICEoYmxhY2tsaXN0ICYmIGJsYWNrbGlzdFtrZXldKSAmJiAhKHNvdXJjZVN0YXRpY3MgJiYgc291cmNlU3RhdGljc1trZXldKSAmJiAhKHRhcmdldFN0YXRpY3MgJiYgdGFyZ2V0U3RhdGljc1trZXldKSkge1xuICAgICAgICB2YXIgZGVzY3JpcHRvciA9IGdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2VDb21wb25lbnQsIGtleSk7XG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBBdm9pZCBmYWlsdXJlcyBmcm9tIHJlYWQtb25seSBwcm9wZXJ0aWVzXG4gICAgICAgICAgZGVmaW5lUHJvcGVydHkodGFyZ2V0Q29tcG9uZW50LCBrZXksIGRlc2NyaXB0b3IpO1xuICAgICAgICB9IGNhdGNoIChlKSB7fVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0YXJnZXRDb21wb25lbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaG9pc3ROb25SZWFjdFN0YXRpY3M7XG4iXSwibmFtZXMiOlsicmVhY3RJcyIsInJlcXVpcmUiLCJSRUFDVF9TVEFUSUNTIiwiY2hpbGRDb250ZXh0VHlwZXMiLCJjb250ZXh0VHlwZSIsImNvbnRleHRUeXBlcyIsImRlZmF1bHRQcm9wcyIsImRpc3BsYXlOYW1lIiwiZ2V0RGVmYXVsdFByb3BzIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzIiwibWl4aW5zIiwicHJvcFR5cGVzIiwidHlwZSIsIktOT1dOX1NUQVRJQ1MiLCJuYW1lIiwibGVuZ3RoIiwicHJvdG90eXBlIiwiY2FsbGVyIiwiY2FsbGVlIiwiYXJndW1lbnRzIiwiYXJpdHkiLCJGT1JXQVJEX1JFRl9TVEFUSUNTIiwicmVuZGVyIiwiTUVNT19TVEFUSUNTIiwiY29tcGFyZSIsIlRZUEVfU1RBVElDUyIsIkZvcndhcmRSZWYiLCJNZW1vIiwiZ2V0U3RhdGljcyIsImNvbXBvbmVudCIsImlzTWVtbyIsImRlZmluZVByb3BlcnR5IiwiT2JqZWN0IiwiZ2V0T3duUHJvcGVydHlOYW1lcyIsImdldE93blByb3BlcnR5U3ltYm9scyIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImdldFByb3RvdHlwZU9mIiwib2JqZWN0UHJvdG90eXBlIiwiaG9pc3ROb25SZWFjdFN0YXRpY3MiLCJ0YXJnZXRDb21wb25lbnQiLCJzb3VyY2VDb21wb25lbnQiLCJibGFja2xpc3QiLCJpbmhlcml0ZWRDb21wb25lbnQiLCJrZXlzIiwiY29uY2F0IiwidGFyZ2V0U3RhdGljcyIsInNvdXJjZVN0YXRpY3MiLCJpIiwia2V5IiwiZGVzY3JpcHRvciIsImUiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-is/cjs/react-is.development.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-is/cjs/react-is.development.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("/** @license React v16.13.1\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */ \nif (true) {\n    (function() {\n        \"use strict\";\n        // The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n        // nor polyfill, then a plain number is used for performance.\n        var hasSymbol = typeof Symbol === \"function\" && Symbol.for;\n        var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for(\"react.element\") : 0xeac7;\n        var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for(\"react.portal\") : 0xeaca;\n        var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for(\"react.fragment\") : 0xeacb;\n        var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for(\"react.strict_mode\") : 0xeacc;\n        var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for(\"react.profiler\") : 0xead2;\n        var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for(\"react.provider\") : 0xeacd;\n        var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for(\"react.context\") : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\n        // (unstable) APIs that have been removed. Can we remove the symbols?\n        var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for(\"react.async_mode\") : 0xeacf;\n        var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for(\"react.concurrent_mode\") : 0xeacf;\n        var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for(\"react.forward_ref\") : 0xead0;\n        var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for(\"react.suspense\") : 0xead1;\n        var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for(\"react.suspense_list\") : 0xead8;\n        var REACT_MEMO_TYPE = hasSymbol ? Symbol.for(\"react.memo\") : 0xead3;\n        var REACT_LAZY_TYPE = hasSymbol ? Symbol.for(\"react.lazy\") : 0xead4;\n        var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for(\"react.block\") : 0xead9;\n        var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for(\"react.fundamental\") : 0xead5;\n        var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for(\"react.responder\") : 0xead6;\n        var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for(\"react.scope\") : 0xead7;\n        function isValidElementType(type) {\n            return typeof type === \"string\" || typeof type === \"function\" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n            type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === \"object\" && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\n        }\n        function typeOf(object) {\n            if (typeof object === \"object\" && object !== null) {\n                var $$typeof = object.$$typeof;\n                switch($$typeof){\n                    case REACT_ELEMENT_TYPE:\n                        var type = object.type;\n                        switch(type){\n                            case REACT_ASYNC_MODE_TYPE:\n                            case REACT_CONCURRENT_MODE_TYPE:\n                            case REACT_FRAGMENT_TYPE:\n                            case REACT_PROFILER_TYPE:\n                            case REACT_STRICT_MODE_TYPE:\n                            case REACT_SUSPENSE_TYPE:\n                                return type;\n                            default:\n                                var $$typeofType = type && type.$$typeof;\n                                switch($$typeofType){\n                                    case REACT_CONTEXT_TYPE:\n                                    case REACT_FORWARD_REF_TYPE:\n                                    case REACT_LAZY_TYPE:\n                                    case REACT_MEMO_TYPE:\n                                    case REACT_PROVIDER_TYPE:\n                                        return $$typeofType;\n                                    default:\n                                        return $$typeof;\n                                }\n                        }\n                    case REACT_PORTAL_TYPE:\n                        return $$typeof;\n                }\n            }\n            return undefined;\n        } // AsyncMode is deprecated along with isAsyncMode\n        var AsyncMode = REACT_ASYNC_MODE_TYPE;\n        var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\n        var ContextConsumer = REACT_CONTEXT_TYPE;\n        var ContextProvider = REACT_PROVIDER_TYPE;\n        var Element = REACT_ELEMENT_TYPE;\n        var ForwardRef = REACT_FORWARD_REF_TYPE;\n        var Fragment = REACT_FRAGMENT_TYPE;\n        var Lazy = REACT_LAZY_TYPE;\n        var Memo = REACT_MEMO_TYPE;\n        var Portal = REACT_PORTAL_TYPE;\n        var Profiler = REACT_PROFILER_TYPE;\n        var StrictMode = REACT_STRICT_MODE_TYPE;\n        var Suspense = REACT_SUSPENSE_TYPE;\n        var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated\n        function isAsyncMode(object) {\n            {\n                if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n                    hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n                    console[\"warn\"](\"The ReactIs.isAsyncMode() alias has been deprecated, \" + \"and will be removed in React 17+. Update your code to use \" + \"ReactIs.isConcurrentMode() instead. It has the exact same API.\");\n                }\n            }\n            return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n        }\n        function isConcurrentMode(object) {\n            return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n        }\n        function isContextConsumer(object) {\n            return typeOf(object) === REACT_CONTEXT_TYPE;\n        }\n        function isContextProvider(object) {\n            return typeOf(object) === REACT_PROVIDER_TYPE;\n        }\n        function isElement(object) {\n            return typeof object === \"object\" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n        }\n        function isForwardRef(object) {\n            return typeOf(object) === REACT_FORWARD_REF_TYPE;\n        }\n        function isFragment(object) {\n            return typeOf(object) === REACT_FRAGMENT_TYPE;\n        }\n        function isLazy(object) {\n            return typeOf(object) === REACT_LAZY_TYPE;\n        }\n        function isMemo(object) {\n            return typeOf(object) === REACT_MEMO_TYPE;\n        }\n        function isPortal(object) {\n            return typeOf(object) === REACT_PORTAL_TYPE;\n        }\n        function isProfiler(object) {\n            return typeOf(object) === REACT_PROFILER_TYPE;\n        }\n        function isStrictMode(object) {\n            return typeOf(object) === REACT_STRICT_MODE_TYPE;\n        }\n        function isSuspense(object) {\n            return typeOf(object) === REACT_SUSPENSE_TYPE;\n        }\n        exports.AsyncMode = AsyncMode;\n        exports.ConcurrentMode = ConcurrentMode;\n        exports.ContextConsumer = ContextConsumer;\n        exports.ContextProvider = ContextProvider;\n        exports.Element = Element;\n        exports.ForwardRef = ForwardRef;\n        exports.Fragment = Fragment;\n        exports.Lazy = Lazy;\n        exports.Memo = Memo;\n        exports.Portal = Portal;\n        exports.Profiler = Profiler;\n        exports.StrictMode = StrictMode;\n        exports.Suspense = Suspense;\n        exports.isAsyncMode = isAsyncMode;\n        exports.isConcurrentMode = isConcurrentMode;\n        exports.isContextConsumer = isContextConsumer;\n        exports.isContextProvider = isContextProvider;\n        exports.isElement = isElement;\n        exports.isForwardRef = isForwardRef;\n        exports.isFragment = isFragment;\n        exports.isLazy = isLazy;\n        exports.isMemo = isMemo;\n        exports.isPortal = isPortal;\n        exports.isProfiler = isProfiler;\n        exports.isStrictMode = isStrictMode;\n        exports.isSuspense = isSuspense;\n        exports.isValidElementType = isValidElementType;\n        exports.typeOf = typeOf;\n    })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-is/cjs/react-is.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-is/index.js":
/*!****************************************!*\
  !*** ./node_modules/react-is/index.js ***!
  \****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\nif (false) {} else {\n    module.exports = __webpack_require__(/*! ./cjs/react-is.development.js */ \"(app-pages-browser)/./node_modules/react-is/cjs/react-is.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1pcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBLElBQUlBLEtBQXlCLEVBQWMsRUFFMUMsTUFBTTtJQUNMQyxvSkFBeUI7QUFDM0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWlzL2luZGV4LmpzP2IzMTMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWlzLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOlsicHJvY2VzcyIsIm1vZHVsZSIsImV4cG9ydHMiLCJyZXF1aXJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-is/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/es/components/Context.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-redux/es/components/Context.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ReactReduxContext: function() { return /* binding */ ReactReduxContext; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nconst ContextKey = Symbol.for(\"react-redux-context\");\nconst gT = typeof globalThis !== \"undefined\" ? globalThis : /* fall back to a per-module scope (pre-8.1 behaviour) if `globalThis` is not available */ {};\nfunction getContext() {\n    var _gT$ContextKey;\n    if (!react__WEBPACK_IMPORTED_MODULE_0__.createContext) return {};\n    const contextMap = (_gT$ContextKey = gT[ContextKey]) != null ? _gT$ContextKey : gT[ContextKey] = new Map();\n    let realContext = contextMap.get(react__WEBPACK_IMPORTED_MODULE_0__.createContext);\n    if (!realContext) {\n        realContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\n        if (true) {\n            realContext.displayName = \"ReactRedux\";\n        }\n        contextMap.set(react__WEBPACK_IMPORTED_MODULE_0__.createContext, realContext);\n    }\n    return realContext;\n}\nconst ReactReduxContext = /*#__PURE__*/ getContext();\n/* harmony default export */ __webpack_exports__[\"default\"] = (ReactReduxContext);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb21wb25lbnRzL0NvbnRleHQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQStCO0FBQy9CLE1BQU1DLGFBQWFDLE9BQU9DLEdBQUcsQ0FBRTtBQUMvQixNQUFNQyxLQUFLLE9BQU9DLGVBQWUsY0FBY0EsYUFDL0Msd0ZBQXdGLEdBQ3hGLENBQUM7QUFFRCxTQUFTQztJQUNQLElBQUlDO0lBRUosSUFBSSxDQUFDUCxnREFBbUIsRUFBRSxPQUFPLENBQUM7SUFDbEMsTUFBTVMsYUFBYSxDQUFDRixpQkFBaUJILEVBQUUsQ0FBQ0gsV0FBVyxLQUFLLE9BQU9NLGlCQUFpQkgsRUFBRSxDQUFDSCxXQUFXLEdBQUcsSUFBSVM7SUFDckcsSUFBSUMsY0FBY0YsV0FBV0csR0FBRyxDQUFDWixnREFBbUI7SUFFcEQsSUFBSSxDQUFDVyxhQUFhO1FBQ2hCQSw0QkFBY1gsZ0RBQW1CLENBQUM7UUFFbEMsSUFBSWEsSUFBeUIsRUFBYztZQUN6Q0YsWUFBWUcsV0FBVyxHQUFHO1FBQzVCO1FBRUFMLFdBQVdNLEdBQUcsQ0FBQ2YsZ0RBQW1CLEVBQUVXO0lBQ3RDO0lBRUEsT0FBT0E7QUFDVDtBQUVPLE1BQU1LLG9CQUFvQixXQUFXLEdBQUVWLGFBQWE7QUFDM0QsK0RBQWVVLGlCQUFpQkEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvY29tcG9uZW50cy9Db250ZXh0LmpzPzRiZTUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuY29uc3QgQ29udGV4dEtleSA9IFN5bWJvbC5mb3IoYHJlYWN0LXJlZHV4LWNvbnRleHRgKTtcbmNvbnN0IGdUID0gdHlwZW9mIGdsb2JhbFRoaXMgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWxUaGlzIDpcbi8qIGZhbGwgYmFjayB0byBhIHBlci1tb2R1bGUgc2NvcGUgKHByZS04LjEgYmVoYXZpb3VyKSBpZiBgZ2xvYmFsVGhpc2AgaXMgbm90IGF2YWlsYWJsZSAqL1xue307XG5cbmZ1bmN0aW9uIGdldENvbnRleHQoKSB7XG4gIHZhciBfZ1QkQ29udGV4dEtleTtcblxuICBpZiAoIVJlYWN0LmNyZWF0ZUNvbnRleHQpIHJldHVybiB7fTtcbiAgY29uc3QgY29udGV4dE1hcCA9IChfZ1QkQ29udGV4dEtleSA9IGdUW0NvbnRleHRLZXldKSAhPSBudWxsID8gX2dUJENvbnRleHRLZXkgOiBnVFtDb250ZXh0S2V5XSA9IG5ldyBNYXAoKTtcbiAgbGV0IHJlYWxDb250ZXh0ID0gY29udGV4dE1hcC5nZXQoUmVhY3QuY3JlYXRlQ29udGV4dCk7XG5cbiAgaWYgKCFyZWFsQ29udGV4dCkge1xuICAgIHJlYWxDb250ZXh0ID0gUmVhY3QuY3JlYXRlQ29udGV4dChudWxsKTtcblxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICByZWFsQ29udGV4dC5kaXNwbGF5TmFtZSA9ICdSZWFjdFJlZHV4JztcbiAgICB9XG5cbiAgICBjb250ZXh0TWFwLnNldChSZWFjdC5jcmVhdGVDb250ZXh0LCByZWFsQ29udGV4dCk7XG4gIH1cblxuICByZXR1cm4gcmVhbENvbnRleHQ7XG59XG5cbmV4cG9ydCBjb25zdCBSZWFjdFJlZHV4Q29udGV4dCA9IC8qI19fUFVSRV9fKi9nZXRDb250ZXh0KCk7XG5leHBvcnQgZGVmYXVsdCBSZWFjdFJlZHV4Q29udGV4dDsiXSwibmFtZXMiOlsiUmVhY3QiLCJDb250ZXh0S2V5IiwiU3ltYm9sIiwiZm9yIiwiZ1QiLCJnbG9iYWxUaGlzIiwiZ2V0Q29udGV4dCIsIl9nVCRDb250ZXh0S2V5IiwiY3JlYXRlQ29udGV4dCIsImNvbnRleHRNYXAiLCJNYXAiLCJyZWFsQ29udGV4dCIsImdldCIsInByb2Nlc3MiLCJkaXNwbGF5TmFtZSIsInNldCIsIlJlYWN0UmVkdXhDb250ZXh0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/es/components/Context.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/es/components/Provider.js":
/*!************************************************************!*\
  !*** ./node_modules/react-redux/es/components/Provider.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Context */ \"(app-pages-browser)/./node_modules/react-redux/es/components/Context.js\");\n/* harmony import */ var _utils_Subscription__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Subscription */ \"(app-pages-browser)/./node_modules/react-redux/es/utils/Subscription.js\");\n/* harmony import */ var _utils_useIsomorphicLayoutEffect__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/useIsomorphicLayoutEffect */ \"(app-pages-browser)/./node_modules/react-redux/es/utils/useIsomorphicLayoutEffect.js\");\nvar _s = $RefreshSig$();\n\n\n\n\nfunction Provider(param) {\n    let { store, context, children, serverState, stabilityCheck = \"once\", noopCheck = \"once\" } = param;\n    _s();\n    const contextValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>{\n        const subscription = (0,_utils_Subscription__WEBPACK_IMPORTED_MODULE_2__.createSubscription)(store);\n        return {\n            store,\n            subscription,\n            getServerState: serverState ? ()=>serverState : undefined,\n            stabilityCheck,\n            noopCheck\n        };\n    }, [\n        store,\n        serverState,\n        stabilityCheck,\n        noopCheck\n    ]);\n    const previousState = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>store.getState(), [\n        store\n    ]);\n    (0,_utils_useIsomorphicLayoutEffect__WEBPACK_IMPORTED_MODULE_3__.useIsomorphicLayoutEffect)(()=>{\n        const { subscription } = contextValue;\n        subscription.onStateChange = subscription.notifyNestedSubs;\n        subscription.trySubscribe();\n        if (previousState !== store.getState()) {\n            subscription.notifyNestedSubs();\n        }\n        return ()=>{\n            subscription.tryUnsubscribe();\n            subscription.onStateChange = undefined;\n        };\n    }, [\n        contextValue,\n        previousState\n    ]);\n    const Context = context || _Context__WEBPACK_IMPORTED_MODULE_1__.ReactReduxContext; // @ts-ignore 'AnyAction' is assignable to the constraint of type 'A', but 'A' could be instantiated with a different subtype\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Context.Provider, {\n        value: contextValue\n    }, children);\n}\n_s(Provider, \"UYZUOdaFWZnoeXRb2Yd5sJGEKkk=\", false, function() {\n    return [\n        _utils_useIsomorphicLayoutEffect__WEBPACK_IMPORTED_MODULE_3__.useIsomorphicLayoutEffect\n    ];\n});\n_c = Provider;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Provider);\nvar _c;\n$RefreshReg$(_c, \"Provider\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb21wb25lbnRzL1Byb3ZpZGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBK0I7QUFDZTtBQUNhO0FBQ29CO0FBRS9FLFNBQVNJLFNBQVMsS0FPakI7UUFQaUIsRUFDaEJDLEtBQUssRUFDTEMsT0FBTyxFQUNQQyxRQUFRLEVBQ1JDLFdBQVcsRUFDWEMsaUJBQWlCLE1BQU0sRUFDdkJDLFlBQVksTUFBTSxFQUNuQixHQVBpQjs7SUFRaEIsTUFBTUMsZUFBZVgsMENBQWEsQ0FBQztRQUNqQyxNQUFNYSxlQUFlWCx1RUFBa0JBLENBQUNHO1FBQ3hDLE9BQU87WUFDTEE7WUFDQVE7WUFDQUMsZ0JBQWdCTixjQUFjLElBQU1BLGNBQWNPO1lBQ2xETjtZQUNBQztRQUNGO0lBQ0YsR0FBRztRQUFDTDtRQUFPRztRQUFhQztRQUFnQkM7S0FBVTtJQUNsRCxNQUFNTSxnQkFBZ0JoQiwwQ0FBYSxDQUFDLElBQU1LLE1BQU1ZLFFBQVEsSUFBSTtRQUFDWjtLQUFNO0lBQ25FRiwyRkFBeUJBLENBQUM7UUFDeEIsTUFBTSxFQUNKVSxZQUFZLEVBQ2IsR0FBR0Y7UUFDSkUsYUFBYUssYUFBYSxHQUFHTCxhQUFhTSxnQkFBZ0I7UUFDMUROLGFBQWFPLFlBQVk7UUFFekIsSUFBSUosa0JBQWtCWCxNQUFNWSxRQUFRLElBQUk7WUFDdENKLGFBQWFNLGdCQUFnQjtRQUMvQjtRQUVBLE9BQU87WUFDTE4sYUFBYVEsY0FBYztZQUMzQlIsYUFBYUssYUFBYSxHQUFHSDtRQUMvQjtJQUNGLEdBQUc7UUFBQ0o7UUFBY0s7S0FBYztJQUNoQyxNQUFNTSxVQUFVaEIsV0FBV0wsdURBQWlCQSxFQUFFLDZIQUE2SDtJQUUzSyxPQUFPLFdBQVcsR0FBRUQsZ0RBQW1CLENBQUNzQixRQUFRbEIsUUFBUSxFQUFFO1FBQ3hEb0IsT0FBT2I7SUFDVCxHQUFHSjtBQUNMO0dBeENTSDs7UUFtQlBELHVGQUF5QkE7OztLQW5CbEJDO0FBMENULCtEQUFlQSxRQUFRQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb21wb25lbnRzL1Byb3ZpZGVyLmpzP2RiYjUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgUmVhY3RSZWR1eENvbnRleHQgfSBmcm9tICcuL0NvbnRleHQnO1xuaW1wb3J0IHsgY3JlYXRlU3Vic2NyaXB0aW9uIH0gZnJvbSAnLi4vdXRpbHMvU3Vic2NyaXB0aW9uJztcbmltcG9ydCB7IHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QgfSBmcm9tICcuLi91dGlscy91c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0JztcblxuZnVuY3Rpb24gUHJvdmlkZXIoe1xuICBzdG9yZSxcbiAgY29udGV4dCxcbiAgY2hpbGRyZW4sXG4gIHNlcnZlclN0YXRlLFxuICBzdGFiaWxpdHlDaGVjayA9ICdvbmNlJyxcbiAgbm9vcENoZWNrID0gJ29uY2UnXG59KSB7XG4gIGNvbnN0IGNvbnRleHRWYWx1ZSA9IFJlYWN0LnVzZU1lbW8oKCkgPT4ge1xuICAgIGNvbnN0IHN1YnNjcmlwdGlvbiA9IGNyZWF0ZVN1YnNjcmlwdGlvbihzdG9yZSk7XG4gICAgcmV0dXJuIHtcbiAgICAgIHN0b3JlLFxuICAgICAgc3Vic2NyaXB0aW9uLFxuICAgICAgZ2V0U2VydmVyU3RhdGU6IHNlcnZlclN0YXRlID8gKCkgPT4gc2VydmVyU3RhdGUgOiB1bmRlZmluZWQsXG4gICAgICBzdGFiaWxpdHlDaGVjayxcbiAgICAgIG5vb3BDaGVja1xuICAgIH07XG4gIH0sIFtzdG9yZSwgc2VydmVyU3RhdGUsIHN0YWJpbGl0eUNoZWNrLCBub29wQ2hlY2tdKTtcbiAgY29uc3QgcHJldmlvdXNTdGF0ZSA9IFJlYWN0LnVzZU1lbW8oKCkgPT4gc3RvcmUuZ2V0U3RhdGUoKSwgW3N0b3JlXSk7XG4gIHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IHtcbiAgICAgIHN1YnNjcmlwdGlvblxuICAgIH0gPSBjb250ZXh0VmFsdWU7XG4gICAgc3Vic2NyaXB0aW9uLm9uU3RhdGVDaGFuZ2UgPSBzdWJzY3JpcHRpb24ubm90aWZ5TmVzdGVkU3VicztcbiAgICBzdWJzY3JpcHRpb24udHJ5U3Vic2NyaWJlKCk7XG5cbiAgICBpZiAocHJldmlvdXNTdGF0ZSAhPT0gc3RvcmUuZ2V0U3RhdGUoKSkge1xuICAgICAgc3Vic2NyaXB0aW9uLm5vdGlmeU5lc3RlZFN1YnMoKTtcbiAgICB9XG5cbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgc3Vic2NyaXB0aW9uLnRyeVVuc3Vic2NyaWJlKCk7XG4gICAgICBzdWJzY3JpcHRpb24ub25TdGF0ZUNoYW5nZSA9IHVuZGVmaW5lZDtcbiAgICB9O1xuICB9LCBbY29udGV4dFZhbHVlLCBwcmV2aW91c1N0YXRlXSk7XG4gIGNvbnN0IENvbnRleHQgPSBjb250ZXh0IHx8IFJlYWN0UmVkdXhDb250ZXh0OyAvLyBAdHMtaWdub3JlICdBbnlBY3Rpb24nIGlzIGFzc2lnbmFibGUgdG8gdGhlIGNvbnN0cmFpbnQgb2YgdHlwZSAnQScsIGJ1dCAnQScgY291bGQgYmUgaW5zdGFudGlhdGVkIHdpdGggYSBkaWZmZXJlbnQgc3VidHlwZVxuXG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChDb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgdmFsdWU6IGNvbnRleHRWYWx1ZVxuICB9LCBjaGlsZHJlbik7XG59XG5cbmV4cG9ydCBkZWZhdWx0IFByb3ZpZGVyOyJdLCJuYW1lcyI6WyJSZWFjdCIsIlJlYWN0UmVkdXhDb250ZXh0IiwiY3JlYXRlU3Vic2NyaXB0aW9uIiwidXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdCIsIlByb3ZpZGVyIiwic3RvcmUiLCJjb250ZXh0IiwiY2hpbGRyZW4iLCJzZXJ2ZXJTdGF0ZSIsInN0YWJpbGl0eUNoZWNrIiwibm9vcENoZWNrIiwiY29udGV4dFZhbHVlIiwidXNlTWVtbyIsInN1YnNjcmlwdGlvbiIsImdldFNlcnZlclN0YXRlIiwidW5kZWZpbmVkIiwicHJldmlvdXNTdGF0ZSIsImdldFN0YXRlIiwib25TdGF0ZUNoYW5nZSIsIm5vdGlmeU5lc3RlZFN1YnMiLCJ0cnlTdWJzY3JpYmUiLCJ0cnlVbnN1YnNjcmliZSIsIkNvbnRleHQiLCJjcmVhdGVFbGVtZW50IiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/es/components/Provider.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/es/components/connect.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-redux/es/components/connect.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializeConnect: function() { return /* binding */ initializeConnect; }\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ \"(app-pages-browser)/./node_modules/@babel/runtime/helpers/esm/extends.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ \"(app-pages-browser)/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js\");\n/* harmony import */ var hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! hoist-non-react-statics */ \"(app-pages-browser)/./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js\");\n/* harmony import */ var hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var react_is__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-is */ \"(app-pages-browser)/./node_modules/react-redux/node_modules/react-is/index.js\");\n/* harmony import */ var _connect_selectorFactory__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../connect/selectorFactory */ \"(app-pages-browser)/./node_modules/react-redux/es/connect/selectorFactory.js\");\n/* harmony import */ var _connect_mapDispatchToProps__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../connect/mapDispatchToProps */ \"(app-pages-browser)/./node_modules/react-redux/es/connect/mapDispatchToProps.js\");\n/* harmony import */ var _connect_mapStateToProps__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../connect/mapStateToProps */ \"(app-pages-browser)/./node_modules/react-redux/es/connect/mapStateToProps.js\");\n/* harmony import */ var _connect_mergeProps__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../connect/mergeProps */ \"(app-pages-browser)/./node_modules/react-redux/es/connect/mergeProps.js\");\n/* harmony import */ var _utils_Subscription__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../utils/Subscription */ \"(app-pages-browser)/./node_modules/react-redux/es/utils/Subscription.js\");\n/* harmony import */ var _utils_useIsomorphicLayoutEffect__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../utils/useIsomorphicLayoutEffect */ \"(app-pages-browser)/./node_modules/react-redux/es/utils/useIsomorphicLayoutEffect.js\");\n/* harmony import */ var _utils_shallowEqual__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../utils/shallowEqual */ \"(app-pages-browser)/./node_modules/react-redux/es/utils/shallowEqual.js\");\n/* harmony import */ var _utils_warning__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../utils/warning */ \"(app-pages-browser)/./node_modules/react-redux/es/utils/warning.js\");\n/* harmony import */ var _Context__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./Context */ \"(app-pages-browser)/./node_modules/react-redux/es/components/Context.js\");\n/* harmony import */ var _utils_useSyncExternalStore__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../utils/useSyncExternalStore */ \"(app-pages-browser)/./node_modules/react-redux/es/utils/useSyncExternalStore.js\");\nvar _s = $RefreshSig$();\n\n\nconst _excluded = [\n    \"reactReduxForwardedRef\"\n];\n/* eslint-disable valid-jsdoc, @typescript-eslint/no-unused-vars */ \n\n\n\n\n\n\n\n\n\n\n\n\nlet useSyncExternalStore = _utils_useSyncExternalStore__WEBPACK_IMPORTED_MODULE_14__.notInitialized;\nconst initializeConnect = (fn)=>{\n    useSyncExternalStore = fn;\n}; // Define some constant arrays just to avoid re-creating these\nconst EMPTY_ARRAY = [\n    null,\n    0\n];\nconst NO_SUBSCRIPTION_ARRAY = [\n    null,\n    null\n]; // Attempts to stringify whatever not-really-a-component value we were given\n// for logging in an error message\nconst stringifyComponent = (Comp)=>{\n    try {\n        return JSON.stringify(Comp);\n    } catch (err) {\n        return String(Comp);\n    }\n};\n// This is \"just\" a `useLayoutEffect`, but with two modifications:\n// - we need to fall back to `useEffect` in SSR to avoid annoying warnings\n// - we extract this to a separate function to avoid closing over values\n//   and causing memory leaks\nfunction useIsomorphicLayoutEffectWithArgs(effectFunc, effectArgs, dependencies) {\n    _s();\n    (0,_utils_useIsomorphicLayoutEffect__WEBPACK_IMPORTED_MODULE_10__.useIsomorphicLayoutEffect)(()=>effectFunc(...effectArgs), dependencies);\n} // Effect callback, extracted: assign the latest props values to refs for later usage\n_s(useIsomorphicLayoutEffectWithArgs, \"Vd+jpwighRca2oU8HoLqd+zm4Bo=\", false, function() {\n    return [\n        _utils_useIsomorphicLayoutEffect__WEBPACK_IMPORTED_MODULE_10__.useIsomorphicLayoutEffect\n    ];\n});\nfunction captureWrapperProps(lastWrapperProps, lastChildProps, renderIsScheduled, wrapperProps, childPropsFromStoreUpdate, notifyNestedSubs) {\n    // We want to capture the wrapper props and child props we used for later comparisons\n    lastWrapperProps.current = wrapperProps;\n    renderIsScheduled.current = false; // If the render was from a store update, clear out that reference and cascade the subscriber update\n    if (childPropsFromStoreUpdate.current) {\n        childPropsFromStoreUpdate.current = null;\n        notifyNestedSubs();\n    }\n} // Effect callback, extracted: subscribe to the Redux store or nearest connected ancestor,\n// check for updates after dispatched actions, and trigger re-renders.\nfunction subscribeUpdates(shouldHandleStateChanges, store, subscription, childPropsSelector, lastWrapperProps, lastChildProps, renderIsScheduled, isMounted, childPropsFromStoreUpdate, notifyNestedSubs, additionalSubscribeListener) {\n    // If we're not subscribed to the store, nothing to do here\n    if (!shouldHandleStateChanges) return ()=>{}; // Capture values for checking if and when this component unmounts\n    let didUnsubscribe = false;\n    let lastThrownError = null; // We'll run this callback every time a store subscription update propagates to this component\n    const checkForUpdates = ()=>{\n        if (didUnsubscribe || !isMounted.current) {\n            // Don't run stale listeners.\n            // Redux doesn't guarantee unsubscriptions happen until next dispatch.\n            return;\n        } // TODO We're currently calling getState ourselves here, rather than letting `uSES` do it\n        const latestStoreState = store.getState();\n        let newChildProps, error;\n        try {\n            // Actually run the selector with the most recent store state and wrapper props\n            // to determine what the child props should be\n            newChildProps = childPropsSelector(latestStoreState, lastWrapperProps.current);\n        } catch (e) {\n            error = e;\n            lastThrownError = e;\n        }\n        if (!error) {\n            lastThrownError = null;\n        } // If the child props haven't changed, nothing to do here - cascade the subscription update\n        if (newChildProps === lastChildProps.current) {\n            if (!renderIsScheduled.current) {\n                notifyNestedSubs();\n            }\n        } else {\n            // Save references to the new child props.  Note that we track the \"child props from store update\"\n            // as a ref instead of a useState/useReducer because we need a way to determine if that value has\n            // been processed.  If this went into useState/useReducer, we couldn't clear out the value without\n            // forcing another re-render, which we don't want.\n            lastChildProps.current = newChildProps;\n            childPropsFromStoreUpdate.current = newChildProps;\n            renderIsScheduled.current = true; // TODO This is hacky and not how `uSES` is meant to be used\n            // Trigger the React `useSyncExternalStore` subscriber\n            additionalSubscribeListener();\n        }\n    }; // Actually subscribe to the nearest connected ancestor (or store)\n    subscription.onStateChange = checkForUpdates;\n    subscription.trySubscribe(); // Pull data from the store after first render in case the store has\n    // changed since we began.\n    checkForUpdates();\n    const unsubscribeWrapper = ()=>{\n        didUnsubscribe = true;\n        subscription.tryUnsubscribe();\n        subscription.onStateChange = null;\n        if (lastThrownError) {\n            // It's possible that we caught an error due to a bad mapState function, but the\n            // parent re-rendered without this component and we're about to unmount.\n            // This shouldn't happen as long as we do top-down subscriptions correctly, but\n            // if we ever do those wrong, this throw will surface the error in our tests.\n            // In that case, throw the error from here so it doesn't get lost.\n            throw lastThrownError;\n        }\n    };\n    return unsubscribeWrapper;\n} // Reducer initial state creation for our update reducer\nconst initStateUpdates = ()=>EMPTY_ARRAY;\nfunction strictEqual(a, b) {\n    return a === b;\n}\n/**\r\n * Infers the type of props that a connector will inject into a component.\r\n */ let hasWarnedAboutDeprecatedPureOption = false;\n/**\r\n * Connects a React component to a Redux store.\r\n *\r\n * - Without arguments, just wraps the component, without changing the behavior / props\r\n *\r\n * - If 2 params are passed (3rd param, mergeProps, is skipped), default behavior\r\n * is to override ownProps (as stated in the docs), so what remains is everything that's\r\n * not a state or dispatch prop\r\n *\r\n * - When 3rd param is passed, we don't know if ownProps propagate and whether they\r\n * should be valid component props, because it depends on mergeProps implementation.\r\n * As such, it is the user's responsibility to extend ownProps interface from state or\r\n * dispatch props or both when applicable\r\n *\r\n * @param mapStateToProps A function that extracts values from state\r\n * @param mapDispatchToProps Setup for dispatching actions\r\n * @param mergeProps Optional callback to merge state and dispatch props together\r\n * @param options Options for configuring the connection\r\n *\r\n */ function connect(mapStateToProps, mapDispatchToProps, mergeProps) {\n    let { // The `pure` option has been removed, so TS doesn't like us destructuring this to check its existence.\n    // @ts-ignore\n    pure, areStatesEqual = strictEqual, areOwnPropsEqual = _utils_shallowEqual__WEBPACK_IMPORTED_MODULE_11__[\"default\"], areStatePropsEqual = _utils_shallowEqual__WEBPACK_IMPORTED_MODULE_11__[\"default\"], areMergedPropsEqual = _utils_shallowEqual__WEBPACK_IMPORTED_MODULE_11__[\"default\"], // use React's forwardRef to expose a ref of the wrapped component\n    forwardRef = false, // the context consumer to use\n    context = _Context__WEBPACK_IMPORTED_MODULE_13__.ReactReduxContext } = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};\n    if (true) {\n        if (pure !== undefined && !hasWarnedAboutDeprecatedPureOption) {\n            hasWarnedAboutDeprecatedPureOption = true;\n            (0,_utils_warning__WEBPACK_IMPORTED_MODULE_12__[\"default\"])('The `pure` option has been removed. `connect` is now always a \"pure/memoized\" component');\n        }\n    }\n    const Context = context;\n    const initMapStateToProps = (0,_connect_mapStateToProps__WEBPACK_IMPORTED_MODULE_7__.mapStateToPropsFactory)(mapStateToProps);\n    const initMapDispatchToProps = (0,_connect_mapDispatchToProps__WEBPACK_IMPORTED_MODULE_6__.mapDispatchToPropsFactory)(mapDispatchToProps);\n    const initMergeProps = (0,_connect_mergeProps__WEBPACK_IMPORTED_MODULE_8__.mergePropsFactory)(mergeProps);\n    const shouldHandleStateChanges = Boolean(mapStateToProps);\n    const wrapWithConnect = (WrappedComponent)=>{\n        var _s = $RefreshSig$();\n        if ( true && !(0,react_is__WEBPACK_IMPORTED_MODULE_4__.isValidElementType)(WrappedComponent)) {\n            throw new Error(\"You must pass a component to the function returned by connect. Instead received \".concat(stringifyComponent(WrappedComponent)));\n        }\n        const wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || \"Component\";\n        const displayName = \"Connect(\".concat(wrappedComponentName, \")\");\n        const selectorFactoryOptions = {\n            shouldHandleStateChanges,\n            displayName,\n            wrappedComponentName,\n            WrappedComponent,\n            // @ts-ignore\n            initMapStateToProps,\n            // @ts-ignore\n            initMapDispatchToProps,\n            initMergeProps,\n            areStatesEqual,\n            areStatePropsEqual,\n            areOwnPropsEqual,\n            areMergedPropsEqual\n        };\n        function ConnectFunction(props) {\n            _s();\n            const [propsContext, reactReduxForwardedRef, wrapperProps] = react__WEBPACK_IMPORTED_MODULE_3__.useMemo(()=>{\n                // Distinguish between actual \"data\" props that were passed to the wrapper component,\n                // and values needed to control behavior (forwarded refs, alternate context instances).\n                // To maintain the wrapperProps object reference, memoize this destructuring.\n                const { reactReduxForwardedRef } = props, wrapperProps = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(props, _excluded);\n                return [\n                    props.context,\n                    reactReduxForwardedRef,\n                    wrapperProps\n                ];\n            }, [\n                props\n            ]);\n            const ContextToUse = react__WEBPACK_IMPORTED_MODULE_3__.useMemo(()=>{\n                // Users may optionally pass in a custom context instance to use instead of our ReactReduxContext.\n                // Memoize the check that determines which context instance we should use.\n                return propsContext && propsContext.Consumer && // @ts-ignore\n                (0,react_is__WEBPACK_IMPORTED_MODULE_4__.isContextConsumer)(/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_3__.createElement(propsContext.Consumer, null)) ? propsContext : Context;\n            }, [\n                propsContext,\n                Context\n            ]); // Retrieve the store and ancestor subscription via context, if available\n            const contextValue = react__WEBPACK_IMPORTED_MODULE_3__.useContext(ContextToUse); // The store _must_ exist as either a prop or in context.\n            // We'll check to see if it _looks_ like a Redux store first.\n            // This allows us to pass through a `store` prop that is just a plain value.\n            const didStoreComeFromProps = Boolean(props.store) && Boolean(props.store.getState) && Boolean(props.store.dispatch);\n            const didStoreComeFromContext = Boolean(contextValue) && Boolean(contextValue.store);\n            if ( true && !didStoreComeFromProps && !didStoreComeFromContext) {\n                throw new Error('Could not find \"store\" in the context of ' + '\"'.concat(displayName, '\". Either wrap the root component in a <Provider>, ') + \"or pass a custom React context provider to <Provider> and the corresponding \" + \"React context consumer to \".concat(displayName, \" in connect options.\"));\n            } // Based on the previous check, one of these must be true\n            const store = didStoreComeFromProps ? props.store : contextValue.store;\n            const getServerState = didStoreComeFromContext ? contextValue.getServerState : store.getState;\n            const childPropsSelector = react__WEBPACK_IMPORTED_MODULE_3__.useMemo(()=>{\n                // The child props selector needs the store reference as an input.\n                // Re-create this selector whenever the store changes.\n                return (0,_connect_selectorFactory__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(store.dispatch, selectorFactoryOptions);\n            }, [\n                store\n            ]);\n            const [subscription, notifyNestedSubs] = react__WEBPACK_IMPORTED_MODULE_3__.useMemo(()=>{\n                if (!shouldHandleStateChanges) return NO_SUBSCRIPTION_ARRAY; // This Subscription's source should match where store came from: props vs. context. A component\n                // connected to the store via props shouldn't use subscription from context, or vice versa.\n                const subscription = (0,_utils_Subscription__WEBPACK_IMPORTED_MODULE_9__.createSubscription)(store, didStoreComeFromProps ? undefined : contextValue.subscription); // `notifyNestedSubs` is duplicated to handle the case where the component is unmounted in\n                // the middle of the notification loop, where `subscription` will then be null. This can\n                // probably be avoided if Subscription's listeners logic is changed to not call listeners\n                // that have been unsubscribed in the  middle of the notification loop.\n                const notifyNestedSubs = subscription.notifyNestedSubs.bind(subscription);\n                return [\n                    subscription,\n                    notifyNestedSubs\n                ];\n            }, [\n                store,\n                didStoreComeFromProps,\n                contextValue\n            ]); // Determine what {store, subscription} value should be put into nested context, if necessary,\n            // and memoize that value to avoid unnecessary context updates.\n            const overriddenContextValue = react__WEBPACK_IMPORTED_MODULE_3__.useMemo(()=>{\n                if (didStoreComeFromProps) {\n                    // This component is directly subscribed to a store from props.\n                    // We don't want descendants reading from this store - pass down whatever\n                    // the existing context value is from the nearest connected ancestor.\n                    return contextValue;\n                } // Otherwise, put this component's subscription instance into context, so that\n                // connected descendants won't update until after this component is done\n                return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, contextValue, {\n                    subscription\n                });\n            }, [\n                didStoreComeFromProps,\n                contextValue,\n                subscription\n            ]); // Set up refs to coordinate values between the subscription effect and the render logic\n            const lastChildProps = react__WEBPACK_IMPORTED_MODULE_3__.useRef();\n            const lastWrapperProps = react__WEBPACK_IMPORTED_MODULE_3__.useRef(wrapperProps);\n            const childPropsFromStoreUpdate = react__WEBPACK_IMPORTED_MODULE_3__.useRef();\n            const renderIsScheduled = react__WEBPACK_IMPORTED_MODULE_3__.useRef(false);\n            const isProcessingDispatch = react__WEBPACK_IMPORTED_MODULE_3__.useRef(false);\n            const isMounted = react__WEBPACK_IMPORTED_MODULE_3__.useRef(false);\n            const latestSubscriptionCallbackError = react__WEBPACK_IMPORTED_MODULE_3__.useRef();\n            (0,_utils_useIsomorphicLayoutEffect__WEBPACK_IMPORTED_MODULE_10__.useIsomorphicLayoutEffect)(()=>{\n                isMounted.current = true;\n                return ()=>{\n                    isMounted.current = false;\n                };\n            }, []);\n            const actualChildPropsSelector = react__WEBPACK_IMPORTED_MODULE_3__.useMemo(()=>{\n                const selector = ()=>{\n                    // Tricky logic here:\n                    // - This render may have been triggered by a Redux store update that produced new child props\n                    // - However, we may have gotten new wrapper props after that\n                    // If we have new child props, and the same wrapper props, we know we should use the new child props as-is.\n                    // But, if we have new wrapper props, those might change the child props, so we have to recalculate things.\n                    // So, we'll use the child props from store update only if the wrapper props are the same as last time.\n                    if (childPropsFromStoreUpdate.current && wrapperProps === lastWrapperProps.current) {\n                        return childPropsFromStoreUpdate.current;\n                    } // TODO We're reading the store directly in render() here. Bad idea?\n                    // This will likely cause Bad Things (TM) to happen in Concurrent Mode.\n                    // Note that we do this because on renders _not_ caused by store updates, we need the latest store state\n                    // to determine what the child props should be.\n                    return childPropsSelector(store.getState(), wrapperProps);\n                };\n                return selector;\n            }, [\n                store,\n                wrapperProps\n            ]); // We need this to execute synchronously every time we re-render. However, React warns\n            // about useLayoutEffect in SSR, so we try to detect environment and fall back to\n            // just useEffect instead to avoid the warning, since neither will run anyway.\n            const subscribeForReact = react__WEBPACK_IMPORTED_MODULE_3__.useMemo(()=>{\n                const subscribe = (reactListener)=>{\n                    if (!subscription) {\n                        return ()=>{};\n                    }\n                    return subscribeUpdates(shouldHandleStateChanges, store, subscription, childPropsSelector, lastWrapperProps, lastChildProps, renderIsScheduled, isMounted, childPropsFromStoreUpdate, notifyNestedSubs, reactListener);\n                };\n                return subscribe;\n            }, [\n                subscription\n            ]);\n            useIsomorphicLayoutEffectWithArgs(captureWrapperProps, [\n                lastWrapperProps,\n                lastChildProps,\n                renderIsScheduled,\n                wrapperProps,\n                childPropsFromStoreUpdate,\n                notifyNestedSubs\n            ]);\n            let actualChildProps;\n            try {\n                actualChildProps = useSyncExternalStore(subscribeForReact, // TODO and we're just passing that through so it triggers a re-render for us rather than relying on `uSES`.\n                actualChildPropsSelector, getServerState ? ()=>childPropsSelector(getServerState(), wrapperProps) : actualChildPropsSelector);\n            } catch (err) {\n                if (latestSubscriptionCallbackError.current) {\n                    ;\n                    err.message += \"\\nThe error may be correlated with this previous error:\\n\".concat(latestSubscriptionCallbackError.current.stack, \"\\n\\n\");\n                }\n                throw err;\n            }\n            (0,_utils_useIsomorphicLayoutEffect__WEBPACK_IMPORTED_MODULE_10__.useIsomorphicLayoutEffect)(()=>{\n                latestSubscriptionCallbackError.current = undefined;\n                childPropsFromStoreUpdate.current = undefined;\n                lastChildProps.current = actualChildProps;\n            }); // Now that all that's done, we can finally try to actually render the child component.\n            // We memoize the elements for the rendered child component as an optimization.\n            const renderedWrappedComponent = react__WEBPACK_IMPORTED_MODULE_3__.useMemo(()=>{\n                return(/*#__PURE__*/ // @ts-ignore\n                react__WEBPACK_IMPORTED_MODULE_3__.createElement(WrappedComponent, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, actualChildProps, {\n                    ref: reactReduxForwardedRef\n                })));\n            }, [\n                reactReduxForwardedRef,\n                WrappedComponent,\n                actualChildProps\n            ]); // If React sees the exact same element reference as last time, it bails out of re-rendering\n            // that child, same as if it was wrapped in React.memo() or returned false from shouldComponentUpdate.\n            const renderedChild = react__WEBPACK_IMPORTED_MODULE_3__.useMemo(()=>{\n                if (shouldHandleStateChanges) {\n                    // If this component is subscribed to store updates, we need to pass its own\n                    // subscription instance down to our descendants. That means rendering the same\n                    // Context instance, and putting a different value into the context.\n                    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_3__.createElement(ContextToUse.Provider, {\n                        value: overriddenContextValue\n                    }, renderedWrappedComponent);\n                }\n                return renderedWrappedComponent;\n            }, [\n                ContextToUse,\n                renderedWrappedComponent,\n                overriddenContextValue\n            ]);\n            return renderedChild;\n        }\n        _s(ConnectFunction, \"YlsbgChiRX6N9qJQvI85/COlsOk=\", false, function() {\n            return [\n                _utils_useIsomorphicLayoutEffect__WEBPACK_IMPORTED_MODULE_10__.useIsomorphicLayoutEffect,\n                useIsomorphicLayoutEffectWithArgs,\n                _utils_useIsomorphicLayoutEffect__WEBPACK_IMPORTED_MODULE_10__.useIsomorphicLayoutEffect\n            ];\n        });\n        const _Connect = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_3__.memo(ConnectFunction);\n        // Add a hacky cast to get the right output type\n        const Connect = _Connect;\n        Connect.WrappedComponent = WrappedComponent;\n        Connect.displayName = ConnectFunction.displayName = displayName;\n        if (forwardRef) {\n            const _forwarded = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_3__.forwardRef(function forwardConnectRef(props, ref) {\n                // @ts-ignore\n                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_3__.createElement(Connect, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, props, {\n                    reactReduxForwardedRef: ref\n                }));\n            });\n            const forwarded = _forwarded;\n            forwarded.displayName = displayName;\n            forwarded.WrappedComponent = WrappedComponent;\n            return hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_2___default()(forwarded, WrappedComponent);\n        }\n        return hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_2___default()(Connect, WrappedComponent);\n    };\n    return wrapWithConnect;\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (connect);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/es/components/connect.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/es/connect/invalidArgFactory.js":
/*!******************************************************************!*\
  !*** ./node_modules/react-redux/es/connect/invalidArgFactory.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createInvalidArgFactory: function() { return /* binding */ createInvalidArgFactory; }\n/* harmony export */ });\nfunction createInvalidArgFactory(arg, name) {\n    return (dispatch, options)=>{\n        throw new Error(\"Invalid value of type \".concat(typeof arg, \" for \").concat(name, \" argument when connecting component \").concat(options.wrappedComponentName, \".\"));\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb25uZWN0L2ludmFsaWRBcmdGYWN0b3J5LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxTQUFTQSx3QkFBd0JDLEdBQUcsRUFBRUMsSUFBSTtJQUMvQyxPQUFPLENBQUNDLFVBQVVDO1FBQ2hCLE1BQU0sSUFBSUMsTUFBTSx5QkFBMkNILE9BQWxCLE9BQU9ELEtBQUksU0FBa0RHLE9BQTNDRixNQUFLLHdDQUFtRSxPQUE3QkUsUUFBUUUsb0JBQW9CLEVBQUM7SUFDckk7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvY29ubmVjdC9pbnZhbGlkQXJnRmFjdG9yeS5qcz80NDM2Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBjcmVhdGVJbnZhbGlkQXJnRmFjdG9yeShhcmcsIG5hbWUpIHtcbiAgcmV0dXJuIChkaXNwYXRjaCwgb3B0aW9ucykgPT4ge1xuICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCB2YWx1ZSBvZiB0eXBlICR7dHlwZW9mIGFyZ30gZm9yICR7bmFtZX0gYXJndW1lbnQgd2hlbiBjb25uZWN0aW5nIGNvbXBvbmVudCAke29wdGlvbnMud3JhcHBlZENvbXBvbmVudE5hbWV9LmApO1xuICB9O1xufSJdLCJuYW1lcyI6WyJjcmVhdGVJbnZhbGlkQXJnRmFjdG9yeSIsImFyZyIsIm5hbWUiLCJkaXNwYXRjaCIsIm9wdGlvbnMiLCJFcnJvciIsIndyYXBwZWRDb21wb25lbnROYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/es/connect/invalidArgFactory.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/es/connect/mapDispatchToProps.js":
/*!*******************************************************************!*\
  !*** ./node_modules/react-redux/es/connect/mapDispatchToProps.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mapDispatchToPropsFactory: function() { return /* binding */ mapDispatchToPropsFactory; }\n/* harmony export */ });\n/* harmony import */ var _utils_bindActionCreators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/bindActionCreators */ \"(app-pages-browser)/./node_modules/react-redux/es/utils/bindActionCreators.js\");\n/* harmony import */ var _wrapMapToProps__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./wrapMapToProps */ \"(app-pages-browser)/./node_modules/react-redux/es/connect/wrapMapToProps.js\");\n/* harmony import */ var _invalidArgFactory__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./invalidArgFactory */ \"(app-pages-browser)/./node_modules/react-redux/es/connect/invalidArgFactory.js\");\n\n\n\nfunction mapDispatchToPropsFactory(mapDispatchToProps) {\n    return mapDispatchToProps && typeof mapDispatchToProps === \"object\" ? (0,_wrapMapToProps__WEBPACK_IMPORTED_MODULE_1__.wrapMapToPropsConstant)((dispatch)=>(0,_utils_bindActionCreators__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(mapDispatchToProps, dispatch)) : !mapDispatchToProps ? (0,_wrapMapToProps__WEBPACK_IMPORTED_MODULE_1__.wrapMapToPropsConstant)((dispatch)=>({\n            dispatch\n        })) : typeof mapDispatchToProps === \"function\" ? (0,_wrapMapToProps__WEBPACK_IMPORTED_MODULE_1__.wrapMapToPropsFunc)(mapDispatchToProps, \"mapDispatchToProps\") : (0,_invalidArgFactory__WEBPACK_IMPORTED_MODULE_2__.createInvalidArgFactory)(mapDispatchToProps, \"mapDispatchToProps\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb25uZWN0L21hcERpc3BhdGNoVG9Qcm9wcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTZEO0FBQ2lCO0FBQ2hCO0FBQ3ZELFNBQVNJLDBCQUEwQkMsa0JBQWtCO0lBQzFELE9BQU9BLHNCQUFzQixPQUFPQSx1QkFBdUIsV0FBV0osdUVBQXNCQSxDQUFDSyxDQUFBQSxXQUM3Rk4scUVBQWtCQSxDQUFDSyxvQkFBb0JDLGFBQWEsQ0FBQ0QscUJBQXFCSix1RUFBc0JBLENBQUNLLENBQUFBLFdBQWE7WUFDNUdBO1FBQ0YsTUFBTSxPQUFPRCx1QkFBdUIsYUFDcENILG1FQUFrQkEsQ0FBQ0csb0JBQW9CLHdCQUF3QkYsMkVBQXVCQSxDQUFDRSxvQkFBb0I7QUFDN0ciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL2Nvbm5lY3QvbWFwRGlzcGF0Y2hUb1Byb3BzLmpzPzJiMmYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGJpbmRBY3Rpb25DcmVhdG9ycyBmcm9tICcuLi91dGlscy9iaW5kQWN0aW9uQ3JlYXRvcnMnO1xuaW1wb3J0IHsgd3JhcE1hcFRvUHJvcHNDb25zdGFudCwgd3JhcE1hcFRvUHJvcHNGdW5jIH0gZnJvbSAnLi93cmFwTWFwVG9Qcm9wcyc7XG5pbXBvcnQgeyBjcmVhdGVJbnZhbGlkQXJnRmFjdG9yeSB9IGZyb20gJy4vaW52YWxpZEFyZ0ZhY3RvcnknO1xuZXhwb3J0IGZ1bmN0aW9uIG1hcERpc3BhdGNoVG9Qcm9wc0ZhY3RvcnkobWFwRGlzcGF0Y2hUb1Byb3BzKSB7XG4gIHJldHVybiBtYXBEaXNwYXRjaFRvUHJvcHMgJiYgdHlwZW9mIG1hcERpc3BhdGNoVG9Qcm9wcyA9PT0gJ29iamVjdCcgPyB3cmFwTWFwVG9Qcm9wc0NvbnN0YW50KGRpc3BhdGNoID0+IC8vIEB0cy1pZ25vcmVcbiAgYmluZEFjdGlvbkNyZWF0b3JzKG1hcERpc3BhdGNoVG9Qcm9wcywgZGlzcGF0Y2gpKSA6ICFtYXBEaXNwYXRjaFRvUHJvcHMgPyB3cmFwTWFwVG9Qcm9wc0NvbnN0YW50KGRpc3BhdGNoID0+ICh7XG4gICAgZGlzcGF0Y2hcbiAgfSkpIDogdHlwZW9mIG1hcERpc3BhdGNoVG9Qcm9wcyA9PT0gJ2Z1bmN0aW9uJyA/IC8vIEB0cy1pZ25vcmVcbiAgd3JhcE1hcFRvUHJvcHNGdW5jKG1hcERpc3BhdGNoVG9Qcm9wcywgJ21hcERpc3BhdGNoVG9Qcm9wcycpIDogY3JlYXRlSW52YWxpZEFyZ0ZhY3RvcnkobWFwRGlzcGF0Y2hUb1Byb3BzLCAnbWFwRGlzcGF0Y2hUb1Byb3BzJyk7XG59Il0sIm5hbWVzIjpbImJpbmRBY3Rpb25DcmVhdG9ycyIsIndyYXBNYXBUb1Byb3BzQ29uc3RhbnQiLCJ3cmFwTWFwVG9Qcm9wc0Z1bmMiLCJjcmVhdGVJbnZhbGlkQXJnRmFjdG9yeSIsIm1hcERpc3BhdGNoVG9Qcm9wc0ZhY3RvcnkiLCJtYXBEaXNwYXRjaFRvUHJvcHMiLCJkaXNwYXRjaCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/es/connect/mapDispatchToProps.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/es/connect/mapStateToProps.js":
/*!****************************************************************!*\
  !*** ./node_modules/react-redux/es/connect/mapStateToProps.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mapStateToPropsFactory: function() { return /* binding */ mapStateToPropsFactory; }\n/* harmony export */ });\n/* harmony import */ var _wrapMapToProps__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./wrapMapToProps */ \"(app-pages-browser)/./node_modules/react-redux/es/connect/wrapMapToProps.js\");\n/* harmony import */ var _invalidArgFactory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./invalidArgFactory */ \"(app-pages-browser)/./node_modules/react-redux/es/connect/invalidArgFactory.js\");\n\n\nfunction mapStateToPropsFactory(mapStateToProps) {\n    return !mapStateToProps ? (0,_wrapMapToProps__WEBPACK_IMPORTED_MODULE_0__.wrapMapToPropsConstant)(()=>({})) : typeof mapStateToProps === \"function\" ? (0,_wrapMapToProps__WEBPACK_IMPORTED_MODULE_0__.wrapMapToPropsFunc)(mapStateToProps, \"mapStateToProps\") : (0,_invalidArgFactory__WEBPACK_IMPORTED_MODULE_1__.createInvalidArgFactory)(mapStateToProps, \"mapStateToProps\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb25uZWN0L21hcFN0YXRlVG9Qcm9wcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBOEU7QUFDaEI7QUFDdkQsU0FBU0csdUJBQXVCQyxlQUFlO0lBQ3BELE9BQU8sQ0FBQ0Esa0JBQWtCSix1RUFBc0JBLENBQUMsSUFBTyxFQUFDLE1BQU0sT0FBT0ksb0JBQW9CLGFBQzFGSCxtRUFBa0JBLENBQUNHLGlCQUFpQixxQkFBcUJGLDJFQUF1QkEsQ0FBQ0UsaUJBQWlCO0FBQ3BHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb25uZWN0L21hcFN0YXRlVG9Qcm9wcy5qcz9iZWYxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHdyYXBNYXBUb1Byb3BzQ29uc3RhbnQsIHdyYXBNYXBUb1Byb3BzRnVuYyB9IGZyb20gJy4vd3JhcE1hcFRvUHJvcHMnO1xuaW1wb3J0IHsgY3JlYXRlSW52YWxpZEFyZ0ZhY3RvcnkgfSBmcm9tICcuL2ludmFsaWRBcmdGYWN0b3J5JztcbmV4cG9ydCBmdW5jdGlvbiBtYXBTdGF0ZVRvUHJvcHNGYWN0b3J5KG1hcFN0YXRlVG9Qcm9wcykge1xuICByZXR1cm4gIW1hcFN0YXRlVG9Qcm9wcyA/IHdyYXBNYXBUb1Byb3BzQ29uc3RhbnQoKCkgPT4gKHt9KSkgOiB0eXBlb2YgbWFwU3RhdGVUb1Byb3BzID09PSAnZnVuY3Rpb24nID8gLy8gQHRzLWlnbm9yZVxuICB3cmFwTWFwVG9Qcm9wc0Z1bmMobWFwU3RhdGVUb1Byb3BzLCAnbWFwU3RhdGVUb1Byb3BzJykgOiBjcmVhdGVJbnZhbGlkQXJnRmFjdG9yeShtYXBTdGF0ZVRvUHJvcHMsICdtYXBTdGF0ZVRvUHJvcHMnKTtcbn0iXSwibmFtZXMiOlsid3JhcE1hcFRvUHJvcHNDb25zdGFudCIsIndyYXBNYXBUb1Byb3BzRnVuYyIsImNyZWF0ZUludmFsaWRBcmdGYWN0b3J5IiwibWFwU3RhdGVUb1Byb3BzRmFjdG9yeSIsIm1hcFN0YXRlVG9Qcm9wcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/es/connect/mapStateToProps.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/es/connect/mergeProps.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-redux/es/connect/mergeProps.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultMergeProps: function() { return /* binding */ defaultMergeProps; },\n/* harmony export */   mergePropsFactory: function() { return /* binding */ mergePropsFactory; },\n/* harmony export */   wrapMergePropsFunc: function() { return /* binding */ wrapMergePropsFunc; }\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ \"(app-pages-browser)/./node_modules/@babel/runtime/helpers/esm/extends.js\");\n/* harmony import */ var _utils_verifyPlainObject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/verifyPlainObject */ \"(app-pages-browser)/./node_modules/react-redux/es/utils/verifyPlainObject.js\");\n/* harmony import */ var _invalidArgFactory__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./invalidArgFactory */ \"(app-pages-browser)/./node_modules/react-redux/es/connect/invalidArgFactory.js\");\n\n\n\nfunction defaultMergeProps(stateProps, dispatchProps, ownProps) {\n    // @ts-ignore\n    return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, ownProps, stateProps, dispatchProps);\n}\nfunction wrapMergePropsFunc(mergeProps) {\n    return function initMergePropsProxy(dispatch, param) {\n        let { displayName, areMergedPropsEqual } = param;\n        let hasRunOnce = false;\n        let mergedProps;\n        return function mergePropsProxy(stateProps, dispatchProps, ownProps) {\n            const nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n            if (hasRunOnce) {\n                if (!areMergedPropsEqual(nextMergedProps, mergedProps)) mergedProps = nextMergedProps;\n            } else {\n                hasRunOnce = true;\n                mergedProps = nextMergedProps;\n                if (true) (0,_utils_verifyPlainObject__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(mergedProps, displayName, \"mergeProps\");\n            }\n            return mergedProps;\n        };\n    };\n}\nfunction mergePropsFactory(mergeProps) {\n    return !mergeProps ? ()=>defaultMergeProps : typeof mergeProps === \"function\" ? wrapMergePropsFunc(mergeProps) : (0,_invalidArgFactory__WEBPACK_IMPORTED_MODULE_2__.createInvalidArgFactory)(mergeProps, \"mergeProps\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb25uZWN0L21lcmdlUHJvcHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQTBEO0FBQ0M7QUFDRztBQUN2RCxTQUFTRyxrQkFBa0JDLFVBQVUsRUFBRUMsYUFBYSxFQUFFQyxRQUFRO0lBQ25FLGFBQWE7SUFDYixPQUFPTiw4RUFBUUEsQ0FBQyxDQUFDLEdBQUdNLFVBQVVGLFlBQVlDO0FBQzVDO0FBQ08sU0FBU0UsbUJBQW1CQyxVQUFVO0lBQzNDLE9BQU8sU0FBU0Msb0JBQW9CQyxRQUFRLEVBQUUsS0FHN0M7WUFINkMsRUFDNUNDLFdBQVcsRUFDWEMsbUJBQW1CLEVBQ3BCLEdBSDZDO1FBSTVDLElBQUlDLGFBQWE7UUFDakIsSUFBSUM7UUFDSixPQUFPLFNBQVNDLGdCQUFnQlgsVUFBVSxFQUFFQyxhQUFhLEVBQUVDLFFBQVE7WUFDakUsTUFBTVUsa0JBQWtCUixXQUFXSixZQUFZQyxlQUFlQztZQUU5RCxJQUFJTyxZQUFZO2dCQUNkLElBQUksQ0FBQ0Qsb0JBQW9CSSxpQkFBaUJGLGNBQWNBLGNBQWNFO1lBQ3hFLE9BQU87Z0JBQ0xILGFBQWE7Z0JBQ2JDLGNBQWNFO2dCQUNkLElBQUlDLElBQXlCLEVBQWNoQixvRUFBaUJBLENBQUNhLGFBQWFILGFBQWE7WUFDekY7WUFFQSxPQUFPRztRQUNUO0lBQ0Y7QUFDRjtBQUNPLFNBQVNJLGtCQUFrQlYsVUFBVTtJQUMxQyxPQUFPLENBQUNBLGFBQWEsSUFBTUwsb0JBQW9CLE9BQU9LLGVBQWUsYUFBYUQsbUJBQW1CQyxjQUFjTiwyRUFBdUJBLENBQUNNLFlBQVk7QUFDekoiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL2Nvbm5lY3QvbWVyZ2VQcm9wcy5qcz9hNzFhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kc1wiO1xuaW1wb3J0IHZlcmlmeVBsYWluT2JqZWN0IGZyb20gJy4uL3V0aWxzL3ZlcmlmeVBsYWluT2JqZWN0JztcbmltcG9ydCB7IGNyZWF0ZUludmFsaWRBcmdGYWN0b3J5IH0gZnJvbSAnLi9pbnZhbGlkQXJnRmFjdG9yeSc7XG5leHBvcnQgZnVuY3Rpb24gZGVmYXVsdE1lcmdlUHJvcHMoc3RhdGVQcm9wcywgZGlzcGF0Y2hQcm9wcywgb3duUHJvcHMpIHtcbiAgLy8gQHRzLWlnbm9yZVxuICByZXR1cm4gX2V4dGVuZHMoe30sIG93blByb3BzLCBzdGF0ZVByb3BzLCBkaXNwYXRjaFByb3BzKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiB3cmFwTWVyZ2VQcm9wc0Z1bmMobWVyZ2VQcm9wcykge1xuICByZXR1cm4gZnVuY3Rpb24gaW5pdE1lcmdlUHJvcHNQcm94eShkaXNwYXRjaCwge1xuICAgIGRpc3BsYXlOYW1lLFxuICAgIGFyZU1lcmdlZFByb3BzRXF1YWxcbiAgfSkge1xuICAgIGxldCBoYXNSdW5PbmNlID0gZmFsc2U7XG4gICAgbGV0IG1lcmdlZFByb3BzO1xuICAgIHJldHVybiBmdW5jdGlvbiBtZXJnZVByb3BzUHJveHkoc3RhdGVQcm9wcywgZGlzcGF0Y2hQcm9wcywgb3duUHJvcHMpIHtcbiAgICAgIGNvbnN0IG5leHRNZXJnZWRQcm9wcyA9IG1lcmdlUHJvcHMoc3RhdGVQcm9wcywgZGlzcGF0Y2hQcm9wcywgb3duUHJvcHMpO1xuXG4gICAgICBpZiAoaGFzUnVuT25jZSkge1xuICAgICAgICBpZiAoIWFyZU1lcmdlZFByb3BzRXF1YWwobmV4dE1lcmdlZFByb3BzLCBtZXJnZWRQcm9wcykpIG1lcmdlZFByb3BzID0gbmV4dE1lcmdlZFByb3BzO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaGFzUnVuT25jZSA9IHRydWU7XG4gICAgICAgIG1lcmdlZFByb3BzID0gbmV4dE1lcmdlZFByb3BzO1xuICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykgdmVyaWZ5UGxhaW5PYmplY3QobWVyZ2VkUHJvcHMsIGRpc3BsYXlOYW1lLCAnbWVyZ2VQcm9wcycpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gbWVyZ2VkUHJvcHM7XG4gICAgfTtcbiAgfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBtZXJnZVByb3BzRmFjdG9yeShtZXJnZVByb3BzKSB7XG4gIHJldHVybiAhbWVyZ2VQcm9wcyA/ICgpID0+IGRlZmF1bHRNZXJnZVByb3BzIDogdHlwZW9mIG1lcmdlUHJvcHMgPT09ICdmdW5jdGlvbicgPyB3cmFwTWVyZ2VQcm9wc0Z1bmMobWVyZ2VQcm9wcykgOiBjcmVhdGVJbnZhbGlkQXJnRmFjdG9yeShtZXJnZVByb3BzLCAnbWVyZ2VQcm9wcycpO1xufSJdLCJuYW1lcyI6WyJfZXh0ZW5kcyIsInZlcmlmeVBsYWluT2JqZWN0IiwiY3JlYXRlSW52YWxpZEFyZ0ZhY3RvcnkiLCJkZWZhdWx0TWVyZ2VQcm9wcyIsInN0YXRlUHJvcHMiLCJkaXNwYXRjaFByb3BzIiwib3duUHJvcHMiLCJ3cmFwTWVyZ2VQcm9wc0Z1bmMiLCJtZXJnZVByb3BzIiwiaW5pdE1lcmdlUHJvcHNQcm94eSIsImRpc3BhdGNoIiwiZGlzcGxheU5hbWUiLCJhcmVNZXJnZWRQcm9wc0VxdWFsIiwiaGFzUnVuT25jZSIsIm1lcmdlZFByb3BzIiwibWVyZ2VQcm9wc1Byb3h5IiwibmV4dE1lcmdlZFByb3BzIiwicHJvY2VzcyIsIm1lcmdlUHJvcHNGYWN0b3J5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/es/connect/mergeProps.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/es/connect/selectorFactory.js":
/*!****************************************************************!*\
  !*** ./node_modules/react-redux/es/connect/selectorFactory.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ finalPropsSelectorFactory; },\n/* harmony export */   pureFinalPropsSelectorFactory: function() { return /* binding */ pureFinalPropsSelectorFactory; }\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ \"(app-pages-browser)/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js\");\n/* harmony import */ var _verifySubselectors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./verifySubselectors */ \"(app-pages-browser)/./node_modules/react-redux/es/connect/verifySubselectors.js\");\n\nconst _excluded = [\n    \"initMapStateToProps\",\n    \"initMapDispatchToProps\",\n    \"initMergeProps\"\n];\n\nfunction pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, param) {\n    let { areStatesEqual, areOwnPropsEqual, areStatePropsEqual } = param;\n    let hasRunAtLeastOnce = false;\n    let state;\n    let ownProps;\n    let stateProps;\n    let dispatchProps;\n    let mergedProps;\n    function handleFirstCall(firstState, firstOwnProps) {\n        state = firstState;\n        ownProps = firstOwnProps;\n        stateProps = mapStateToProps(state, ownProps);\n        dispatchProps = mapDispatchToProps(dispatch, ownProps);\n        mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n        hasRunAtLeastOnce = true;\n        return mergedProps;\n    }\n    function handleNewPropsAndNewState() {\n        stateProps = mapStateToProps(state, ownProps);\n        if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);\n        mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n        return mergedProps;\n    }\n    function handleNewProps() {\n        if (mapStateToProps.dependsOnOwnProps) stateProps = mapStateToProps(state, ownProps);\n        if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);\n        mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n        return mergedProps;\n    }\n    function handleNewState() {\n        const nextStateProps = mapStateToProps(state, ownProps);\n        const statePropsChanged = !areStatePropsEqual(nextStateProps, stateProps);\n        stateProps = nextStateProps;\n        if (statePropsChanged) mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n        return mergedProps;\n    }\n    function handleSubsequentCalls(nextState, nextOwnProps) {\n        const propsChanged = !areOwnPropsEqual(nextOwnProps, ownProps);\n        const stateChanged = !areStatesEqual(nextState, state, nextOwnProps, ownProps);\n        state = nextState;\n        ownProps = nextOwnProps;\n        if (propsChanged && stateChanged) return handleNewPropsAndNewState();\n        if (propsChanged) return handleNewProps();\n        if (stateChanged) return handleNewState();\n        return mergedProps;\n    }\n    return function pureFinalPropsSelector(nextState, nextOwnProps) {\n        return hasRunAtLeastOnce ? handleSubsequentCalls(nextState, nextOwnProps) : handleFirstCall(nextState, nextOwnProps);\n    };\n}\n// TODO: Add more comments\n// The selector returned by selectorFactory will memoize its results,\n// allowing connect's shouldComponentUpdate to return false if final\n// props have not changed.\nfunction finalPropsSelectorFactory(dispatch, _ref) {\n    let { initMapStateToProps, initMapDispatchToProps, initMergeProps } = _ref, options = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref, _excluded);\n    const mapStateToProps = initMapStateToProps(dispatch, options);\n    const mapDispatchToProps = initMapDispatchToProps(dispatch, options);\n    const mergeProps = initMergeProps(dispatch, options);\n    if (true) {\n        (0,_verifySubselectors__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(mapStateToProps, mapDispatchToProps, mergeProps);\n    }\n    return pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, options);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/es/connect/selectorFactory.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/es/connect/verifySubselectors.js":
/*!*******************************************************************!*\
  !*** ./node_modules/react-redux/es/connect/verifySubselectors.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ verifySubselectors; }\n/* harmony export */ });\n/* harmony import */ var _utils_warning__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/warning */ \"(app-pages-browser)/./node_modules/react-redux/es/utils/warning.js\");\n\nfunction verify(selector, methodName) {\n    if (!selector) {\n        throw new Error(\"Unexpected value for \".concat(methodName, \" in connect.\"));\n    } else if (methodName === \"mapStateToProps\" || methodName === \"mapDispatchToProps\") {\n        if (!Object.prototype.hasOwnProperty.call(selector, \"dependsOnOwnProps\")) {\n            (0,_utils_warning__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"The selector for \".concat(methodName, \" of connect did not specify a value for dependsOnOwnProps.\"));\n        }\n    }\n}\nfunction verifySubselectors(mapStateToProps, mapDispatchToProps, mergeProps) {\n    verify(mapStateToProps, \"mapStateToProps\");\n    verify(mapDispatchToProps, \"mapDispatchToProps\");\n    verify(mergeProps, \"mergeProps\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb25uZWN0L3ZlcmlmeVN1YnNlbGVjdG9ycy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF1QztBQUV2QyxTQUFTQyxPQUFPQyxRQUFRLEVBQUVDLFVBQVU7SUFDbEMsSUFBSSxDQUFDRCxVQUFVO1FBQ2IsTUFBTSxJQUFJRSxNQUFNLHdCQUFtQyxPQUFYRCxZQUFXO0lBQ3JELE9BQU8sSUFBSUEsZUFBZSxxQkFBcUJBLGVBQWUsc0JBQXNCO1FBQ2xGLElBQUksQ0FBQ0UsT0FBT0MsU0FBUyxDQUFDQyxjQUFjLENBQUNDLElBQUksQ0FBQ04sVUFBVSxzQkFBc0I7WUFDeEVGLDBEQUFPQSxDQUFDLG9CQUErQixPQUFYRyxZQUFXO1FBQ3pDO0lBQ0Y7QUFDRjtBQUVlLFNBQVNNLG1CQUFtQkMsZUFBZSxFQUFFQyxrQkFBa0IsRUFBRUMsVUFBVTtJQUN4RlgsT0FBT1MsaUJBQWlCO0lBQ3hCVCxPQUFPVSxvQkFBb0I7SUFDM0JWLE9BQU9XLFlBQVk7QUFDckIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL2Nvbm5lY3QvdmVyaWZ5U3Vic2VsZWN0b3JzLmpzPzE2MzUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHdhcm5pbmcgZnJvbSAnLi4vdXRpbHMvd2FybmluZyc7XG5cbmZ1bmN0aW9uIHZlcmlmeShzZWxlY3RvciwgbWV0aG9kTmFtZSkge1xuICBpZiAoIXNlbGVjdG9yKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGBVbmV4cGVjdGVkIHZhbHVlIGZvciAke21ldGhvZE5hbWV9IGluIGNvbm5lY3QuYCk7XG4gIH0gZWxzZSBpZiAobWV0aG9kTmFtZSA9PT0gJ21hcFN0YXRlVG9Qcm9wcycgfHwgbWV0aG9kTmFtZSA9PT0gJ21hcERpc3BhdGNoVG9Qcm9wcycpIHtcbiAgICBpZiAoIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzZWxlY3RvciwgJ2RlcGVuZHNPbk93blByb3BzJykpIHtcbiAgICAgIHdhcm5pbmcoYFRoZSBzZWxlY3RvciBmb3IgJHttZXRob2ROYW1lfSBvZiBjb25uZWN0IGRpZCBub3Qgc3BlY2lmeSBhIHZhbHVlIGZvciBkZXBlbmRzT25Pd25Qcm9wcy5gKTtcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdmVyaWZ5U3Vic2VsZWN0b3JzKG1hcFN0YXRlVG9Qcm9wcywgbWFwRGlzcGF0Y2hUb1Byb3BzLCBtZXJnZVByb3BzKSB7XG4gIHZlcmlmeShtYXBTdGF0ZVRvUHJvcHMsICdtYXBTdGF0ZVRvUHJvcHMnKTtcbiAgdmVyaWZ5KG1hcERpc3BhdGNoVG9Qcm9wcywgJ21hcERpc3BhdGNoVG9Qcm9wcycpO1xuICB2ZXJpZnkobWVyZ2VQcm9wcywgJ21lcmdlUHJvcHMnKTtcbn0iXSwibmFtZXMiOlsid2FybmluZyIsInZlcmlmeSIsInNlbGVjdG9yIiwibWV0aG9kTmFtZSIsIkVycm9yIiwiT2JqZWN0IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwidmVyaWZ5U3Vic2VsZWN0b3JzIiwibWFwU3RhdGVUb1Byb3BzIiwibWFwRGlzcGF0Y2hUb1Byb3BzIiwibWVyZ2VQcm9wcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/es/connect/verifySubselectors.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/es/connect/wrapMapToProps.js":
/*!***************************************************************!*\
  !*** ./node_modules/react-redux/es/connect/wrapMapToProps.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDependsOnOwnProps: function() { return /* binding */ getDependsOnOwnProps; },\n/* harmony export */   wrapMapToPropsConstant: function() { return /* binding */ wrapMapToPropsConstant; },\n/* harmony export */   wrapMapToPropsFunc: function() { return /* binding */ wrapMapToPropsFunc; }\n/* harmony export */ });\n/* harmony import */ var _utils_verifyPlainObject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/verifyPlainObject */ \"(app-pages-browser)/./node_modules/react-redux/es/utils/verifyPlainObject.js\");\n\nfunction wrapMapToPropsConstant(//  It seems that the dispatch argument\n//  could be a dispatch function in some cases (ex: whenMapDispatchToPropsIsMissing)\n//  and a state object in some others (ex: whenMapStateToPropsIsMissing)\n// eslint-disable-next-line no-unused-vars\ngetConstant) {\n    return function initConstantSelector(dispatch) {\n        const constant = getConstant(dispatch);\n        function constantSelector() {\n            return constant;\n        }\n        constantSelector.dependsOnOwnProps = false;\n        return constantSelector;\n    };\n} // dependsOnOwnProps is used by createMapToPropsProxy to determine whether to pass props as args\n// to the mapToProps function being wrapped. It is also used by makePurePropsSelector to determine\n// whether mapToProps needs to be invoked when props have changed.\n//\n// A length of one signals that mapToProps does not depend on props from the parent component.\n// A length of zero is assumed to mean mapToProps is getting args via arguments or ...args and\n// therefore not reporting its length accurately..\n// TODO Can this get pulled out so that we can subscribe directly to the store if we don't need ownProps?\nfunction getDependsOnOwnProps(mapToProps) {\n    return mapToProps.dependsOnOwnProps ? Boolean(mapToProps.dependsOnOwnProps) : mapToProps.length !== 1;\n} // Used by whenMapStateToPropsIsFunction and whenMapDispatchToPropsIsFunction,\n// this function wraps mapToProps in a proxy function which does several things:\n//\n//  * Detects whether the mapToProps function being called depends on props, which\n//    is used by selectorFactory to decide if it should reinvoke on props changes.\n//\n//  * On first call, handles mapToProps if returns another function, and treats that\n//    new function as the true mapToProps for subsequent calls.\n//\n//  * On first call, verifies the first result is a plain object, in order to warn\n//    the developer that their mapToProps function is not returning a valid result.\n//\nfunction wrapMapToPropsFunc(mapToProps, methodName) {\n    return function initProxySelector(dispatch, param) {\n        let { displayName } = param;\n        const proxy = function mapToPropsProxy(stateOrDispatch, ownProps) {\n            return proxy.dependsOnOwnProps ? proxy.mapToProps(stateOrDispatch, ownProps) : proxy.mapToProps(stateOrDispatch, undefined);\n        }; // allow detectFactoryAndVerify to get ownProps\n        proxy.dependsOnOwnProps = true;\n        proxy.mapToProps = function detectFactoryAndVerify(stateOrDispatch, ownProps) {\n            proxy.mapToProps = mapToProps;\n            proxy.dependsOnOwnProps = getDependsOnOwnProps(mapToProps);\n            let props = proxy(stateOrDispatch, ownProps);\n            if (typeof props === \"function\") {\n                proxy.mapToProps = props;\n                proxy.dependsOnOwnProps = getDependsOnOwnProps(props);\n                props = proxy(stateOrDispatch, ownProps);\n            }\n            if (true) (0,_utils_verifyPlainObject__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(props, displayName, methodName);\n            return props;\n        };\n        return proxy;\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb25uZWN0L3dyYXBNYXBUb1Byb3BzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMkQ7QUFDcEQsU0FBU0MsdUJBQ2hCLHVDQUF1QztBQUN2QyxvRkFBb0Y7QUFDcEYsd0VBQXdFO0FBQ3hFLDBDQUEwQztBQUMxQ0MsV0FBVztJQUNULE9BQU8sU0FBU0MscUJBQXFCQyxRQUFRO1FBQzNDLE1BQU1DLFdBQVdILFlBQVlFO1FBRTdCLFNBQVNFO1lBQ1AsT0FBT0Q7UUFDVDtRQUVBQyxpQkFBaUJDLGlCQUFpQixHQUFHO1FBQ3JDLE9BQU9EO0lBQ1Q7QUFDRixFQUFFLGdHQUFnRztBQUNsRyxrR0FBa0c7QUFDbEcsa0VBQWtFO0FBQ2xFLEVBQUU7QUFDRiw4RkFBOEY7QUFDOUYsOEZBQThGO0FBQzlGLGtEQUFrRDtBQUNsRCx5R0FBeUc7QUFFbEcsU0FBU0UscUJBQXFCQyxVQUFVO0lBQzdDLE9BQU9BLFdBQVdGLGlCQUFpQixHQUFHRyxRQUFRRCxXQUFXRixpQkFBaUIsSUFBSUUsV0FBV0UsTUFBTSxLQUFLO0FBQ3RHLEVBQUUsOEVBQThFO0FBQ2hGLGdGQUFnRjtBQUNoRixFQUFFO0FBQ0Ysa0ZBQWtGO0FBQ2xGLGtGQUFrRjtBQUNsRixFQUFFO0FBQ0Ysb0ZBQW9GO0FBQ3BGLCtEQUErRDtBQUMvRCxFQUFFO0FBQ0Ysa0ZBQWtGO0FBQ2xGLG1GQUFtRjtBQUNuRixFQUFFO0FBRUssU0FBU0MsbUJBQW1CSCxVQUFVLEVBQUVJLFVBQVU7SUFDdkQsT0FBTyxTQUFTQyxrQkFBa0JWLFFBQVEsRUFBRSxLQUUzQztZQUYyQyxFQUMxQ1csV0FBVyxFQUNaLEdBRjJDO1FBRzFDLE1BQU1DLFFBQVEsU0FBU0MsZ0JBQWdCQyxlQUFlLEVBQUVDLFFBQVE7WUFDOUQsT0FBT0gsTUFBTVQsaUJBQWlCLEdBQUdTLE1BQU1QLFVBQVUsQ0FBQ1MsaUJBQWlCQyxZQUFZSCxNQUFNUCxVQUFVLENBQUNTLGlCQUFpQkU7UUFDbkgsR0FBRywrQ0FBK0M7UUFHbERKLE1BQU1ULGlCQUFpQixHQUFHO1FBRTFCUyxNQUFNUCxVQUFVLEdBQUcsU0FBU1ksdUJBQXVCSCxlQUFlLEVBQUVDLFFBQVE7WUFDMUVILE1BQU1QLFVBQVUsR0FBR0E7WUFDbkJPLE1BQU1ULGlCQUFpQixHQUFHQyxxQkFBcUJDO1lBQy9DLElBQUlhLFFBQVFOLE1BQU1FLGlCQUFpQkM7WUFFbkMsSUFBSSxPQUFPRyxVQUFVLFlBQVk7Z0JBQy9CTixNQUFNUCxVQUFVLEdBQUdhO2dCQUNuQk4sTUFBTVQsaUJBQWlCLEdBQUdDLHFCQUFxQmM7Z0JBQy9DQSxRQUFRTixNQUFNRSxpQkFBaUJDO1lBQ2pDO1lBRUEsSUFBSUksSUFBeUIsRUFBY3ZCLG9FQUFpQkEsQ0FBQ3NCLE9BQU9QLGFBQWFGO1lBQ2pGLE9BQU9TO1FBQ1Q7UUFFQSxPQUFPTjtJQUNUO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL2Nvbm5lY3Qvd3JhcE1hcFRvUHJvcHMuanM/YmNkYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdmVyaWZ5UGxhaW5PYmplY3QgZnJvbSAnLi4vdXRpbHMvdmVyaWZ5UGxhaW5PYmplY3QnO1xuZXhwb3J0IGZ1bmN0aW9uIHdyYXBNYXBUb1Byb3BzQ29uc3RhbnQoIC8vICogTm90ZTpcbi8vICBJdCBzZWVtcyB0aGF0IHRoZSBkaXNwYXRjaCBhcmd1bWVudFxuLy8gIGNvdWxkIGJlIGEgZGlzcGF0Y2ggZnVuY3Rpb24gaW4gc29tZSBjYXNlcyAoZXg6IHdoZW5NYXBEaXNwYXRjaFRvUHJvcHNJc01pc3NpbmcpXG4vLyAgYW5kIGEgc3RhdGUgb2JqZWN0IGluIHNvbWUgb3RoZXJzIChleDogd2hlbk1hcFN0YXRlVG9Qcm9wc0lzTWlzc2luZylcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFyc1xuZ2V0Q29uc3RhbnQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGluaXRDb25zdGFudFNlbGVjdG9yKGRpc3BhdGNoKSB7XG4gICAgY29uc3QgY29uc3RhbnQgPSBnZXRDb25zdGFudChkaXNwYXRjaCk7XG5cbiAgICBmdW5jdGlvbiBjb25zdGFudFNlbGVjdG9yKCkge1xuICAgICAgcmV0dXJuIGNvbnN0YW50O1xuICAgIH1cblxuICAgIGNvbnN0YW50U2VsZWN0b3IuZGVwZW5kc09uT3duUHJvcHMgPSBmYWxzZTtcbiAgICByZXR1cm4gY29uc3RhbnRTZWxlY3RvcjtcbiAgfTtcbn0gLy8gZGVwZW5kc09uT3duUHJvcHMgaXMgdXNlZCBieSBjcmVhdGVNYXBUb1Byb3BzUHJveHkgdG8gZGV0ZXJtaW5lIHdoZXRoZXIgdG8gcGFzcyBwcm9wcyBhcyBhcmdzXG4vLyB0byB0aGUgbWFwVG9Qcm9wcyBmdW5jdGlvbiBiZWluZyB3cmFwcGVkLiBJdCBpcyBhbHNvIHVzZWQgYnkgbWFrZVB1cmVQcm9wc1NlbGVjdG9yIHRvIGRldGVybWluZVxuLy8gd2hldGhlciBtYXBUb1Byb3BzIG5lZWRzIHRvIGJlIGludm9rZWQgd2hlbiBwcm9wcyBoYXZlIGNoYW5nZWQuXG4vL1xuLy8gQSBsZW5ndGggb2Ygb25lIHNpZ25hbHMgdGhhdCBtYXBUb1Byb3BzIGRvZXMgbm90IGRlcGVuZCBvbiBwcm9wcyBmcm9tIHRoZSBwYXJlbnQgY29tcG9uZW50LlxuLy8gQSBsZW5ndGggb2YgemVybyBpcyBhc3N1bWVkIHRvIG1lYW4gbWFwVG9Qcm9wcyBpcyBnZXR0aW5nIGFyZ3MgdmlhIGFyZ3VtZW50cyBvciAuLi5hcmdzIGFuZFxuLy8gdGhlcmVmb3JlIG5vdCByZXBvcnRpbmcgaXRzIGxlbmd0aCBhY2N1cmF0ZWx5Li5cbi8vIFRPRE8gQ2FuIHRoaXMgZ2V0IHB1bGxlZCBvdXQgc28gdGhhdCB3ZSBjYW4gc3Vic2NyaWJlIGRpcmVjdGx5IHRvIHRoZSBzdG9yZSBpZiB3ZSBkb24ndCBuZWVkIG93blByb3BzP1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0RGVwZW5kc09uT3duUHJvcHMobWFwVG9Qcm9wcykge1xuICByZXR1cm4gbWFwVG9Qcm9wcy5kZXBlbmRzT25Pd25Qcm9wcyA/IEJvb2xlYW4obWFwVG9Qcm9wcy5kZXBlbmRzT25Pd25Qcm9wcykgOiBtYXBUb1Byb3BzLmxlbmd0aCAhPT0gMTtcbn0gLy8gVXNlZCBieSB3aGVuTWFwU3RhdGVUb1Byb3BzSXNGdW5jdGlvbiBhbmQgd2hlbk1hcERpc3BhdGNoVG9Qcm9wc0lzRnVuY3Rpb24sXG4vLyB0aGlzIGZ1bmN0aW9uIHdyYXBzIG1hcFRvUHJvcHMgaW4gYSBwcm94eSBmdW5jdGlvbiB3aGljaCBkb2VzIHNldmVyYWwgdGhpbmdzOlxuLy9cbi8vICAqIERldGVjdHMgd2hldGhlciB0aGUgbWFwVG9Qcm9wcyBmdW5jdGlvbiBiZWluZyBjYWxsZWQgZGVwZW5kcyBvbiBwcm9wcywgd2hpY2hcbi8vICAgIGlzIHVzZWQgYnkgc2VsZWN0b3JGYWN0b3J5IHRvIGRlY2lkZSBpZiBpdCBzaG91bGQgcmVpbnZva2Ugb24gcHJvcHMgY2hhbmdlcy5cbi8vXG4vLyAgKiBPbiBmaXJzdCBjYWxsLCBoYW5kbGVzIG1hcFRvUHJvcHMgaWYgcmV0dXJucyBhbm90aGVyIGZ1bmN0aW9uLCBhbmQgdHJlYXRzIHRoYXRcbi8vICAgIG5ldyBmdW5jdGlvbiBhcyB0aGUgdHJ1ZSBtYXBUb1Byb3BzIGZvciBzdWJzZXF1ZW50IGNhbGxzLlxuLy9cbi8vICAqIE9uIGZpcnN0IGNhbGwsIHZlcmlmaWVzIHRoZSBmaXJzdCByZXN1bHQgaXMgYSBwbGFpbiBvYmplY3QsIGluIG9yZGVyIHRvIHdhcm5cbi8vICAgIHRoZSBkZXZlbG9wZXIgdGhhdCB0aGVpciBtYXBUb1Byb3BzIGZ1bmN0aW9uIGlzIG5vdCByZXR1cm5pbmcgYSB2YWxpZCByZXN1bHQuXG4vL1xuXG5leHBvcnQgZnVuY3Rpb24gd3JhcE1hcFRvUHJvcHNGdW5jKG1hcFRvUHJvcHMsIG1ldGhvZE5hbWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGluaXRQcm94eVNlbGVjdG9yKGRpc3BhdGNoLCB7XG4gICAgZGlzcGxheU5hbWVcbiAgfSkge1xuICAgIGNvbnN0IHByb3h5ID0gZnVuY3Rpb24gbWFwVG9Qcm9wc1Byb3h5KHN0YXRlT3JEaXNwYXRjaCwgb3duUHJvcHMpIHtcbiAgICAgIHJldHVybiBwcm94eS5kZXBlbmRzT25Pd25Qcm9wcyA/IHByb3h5Lm1hcFRvUHJvcHMoc3RhdGVPckRpc3BhdGNoLCBvd25Qcm9wcykgOiBwcm94eS5tYXBUb1Byb3BzKHN0YXRlT3JEaXNwYXRjaCwgdW5kZWZpbmVkKTtcbiAgICB9OyAvLyBhbGxvdyBkZXRlY3RGYWN0b3J5QW5kVmVyaWZ5IHRvIGdldCBvd25Qcm9wc1xuXG5cbiAgICBwcm94eS5kZXBlbmRzT25Pd25Qcm9wcyA9IHRydWU7XG5cbiAgICBwcm94eS5tYXBUb1Byb3BzID0gZnVuY3Rpb24gZGV0ZWN0RmFjdG9yeUFuZFZlcmlmeShzdGF0ZU9yRGlzcGF0Y2gsIG93blByb3BzKSB7XG4gICAgICBwcm94eS5tYXBUb1Byb3BzID0gbWFwVG9Qcm9wcztcbiAgICAgIHByb3h5LmRlcGVuZHNPbk93blByb3BzID0gZ2V0RGVwZW5kc09uT3duUHJvcHMobWFwVG9Qcm9wcyk7XG4gICAgICBsZXQgcHJvcHMgPSBwcm94eShzdGF0ZU9yRGlzcGF0Y2gsIG93blByb3BzKTtcblxuICAgICAgaWYgKHR5cGVvZiBwcm9wcyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICBwcm94eS5tYXBUb1Byb3BzID0gcHJvcHM7XG4gICAgICAgIHByb3h5LmRlcGVuZHNPbk93blByb3BzID0gZ2V0RGVwZW5kc09uT3duUHJvcHMocHJvcHMpO1xuICAgICAgICBwcm9wcyA9IHByb3h5KHN0YXRlT3JEaXNwYXRjaCwgb3duUHJvcHMpO1xuICAgICAgfVxuXG4gICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykgdmVyaWZ5UGxhaW5PYmplY3QocHJvcHMsIGRpc3BsYXlOYW1lLCBtZXRob2ROYW1lKTtcbiAgICAgIHJldHVybiBwcm9wcztcbiAgICB9O1xuXG4gICAgcmV0dXJuIHByb3h5O1xuICB9O1xufSJdLCJuYW1lcyI6WyJ2ZXJpZnlQbGFpbk9iamVjdCIsIndyYXBNYXBUb1Byb3BzQ29uc3RhbnQiLCJnZXRDb25zdGFudCIsImluaXRDb25zdGFudFNlbGVjdG9yIiwiZGlzcGF0Y2giLCJjb25zdGFudCIsImNvbnN0YW50U2VsZWN0b3IiLCJkZXBlbmRzT25Pd25Qcm9wcyIsImdldERlcGVuZHNPbk93blByb3BzIiwibWFwVG9Qcm9wcyIsIkJvb2xlYW4iLCJsZW5ndGgiLCJ3cmFwTWFwVG9Qcm9wc0Z1bmMiLCJtZXRob2ROYW1lIiwiaW5pdFByb3h5U2VsZWN0b3IiLCJkaXNwbGF5TmFtZSIsInByb3h5IiwibWFwVG9Qcm9wc1Byb3h5Iiwic3RhdGVPckRpc3BhdGNoIiwib3duUHJvcHMiLCJ1bmRlZmluZWQiLCJkZXRlY3RGYWN0b3J5QW5kVmVyaWZ5IiwicHJvcHMiLCJwcm9jZXNzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/es/connect/wrapMapToProps.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/es/exports.js":
/*!************************************************!*\
  !*** ./node_modules/react-redux/es/exports.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Provider: function() { return /* reexport safe */ _components_Provider__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; },\n/* harmony export */   ReactReduxContext: function() { return /* reexport safe */ _components_Context__WEBPACK_IMPORTED_MODULE_2__.ReactReduxContext; },\n/* harmony export */   connect: function() { return /* reexport safe */ _components_connect__WEBPACK_IMPORTED_MODULE_1__[\"default\"]; },\n/* harmony export */   createDispatchHook: function() { return /* reexport safe */ _hooks_useDispatch__WEBPACK_IMPORTED_MODULE_3__.createDispatchHook; },\n/* harmony export */   createSelectorHook: function() { return /* reexport safe */ _hooks_useSelector__WEBPACK_IMPORTED_MODULE_4__.createSelectorHook; },\n/* harmony export */   createStoreHook: function() { return /* reexport safe */ _hooks_useStore__WEBPACK_IMPORTED_MODULE_5__.createStoreHook; },\n/* harmony export */   shallowEqual: function() { return /* reexport safe */ _utils_shallowEqual__WEBPACK_IMPORTED_MODULE_6__[\"default\"]; },\n/* harmony export */   useDispatch: function() { return /* reexport safe */ _hooks_useDispatch__WEBPACK_IMPORTED_MODULE_3__.useDispatch; },\n/* harmony export */   useSelector: function() { return /* reexport safe */ _hooks_useSelector__WEBPACK_IMPORTED_MODULE_4__.useSelector; },\n/* harmony export */   useStore: function() { return /* reexport safe */ _hooks_useStore__WEBPACK_IMPORTED_MODULE_5__.useStore; }\n/* harmony export */ });\n/* harmony import */ var _components_Provider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/Provider */ \"(app-pages-browser)/./node_modules/react-redux/es/components/Provider.js\");\n/* harmony import */ var _components_connect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/connect */ \"(app-pages-browser)/./node_modules/react-redux/es/components/connect.js\");\n/* harmony import */ var _components_Context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/Context */ \"(app-pages-browser)/./node_modules/react-redux/es/components/Context.js\");\n/* harmony import */ var _hooks_useDispatch__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./hooks/useDispatch */ \"(app-pages-browser)/./node_modules/react-redux/es/hooks/useDispatch.js\");\n/* harmony import */ var _hooks_useSelector__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./hooks/useSelector */ \"(app-pages-browser)/./node_modules/react-redux/es/hooks/useSelector.js\");\n/* harmony import */ var _hooks_useStore__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./hooks/useStore */ \"(app-pages-browser)/./node_modules/react-redux/es/hooks/useStore.js\");\n/* harmony import */ var _utils_shallowEqual__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/shallowEqual */ \"(app-pages-browser)/./node_modules/react-redux/es/utils/shallowEqual.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./types */ \"(app-pages-browser)/./node_modules/react-redux/es/types.js\");\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9leHBvcnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUE2QztBQUNGO0FBQ2M7QUFDYTtBQUNBO0FBQ1Q7QUFDYjtBQUN4QjtBQUNtSSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvZXhwb3J0cy5qcz8xYmJlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBQcm92aWRlciBmcm9tICcuL2NvbXBvbmVudHMvUHJvdmlkZXInO1xuaW1wb3J0IGNvbm5lY3QgZnJvbSAnLi9jb21wb25lbnRzL2Nvbm5lY3QnO1xuaW1wb3J0IHsgUmVhY3RSZWR1eENvbnRleHQgfSBmcm9tICcuL2NvbXBvbmVudHMvQ29udGV4dCc7XG5pbXBvcnQgeyB1c2VEaXNwYXRjaCwgY3JlYXRlRGlzcGF0Y2hIb29rIH0gZnJvbSAnLi9ob29rcy91c2VEaXNwYXRjaCc7XG5pbXBvcnQgeyB1c2VTZWxlY3RvciwgY3JlYXRlU2VsZWN0b3JIb29rIH0gZnJvbSAnLi9ob29rcy91c2VTZWxlY3Rvcic7XG5pbXBvcnQgeyB1c2VTdG9yZSwgY3JlYXRlU3RvcmVIb29rIH0gZnJvbSAnLi9ob29rcy91c2VTdG9yZSc7XG5pbXBvcnQgc2hhbGxvd0VxdWFsIGZyb20gJy4vdXRpbHMvc2hhbGxvd0VxdWFsJztcbmV4cG9ydCAqIGZyb20gJy4vdHlwZXMnO1xuZXhwb3J0IHsgUHJvdmlkZXIsIFJlYWN0UmVkdXhDb250ZXh0LCBjb25uZWN0LCB1c2VEaXNwYXRjaCwgY3JlYXRlRGlzcGF0Y2hIb29rLCB1c2VTZWxlY3RvciwgY3JlYXRlU2VsZWN0b3JIb29rLCB1c2VTdG9yZSwgY3JlYXRlU3RvcmVIb29rLCBzaGFsbG93RXF1YWwgfTsiXSwibmFtZXMiOlsiUHJvdmlkZXIiLCJjb25uZWN0IiwiUmVhY3RSZWR1eENvbnRleHQiLCJ1c2VEaXNwYXRjaCIsImNyZWF0ZURpc3BhdGNoSG9vayIsInVzZVNlbGVjdG9yIiwiY3JlYXRlU2VsZWN0b3JIb29rIiwidXNlU3RvcmUiLCJjcmVhdGVTdG9yZUhvb2siLCJzaGFsbG93RXF1YWwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/es/exports.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/es/hooks/useDispatch.js":
/*!**********************************************************!*\
  !*** ./node_modules/react-redux/es/hooks/useDispatch.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createDispatchHook: function() { return /* binding */ createDispatchHook; },\n/* harmony export */   useDispatch: function() { return /* binding */ useDispatch; }\n/* harmony export */ });\n/* harmony import */ var _components_Context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components/Context */ \"(app-pages-browser)/./node_modules/react-redux/es/components/Context.js\");\n/* harmony import */ var _useStore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./useStore */ \"(app-pages-browser)/./node_modules/react-redux/es/hooks/useStore.js\");\n\n\n/**\r\n * Hook factory, which creates a `useDispatch` hook bound to a given context.\r\n *\r\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\r\n * @returns {Function} A `useDispatch` hook bound to the specified context.\r\n */ function createDispatchHook() {\n    let context = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : _components_Context__WEBPACK_IMPORTED_MODULE_0__.ReactReduxContext;\n    var _s = $RefreshSig$();\n    const useStore = context === _components_Context__WEBPACK_IMPORTED_MODULE_0__.ReactReduxContext ? _useStore__WEBPACK_IMPORTED_MODULE_1__.useStore : (0,_useStore__WEBPACK_IMPORTED_MODULE_1__.createStoreHook)(context);\n    return _s(function useDispatch() {\n        _s();\n        const store = useStore(); // @ts-ignore\n        return store.dispatch;\n    }, \"lacCqcEtsbxX3PAG/fPlTuRiPg0=\", false, function() {\n        return [\n            useStore\n        ];\n    });\n}\n/**\r\n * A hook to access the redux `dispatch` function.\r\n *\r\n * @returns {any|function} redux store's `dispatch` function\r\n *\r\n * @example\r\n *\r\n * import React, { useCallback } from 'react'\r\n * import { useDispatch } from 'react-redux'\r\n *\r\n * export const CounterComponent = ({ value }) => {\r\n *   const dispatch = useDispatch()\r\n *   const increaseCounter = useCallback(() => dispatch({ type: 'increase-counter' }), [])\r\n *   return (\r\n *     <div>\r\n *       <span>{value}</span>\r\n *       <button onClick={increaseCounter}>Increase counter</button>\r\n *     </div>\r\n *   )\r\n * }\r\n */ const useDispatch = /*#__PURE__*/ createDispatchHook();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9ob29rcy91c2VEaXNwYXRjaC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTBEO0FBQ2dCO0FBQzFFOzs7OztDQUtDLEdBRU0sU0FBU0k7UUFBbUJDLFVBQUFBLGlFQUFVTCxrRUFBaUJBOztJQUM1RCxNQUFNQyxXQUNOSSxZQUFZTCxrRUFBaUJBLEdBQUdFLCtDQUFlQSxHQUFHQywwREFBZUEsQ0FBQ0U7SUFDbEUsVUFBTyxTQUFTQzs7UUFDZCxNQUFNQyxRQUFRTixZQUFZLGFBQWE7UUFFdkMsT0FBT00sTUFBTUMsUUFBUTtJQUN2Qjs7WUFIZ0JQOzs7QUFJbEI7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Q0FvQkMsR0FFTSxNQUFNSyxjQUFjLFdBQVcsR0FBRUYscUJBQXFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9ob29rcy91c2VEaXNwYXRjaC5qcz82NDI3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJlYWN0UmVkdXhDb250ZXh0IH0gZnJvbSAnLi4vY29tcG9uZW50cy9Db250ZXh0JztcbmltcG9ydCB7IHVzZVN0b3JlIGFzIHVzZURlZmF1bHRTdG9yZSwgY3JlYXRlU3RvcmVIb29rIH0gZnJvbSAnLi91c2VTdG9yZSc7XG4vKipcclxuICogSG9vayBmYWN0b3J5LCB3aGljaCBjcmVhdGVzIGEgYHVzZURpc3BhdGNoYCBob29rIGJvdW5kIHRvIGEgZ2l2ZW4gY29udGV4dC5cclxuICpcclxuICogQHBhcmFtIHtSZWFjdC5Db250ZXh0fSBbY29udGV4dD1SZWFjdFJlZHV4Q29udGV4dF0gQ29udGV4dCBwYXNzZWQgdG8geW91ciBgPFByb3ZpZGVyPmAuXHJcbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gQSBgdXNlRGlzcGF0Y2hgIGhvb2sgYm91bmQgdG8gdGhlIHNwZWNpZmllZCBjb250ZXh0LlxyXG4gKi9cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZURpc3BhdGNoSG9vayhjb250ZXh0ID0gUmVhY3RSZWR1eENvbnRleHQpIHtcbiAgY29uc3QgdXNlU3RvcmUgPSAvLyBAdHMtaWdub3JlXG4gIGNvbnRleHQgPT09IFJlYWN0UmVkdXhDb250ZXh0ID8gdXNlRGVmYXVsdFN0b3JlIDogY3JlYXRlU3RvcmVIb29rKGNvbnRleHQpO1xuICByZXR1cm4gZnVuY3Rpb24gdXNlRGlzcGF0Y2goKSB7XG4gICAgY29uc3Qgc3RvcmUgPSB1c2VTdG9yZSgpOyAvLyBAdHMtaWdub3JlXG5cbiAgICByZXR1cm4gc3RvcmUuZGlzcGF0Y2g7XG4gIH07XG59XG4vKipcclxuICogQSBob29rIHRvIGFjY2VzcyB0aGUgcmVkdXggYGRpc3BhdGNoYCBmdW5jdGlvbi5cclxuICpcclxuICogQHJldHVybnMge2FueXxmdW5jdGlvbn0gcmVkdXggc3RvcmUncyBgZGlzcGF0Y2hgIGZ1bmN0aW9uXHJcbiAqXHJcbiAqIEBleGFtcGxlXHJcbiAqXHJcbiAqIGltcG9ydCBSZWFjdCwgeyB1c2VDYWxsYmFjayB9IGZyb20gJ3JlYWN0J1xyXG4gKiBpbXBvcnQgeyB1c2VEaXNwYXRjaCB9IGZyb20gJ3JlYWN0LXJlZHV4J1xyXG4gKlxyXG4gKiBleHBvcnQgY29uc3QgQ291bnRlckNvbXBvbmVudCA9ICh7IHZhbHVlIH0pID0+IHtcclxuICogICBjb25zdCBkaXNwYXRjaCA9IHVzZURpc3BhdGNoKClcclxuICogICBjb25zdCBpbmNyZWFzZUNvdW50ZXIgPSB1c2VDYWxsYmFjaygoKSA9PiBkaXNwYXRjaCh7IHR5cGU6ICdpbmNyZWFzZS1jb3VudGVyJyB9KSwgW10pXHJcbiAqICAgcmV0dXJuIChcclxuICogICAgIDxkaXY+XHJcbiAqICAgICAgIDxzcGFuPnt2YWx1ZX08L3NwYW4+XHJcbiAqICAgICAgIDxidXR0b24gb25DbGljaz17aW5jcmVhc2VDb3VudGVyfT5JbmNyZWFzZSBjb3VudGVyPC9idXR0b24+XHJcbiAqICAgICA8L2Rpdj5cclxuICogICApXHJcbiAqIH1cclxuICovXG5cbmV4cG9ydCBjb25zdCB1c2VEaXNwYXRjaCA9IC8qI19fUFVSRV9fKi9jcmVhdGVEaXNwYXRjaEhvb2soKTsiXSwibmFtZXMiOlsiUmVhY3RSZWR1eENvbnRleHQiLCJ1c2VTdG9yZSIsInVzZURlZmF1bHRTdG9yZSIsImNyZWF0ZVN0b3JlSG9vayIsImNyZWF0ZURpc3BhdGNoSG9vayIsImNvbnRleHQiLCJ1c2VEaXNwYXRjaCIsInN0b3JlIiwiZGlzcGF0Y2giXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/es/hooks/useDispatch.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/es/hooks/useReduxContext.js":
/*!**************************************************************!*\
  !*** ./node_modules/react-redux/es/hooks/useReduxContext.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createReduxContextHook: function() { return /* binding */ createReduxContextHook; },\n/* harmony export */   useReduxContext: function() { return /* binding */ useReduxContext; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _components_Context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/Context */ \"(app-pages-browser)/./node_modules/react-redux/es/components/Context.js\");\n\n\n/**\r\n * Hook factory, which creates a `useReduxContext` hook bound to a given context. This is a low-level\r\n * hook that you should usually not need to call directly.\r\n *\r\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\r\n * @returns {Function} A `useReduxContext` hook bound to the specified context.\r\n */ function createReduxContextHook() {\n    let context = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : _components_Context__WEBPACK_IMPORTED_MODULE_1__.ReactReduxContext;\n    var _s = $RefreshSig$();\n    return _s(function useReduxContext() {\n        _s();\n        const contextValue = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(context);\n        if ( true && !contextValue) {\n            throw new Error(\"could not find react-redux context value; please ensure the component is wrapped in a <Provider>\");\n        }\n        return contextValue;\n    }, \"LIxFXvZbUdXE/TWxKLLXMjM3Mig=\");\n}\n/**\r\n * A hook to access the value of the `ReactReduxContext`. This is a low-level\r\n * hook that you should usually not need to call directly.\r\n *\r\n * @returns {any} the value of the `ReactReduxContext`\r\n *\r\n * @example\r\n *\r\n * import React from 'react'\r\n * import { useReduxContext } from 'react-redux'\r\n *\r\n * export const CounterComponent = () => {\r\n *   const { store } = useReduxContext()\r\n *   return <div>{store.getState()}</div>\r\n * }\r\n */ const useReduxContext = /*#__PURE__*/ createReduxContextHook();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9ob29rcy91c2VSZWR1eENvbnRleHQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBbUM7QUFDdUI7QUFFMUQ7Ozs7OztDQU1DLEdBQ00sU0FBU0U7UUFBdUJDLFVBQUFBLGlFQUFVRixrRUFBaUJBOztJQUNoRSxVQUFPLFNBQVNHOztRQUNkLE1BQU1DLGVBQWVMLGlEQUFVQSxDQUFDRztRQUVoQyxJQUFJRyxLQUF5QixJQUFnQixDQUFDRCxjQUFjO1lBQzFELE1BQU0sSUFBSUUsTUFBTTtRQUNsQjtRQUVBLE9BQU9GO0lBQ1Q7QUFDRjtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Q0FlQyxHQUVNLE1BQU1ELGtCQUFrQixXQUFXLEdBQUVGLHlCQUF5QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvaG9va3MvdXNlUmVkdXhDb250ZXh0LmpzPzkwNDkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlQ29udGV4dCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFJlYWN0UmVkdXhDb250ZXh0IH0gZnJvbSAnLi4vY29tcG9uZW50cy9Db250ZXh0JztcblxuLyoqXHJcbiAqIEhvb2sgZmFjdG9yeSwgd2hpY2ggY3JlYXRlcyBhIGB1c2VSZWR1eENvbnRleHRgIGhvb2sgYm91bmQgdG8gYSBnaXZlbiBjb250ZXh0LiBUaGlzIGlzIGEgbG93LWxldmVsXHJcbiAqIGhvb2sgdGhhdCB5b3Ugc2hvdWxkIHVzdWFsbHkgbm90IG5lZWQgdG8gY2FsbCBkaXJlY3RseS5cclxuICpcclxuICogQHBhcmFtIHtSZWFjdC5Db250ZXh0fSBbY29udGV4dD1SZWFjdFJlZHV4Q29udGV4dF0gQ29udGV4dCBwYXNzZWQgdG8geW91ciBgPFByb3ZpZGVyPmAuXHJcbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gQSBgdXNlUmVkdXhDb250ZXh0YCBob29rIGJvdW5kIHRvIHRoZSBzcGVjaWZpZWQgY29udGV4dC5cclxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlUmVkdXhDb250ZXh0SG9vayhjb250ZXh0ID0gUmVhY3RSZWR1eENvbnRleHQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVzZVJlZHV4Q29udGV4dCgpIHtcbiAgICBjb25zdCBjb250ZXh0VmFsdWUgPSB1c2VDb250ZXh0KGNvbnRleHQpO1xuXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgIWNvbnRleHRWYWx1ZSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdjb3VsZCBub3QgZmluZCByZWFjdC1yZWR1eCBjb250ZXh0IHZhbHVlOyBwbGVhc2UgZW5zdXJlIHRoZSBjb21wb25lbnQgaXMgd3JhcHBlZCBpbiBhIDxQcm92aWRlcj4nKTtcbiAgICB9XG5cbiAgICByZXR1cm4gY29udGV4dFZhbHVlO1xuICB9O1xufVxuLyoqXHJcbiAqIEEgaG9vayB0byBhY2Nlc3MgdGhlIHZhbHVlIG9mIHRoZSBgUmVhY3RSZWR1eENvbnRleHRgLiBUaGlzIGlzIGEgbG93LWxldmVsXHJcbiAqIGhvb2sgdGhhdCB5b3Ugc2hvdWxkIHVzdWFsbHkgbm90IG5lZWQgdG8gY2FsbCBkaXJlY3RseS5cclxuICpcclxuICogQHJldHVybnMge2FueX0gdGhlIHZhbHVlIG9mIHRoZSBgUmVhY3RSZWR1eENvbnRleHRgXHJcbiAqXHJcbiAqIEBleGFtcGxlXHJcbiAqXHJcbiAqIGltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcclxuICogaW1wb3J0IHsgdXNlUmVkdXhDb250ZXh0IH0gZnJvbSAncmVhY3QtcmVkdXgnXHJcbiAqXHJcbiAqIGV4cG9ydCBjb25zdCBDb3VudGVyQ29tcG9uZW50ID0gKCkgPT4ge1xyXG4gKiAgIGNvbnN0IHsgc3RvcmUgfSA9IHVzZVJlZHV4Q29udGV4dCgpXHJcbiAqICAgcmV0dXJuIDxkaXY+e3N0b3JlLmdldFN0YXRlKCl9PC9kaXY+XHJcbiAqIH1cclxuICovXG5cbmV4cG9ydCBjb25zdCB1c2VSZWR1eENvbnRleHQgPSAvKiNfX1BVUkVfXyovY3JlYXRlUmVkdXhDb250ZXh0SG9vaygpOyJdLCJuYW1lcyI6WyJ1c2VDb250ZXh0IiwiUmVhY3RSZWR1eENvbnRleHQiLCJjcmVhdGVSZWR1eENvbnRleHRIb29rIiwiY29udGV4dCIsInVzZVJlZHV4Q29udGV4dCIsImNvbnRleHRWYWx1ZSIsInByb2Nlc3MiLCJFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/es/hooks/useReduxContext.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/es/hooks/useSelector.js":
/*!**********************************************************!*\
  !*** ./node_modules/react-redux/es/hooks/useSelector.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createSelectorHook: function() { return /* binding */ createSelectorHook; },\n/* harmony export */   initializeUseSelector: function() { return /* binding */ initializeUseSelector; },\n/* harmony export */   useSelector: function() { return /* binding */ useSelector; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _useReduxContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./useReduxContext */ \"(app-pages-browser)/./node_modules/react-redux/es/hooks/useReduxContext.js\");\n/* harmony import */ var _components_Context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/Context */ \"(app-pages-browser)/./node_modules/react-redux/es/components/Context.js\");\n/* harmony import */ var _utils_useSyncExternalStore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/useSyncExternalStore */ \"(app-pages-browser)/./node_modules/react-redux/es/utils/useSyncExternalStore.js\");\n\n\n\n\nlet useSyncExternalStoreWithSelector = _utils_useSyncExternalStore__WEBPACK_IMPORTED_MODULE_3__.notInitialized;\nconst initializeUseSelector = (fn)=>{\n    useSyncExternalStoreWithSelector = fn;\n};\nconst refEquality = (a, b)=>a === b;\n/**\r\n * Hook factory, which creates a `useSelector` hook bound to a given context.\r\n *\r\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\r\n * @returns {Function} A `useSelector` hook bound to the specified context.\r\n */ function createSelectorHook() {\n    let context = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : _components_Context__WEBPACK_IMPORTED_MODULE_2__.ReactReduxContext;\n    var _s = $RefreshSig$();\n    const useReduxContext = context === _components_Context__WEBPACK_IMPORTED_MODULE_2__.ReactReduxContext ? _useReduxContext__WEBPACK_IMPORTED_MODULE_1__.useReduxContext : (0,_useReduxContext__WEBPACK_IMPORTED_MODULE_1__.createReduxContextHook)(context);\n    return _s(function useSelector(selector) {\n        let equalityFnOrOptions = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        _s();\n        const { equalityFn = refEquality, stabilityCheck = undefined, noopCheck = undefined } = typeof equalityFnOrOptions === \"function\" ? {\n            equalityFn: equalityFnOrOptions\n        } : equalityFnOrOptions;\n        if (true) {\n            if (!selector) {\n                throw new Error(\"You must pass a selector to useSelector\");\n            }\n            if (typeof selector !== \"function\") {\n                throw new Error(\"You must pass a function as a selector to useSelector\");\n            }\n            if (typeof equalityFn !== \"function\") {\n                throw new Error(\"You must pass a function as an equality function to useSelector\");\n            }\n        }\n        const { store, subscription, getServerState, stabilityCheck: globalStabilityCheck, noopCheck: globalNoopCheck } = useReduxContext();\n        const firstRun = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(true);\n        const wrappedSelector = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n            [selector.name] (state) {\n                const selected = selector(state);\n                if (true) {\n                    const finalStabilityCheck = typeof stabilityCheck === \"undefined\" ? globalStabilityCheck : stabilityCheck;\n                    if (finalStabilityCheck === \"always\" || finalStabilityCheck === \"once\" && firstRun.current) {\n                        const toCompare = selector(state);\n                        if (!equalityFn(selected, toCompare)) {\n                            let stack = undefined;\n                            try {\n                                throw new Error();\n                            } catch (e) {\n                                ;\n                                ({ stack } = e);\n                            }\n                            console.warn(\"Selector \" + (selector.name || \"unknown\") + \" returned a different result when called with the same parameters. This can lead to unnecessary rerenders.\" + \"\\nSelectors that return a new reference (such as an object or an array) should be memoized: https://redux.js.org/usage/deriving-data-selectors#optimizing-selectors-with-memoization\", {\n                                state,\n                                selected,\n                                selected2: toCompare,\n                                stack\n                            });\n                        }\n                    }\n                    const finalNoopCheck = typeof noopCheck === \"undefined\" ? globalNoopCheck : noopCheck;\n                    if (finalNoopCheck === \"always\" || finalNoopCheck === \"once\" && firstRun.current) {\n                        // @ts-ignore\n                        if (selected === state) {\n                            let stack = undefined;\n                            try {\n                                throw new Error();\n                            } catch (e) {\n                                ;\n                                ({ stack } = e);\n                            }\n                            console.warn(\"Selector \" + (selector.name || \"unknown\") + \" returned the root state when called. This can lead to unnecessary rerenders.\" + \"\\nSelectors that return the entire state are almost certainly a mistake, as they will cause a rerender whenever *anything* in state changes.\", {\n                                stack\n                            });\n                        }\n                    }\n                    if (firstRun.current) firstRun.current = false;\n                }\n                return selected;\n            }\n        }[selector.name], [\n            selector,\n            globalStabilityCheck,\n            stabilityCheck\n        ]);\n        const selectedState = useSyncExternalStoreWithSelector(subscription.addNestedSub, store.getState, getServerState || store.getState, wrappedSelector, equalityFn);\n        (0,react__WEBPACK_IMPORTED_MODULE_0__.useDebugValue)(selectedState);\n        return selectedState;\n    }, \"MU0BmHfhqjviNfmYfQ7AwmaymmY=\", false, function() {\n        return [\n            useReduxContext,\n            useSyncExternalStoreWithSelector\n        ];\n    });\n}\n/**\r\n * A hook to access the redux store's state. This hook takes a selector function\r\n * as an argument. The selector is called with the store state.\r\n *\r\n * This hook takes an optional equality comparison function as the second parameter\r\n * that allows you to customize the way the selected state is compared to determine\r\n * whether the component needs to be re-rendered.\r\n *\r\n * @param {Function} selector the selector function\r\n * @param {Function=} equalityFn the function that will be used to determine equality\r\n *\r\n * @returns {any} the selected state\r\n *\r\n * @example\r\n *\r\n * import React from 'react'\r\n * import { useSelector } from 'react-redux'\r\n *\r\n * export const CounterComponent = () => {\r\n *   const counter = useSelector(state => state.counter)\r\n *   return <div>{counter}</div>\r\n * }\r\n */ const useSelector = /*#__PURE__*/ createSelectorHook();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/es/hooks/useSelector.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/es/hooks/useStore.js":
/*!*******************************************************!*\
  !*** ./node_modules/react-redux/es/hooks/useStore.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createStoreHook: function() { return /* binding */ createStoreHook; },\n/* harmony export */   useStore: function() { return /* binding */ useStore; }\n/* harmony export */ });\n/* harmony import */ var _components_Context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components/Context */ \"(app-pages-browser)/./node_modules/react-redux/es/components/Context.js\");\n/* harmony import */ var _useReduxContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./useReduxContext */ \"(app-pages-browser)/./node_modules/react-redux/es/hooks/useReduxContext.js\");\n\n\n/**\r\n * Hook factory, which creates a `useStore` hook bound to a given context.\r\n *\r\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\r\n * @returns {Function} A `useStore` hook bound to the specified context.\r\n */ function createStoreHook() {\n    let context = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : _components_Context__WEBPACK_IMPORTED_MODULE_0__.ReactReduxContext;\n    var _s = $RefreshSig$();\n    const useReduxContext = context === _components_Context__WEBPACK_IMPORTED_MODULE_0__.ReactReduxContext ? _useReduxContext__WEBPACK_IMPORTED_MODULE_1__.useReduxContext : (0,_useReduxContext__WEBPACK_IMPORTED_MODULE_1__.createReduxContextHook)(context);\n    return _s(function useStore() {\n        _s();\n        const { store } = useReduxContext(); // @ts-ignore\n        return store;\n    }, \"qjqE1P4cxIR34tJenP4fiRmGXu0=\", false, function() {\n        return [\n            useReduxContext\n        ];\n    });\n}\n/**\r\n * A hook to access the redux store.\r\n *\r\n * @returns {any} the redux store\r\n *\r\n * @example\r\n *\r\n * import React from 'react'\r\n * import { useStore } from 'react-redux'\r\n *\r\n * export const ExampleComponent = () => {\r\n *   const store = useStore()\r\n *   return <div>{store.getState()}</div>\r\n * }\r\n */ const useStore = /*#__PURE__*/ createStoreHook();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9ob29rcy91c2VTdG9yZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTBEO0FBQzRDO0FBQ3RHOzs7OztDQUtDLEdBRU0sU0FBU0k7UUFBZ0JDLFVBQUFBLGlFQUFVTCxrRUFBaUJBOztJQUN6RCxNQUFNQyxrQkFDTkksWUFBWUwsa0VBQWlCQSxHQUFHRSw2REFBc0JBLEdBQ3REQyx3RUFBc0JBLENBQUNFO0lBQ3ZCLFVBQU8sU0FBU0M7O1FBQ2QsTUFBTSxFQUNKQyxLQUFLLEVBQ04sR0FBR04sbUJBQW1CLGFBQWE7UUFFcEMsT0FBT007SUFDVDs7WUFITU47OztBQUlSO0FBQ0E7Ozs7Ozs7Ozs7Ozs7O0NBY0MsR0FFTSxNQUFNSyxXQUFXLFdBQVcsR0FBRUYsa0JBQWtCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9ob29rcy91c2VTdG9yZS5qcz8zYmQ1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJlYWN0UmVkdXhDb250ZXh0IH0gZnJvbSAnLi4vY29tcG9uZW50cy9Db250ZXh0JztcbmltcG9ydCB7IHVzZVJlZHV4Q29udGV4dCBhcyB1c2VEZWZhdWx0UmVkdXhDb250ZXh0LCBjcmVhdGVSZWR1eENvbnRleHRIb29rIH0gZnJvbSAnLi91c2VSZWR1eENvbnRleHQnO1xuLyoqXHJcbiAqIEhvb2sgZmFjdG9yeSwgd2hpY2ggY3JlYXRlcyBhIGB1c2VTdG9yZWAgaG9vayBib3VuZCB0byBhIGdpdmVuIGNvbnRleHQuXHJcbiAqXHJcbiAqIEBwYXJhbSB7UmVhY3QuQ29udGV4dH0gW2NvbnRleHQ9UmVhY3RSZWR1eENvbnRleHRdIENvbnRleHQgcGFzc2VkIHRvIHlvdXIgYDxQcm92aWRlcj5gLlxyXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IEEgYHVzZVN0b3JlYCBob29rIGJvdW5kIHRvIHRoZSBzcGVjaWZpZWQgY29udGV4dC5cclxuICovXG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTdG9yZUhvb2soY29udGV4dCA9IFJlYWN0UmVkdXhDb250ZXh0KSB7XG4gIGNvbnN0IHVzZVJlZHV4Q29udGV4dCA9IC8vIEB0cy1pZ25vcmVcbiAgY29udGV4dCA9PT0gUmVhY3RSZWR1eENvbnRleHQgPyB1c2VEZWZhdWx0UmVkdXhDb250ZXh0IDogLy8gQHRzLWlnbm9yZVxuICBjcmVhdGVSZWR1eENvbnRleHRIb29rKGNvbnRleHQpO1xuICByZXR1cm4gZnVuY3Rpb24gdXNlU3RvcmUoKSB7XG4gICAgY29uc3Qge1xuICAgICAgc3RvcmVcbiAgICB9ID0gdXNlUmVkdXhDb250ZXh0KCk7IC8vIEB0cy1pZ25vcmVcblxuICAgIHJldHVybiBzdG9yZTtcbiAgfTtcbn1cbi8qKlxyXG4gKiBBIGhvb2sgdG8gYWNjZXNzIHRoZSByZWR1eCBzdG9yZS5cclxuICpcclxuICogQHJldHVybnMge2FueX0gdGhlIHJlZHV4IHN0b3JlXHJcbiAqXHJcbiAqIEBleGFtcGxlXHJcbiAqXHJcbiAqIGltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcclxuICogaW1wb3J0IHsgdXNlU3RvcmUgfSBmcm9tICdyZWFjdC1yZWR1eCdcclxuICpcclxuICogZXhwb3J0IGNvbnN0IEV4YW1wbGVDb21wb25lbnQgPSAoKSA9PiB7XHJcbiAqICAgY29uc3Qgc3RvcmUgPSB1c2VTdG9yZSgpXHJcbiAqICAgcmV0dXJuIDxkaXY+e3N0b3JlLmdldFN0YXRlKCl9PC9kaXY+XHJcbiAqIH1cclxuICovXG5cbmV4cG9ydCBjb25zdCB1c2VTdG9yZSA9IC8qI19fUFVSRV9fKi9jcmVhdGVTdG9yZUhvb2soKTsiXSwibmFtZXMiOlsiUmVhY3RSZWR1eENvbnRleHQiLCJ1c2VSZWR1eENvbnRleHQiLCJ1c2VEZWZhdWx0UmVkdXhDb250ZXh0IiwiY3JlYXRlUmVkdXhDb250ZXh0SG9vayIsImNyZWF0ZVN0b3JlSG9vayIsImNvbnRleHQiLCJ1c2VTdG9yZSIsInN0b3JlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/es/hooks/useStore.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/es/index.js":
/*!**********************************************!*\
  !*** ./node_modules/react-redux/es/index.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Provider: function() { return /* reexport safe */ _exports__WEBPACK_IMPORTED_MODULE_6__.Provider; },\n/* harmony export */   ReactReduxContext: function() { return /* reexport safe */ _exports__WEBPACK_IMPORTED_MODULE_6__.ReactReduxContext; },\n/* harmony export */   batch: function() { return /* reexport safe */ _utils_reactBatchedUpdates__WEBPACK_IMPORTED_MODULE_2__.unstable_batchedUpdates; },\n/* harmony export */   connect: function() { return /* reexport safe */ _exports__WEBPACK_IMPORTED_MODULE_6__.connect; },\n/* harmony export */   createDispatchHook: function() { return /* reexport safe */ _exports__WEBPACK_IMPORTED_MODULE_6__.createDispatchHook; },\n/* harmony export */   createSelectorHook: function() { return /* reexport safe */ _exports__WEBPACK_IMPORTED_MODULE_6__.createSelectorHook; },\n/* harmony export */   createStoreHook: function() { return /* reexport safe */ _exports__WEBPACK_IMPORTED_MODULE_6__.createStoreHook; },\n/* harmony export */   shallowEqual: function() { return /* reexport safe */ _exports__WEBPACK_IMPORTED_MODULE_6__.shallowEqual; },\n/* harmony export */   useDispatch: function() { return /* reexport safe */ _exports__WEBPACK_IMPORTED_MODULE_6__.useDispatch; },\n/* harmony export */   useSelector: function() { return /* reexport safe */ _exports__WEBPACK_IMPORTED_MODULE_6__.useSelector; },\n/* harmony export */   useStore: function() { return /* reexport safe */ _exports__WEBPACK_IMPORTED_MODULE_6__.useStore; }\n/* harmony export */ });\n/* harmony import */ var use_sync_external_store_shim__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! use-sync-external-store/shim */ \"(app-pages-browser)/./node_modules/use-sync-external-store/shim/index.js\");\n/* harmony import */ var use_sync_external_store_shim_with_selector__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! use-sync-external-store/shim/with-selector */ \"(app-pages-browser)/./node_modules/use-sync-external-store/shim/with-selector.js\");\n/* harmony import */ var _utils_reactBatchedUpdates__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/reactBatchedUpdates */ \"(app-pages-browser)/./node_modules/react-redux/es/utils/reactBatchedUpdates.js\");\n/* harmony import */ var _utils_batch__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/batch */ \"(app-pages-browser)/./node_modules/react-redux/es/utils/batch.js\");\n/* harmony import */ var _hooks_useSelector__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./hooks/useSelector */ \"(app-pages-browser)/./node_modules/react-redux/es/hooks/useSelector.js\");\n/* harmony import */ var _components_connect__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components/connect */ \"(app-pages-browser)/./node_modules/react-redux/es/components/connect.js\");\n/* harmony import */ var _exports__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./exports */ \"(app-pages-browser)/./node_modules/react-redux/es/exports.js\");\n// The primary entry point assumes we're working with standard ReactDOM/RN, but\n// older versions that do not include `useSyncExternalStore` (React 16.9 - 17.x).\n// Because of that, the useSyncExternalStore compat shim is needed.\n\n\n\n\n\n\n(0,_hooks_useSelector__WEBPACK_IMPORTED_MODULE_4__.initializeUseSelector)(use_sync_external_store_shim_with_selector__WEBPACK_IMPORTED_MODULE_1__.useSyncExternalStoreWithSelector);\n(0,_components_connect__WEBPACK_IMPORTED_MODULE_5__.initializeConnect)(use_sync_external_store_shim__WEBPACK_IMPORTED_MODULE_0__.useSyncExternalStore); // Enable batched updates in our subscriptions for use\n// with standard React renderers (ReactDOM, React Native)\n(0,_utils_batch__WEBPACK_IMPORTED_MODULE_3__.setBatch)(_utils_reactBatchedUpdates__WEBPACK_IMPORTED_MODULE_2__.unstable_batchedUpdates);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSwrRUFBK0U7QUFDL0UsaUZBQWlGO0FBQ2pGLG1FQUFtRTtBQUNDO0FBQzBCO0FBQ2Y7QUFDdEM7QUFDbUI7QUFDSDtBQUN6REsseUVBQXFCQSxDQUFDSix3R0FBZ0NBO0FBQ3RESyxzRUFBaUJBLENBQUNOLDhFQUFvQkEsR0FBRyxzREFBc0Q7QUFDL0YseURBQXlEO0FBRXpESSxzREFBUUEsQ0FBQ0QsK0VBQUtBO0FBQ0c7QUFDUyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvaW5kZXguanM/NTMyNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGUgcHJpbWFyeSBlbnRyeSBwb2ludCBhc3N1bWVzIHdlJ3JlIHdvcmtpbmcgd2l0aCBzdGFuZGFyZCBSZWFjdERPTS9STiwgYnV0XG4vLyBvbGRlciB2ZXJzaW9ucyB0aGF0IGRvIG5vdCBpbmNsdWRlIGB1c2VTeW5jRXh0ZXJuYWxTdG9yZWAgKFJlYWN0IDE2LjkgLSAxNy54KS5cbi8vIEJlY2F1c2Ugb2YgdGhhdCwgdGhlIHVzZVN5bmNFeHRlcm5hbFN0b3JlIGNvbXBhdCBzaGltIGlzIG5lZWRlZC5cbmltcG9ydCB7IHVzZVN5bmNFeHRlcm5hbFN0b3JlIH0gZnJvbSAndXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUvc2hpbSc7XG5pbXBvcnQgeyB1c2VTeW5jRXh0ZXJuYWxTdG9yZVdpdGhTZWxlY3RvciB9IGZyb20gJ3VzZS1zeW5jLWV4dGVybmFsLXN0b3JlL3NoaW0vd2l0aC1zZWxlY3Rvcic7XG5pbXBvcnQgeyB1bnN0YWJsZV9iYXRjaGVkVXBkYXRlcyBhcyBiYXRjaCB9IGZyb20gJy4vdXRpbHMvcmVhY3RCYXRjaGVkVXBkYXRlcyc7XG5pbXBvcnQgeyBzZXRCYXRjaCB9IGZyb20gJy4vdXRpbHMvYmF0Y2gnO1xuaW1wb3J0IHsgaW5pdGlhbGl6ZVVzZVNlbGVjdG9yIH0gZnJvbSAnLi9ob29rcy91c2VTZWxlY3Rvcic7XG5pbXBvcnQgeyBpbml0aWFsaXplQ29ubmVjdCB9IGZyb20gJy4vY29tcG9uZW50cy9jb25uZWN0JztcbmluaXRpYWxpemVVc2VTZWxlY3Rvcih1c2VTeW5jRXh0ZXJuYWxTdG9yZVdpdGhTZWxlY3Rvcik7XG5pbml0aWFsaXplQ29ubmVjdCh1c2VTeW5jRXh0ZXJuYWxTdG9yZSk7IC8vIEVuYWJsZSBiYXRjaGVkIHVwZGF0ZXMgaW4gb3VyIHN1YnNjcmlwdGlvbnMgZm9yIHVzZVxuLy8gd2l0aCBzdGFuZGFyZCBSZWFjdCByZW5kZXJlcnMgKFJlYWN0RE9NLCBSZWFjdCBOYXRpdmUpXG5cbnNldEJhdGNoKGJhdGNoKTtcbmV4cG9ydCB7IGJhdGNoIH07XG5leHBvcnQgKiBmcm9tICcuL2V4cG9ydHMnOyJdLCJuYW1lcyI6WyJ1c2VTeW5jRXh0ZXJuYWxTdG9yZSIsInVzZVN5bmNFeHRlcm5hbFN0b3JlV2l0aFNlbGVjdG9yIiwidW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXMiLCJiYXRjaCIsInNldEJhdGNoIiwiaW5pdGlhbGl6ZVVzZVNlbGVjdG9yIiwiaW5pdGlhbGl6ZUNvbm5lY3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/es/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/es/types.js":
/*!**********************************************!*\
  !*** ./node_modules/react-redux/es/types.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy90eXBlcy5qcyIsIm1hcHBpbmdzIjoiO0FBQVUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL3R5cGVzLmpzPzg2MWYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/es/types.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/es/utils/Subscription.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-redux/es/utils/Subscription.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createSubscription: function() { return /* binding */ createSubscription; }\n/* harmony export */ });\n/* harmony import */ var _batch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./batch */ \"(app-pages-browser)/./node_modules/react-redux/es/utils/batch.js\");\n // encapsulates the subscription logic for connecting a component to the redux store, as\n// well as nesting subscriptions of descendant components, so that we can ensure the\n// ancestor components re-render before descendants\nfunction createListenerCollection() {\n    const batch = (0,_batch__WEBPACK_IMPORTED_MODULE_0__.getBatch)();\n    let first = null;\n    let last = null;\n    return {\n        clear () {\n            first = null;\n            last = null;\n        },\n        notify () {\n            batch(()=>{\n                let listener = first;\n                while(listener){\n                    listener.callback();\n                    listener = listener.next;\n                }\n            });\n        },\n        get () {\n            let listeners = [];\n            let listener = first;\n            while(listener){\n                listeners.push(listener);\n                listener = listener.next;\n            }\n            return listeners;\n        },\n        subscribe (callback) {\n            let isSubscribed = true;\n            let listener = last = {\n                callback,\n                next: null,\n                prev: last\n            };\n            if (listener.prev) {\n                listener.prev.next = listener;\n            } else {\n                first = listener;\n            }\n            return function unsubscribe() {\n                if (!isSubscribed || first === null) return;\n                isSubscribed = false;\n                if (listener.next) {\n                    listener.next.prev = listener.prev;\n                } else {\n                    last = listener.prev;\n                }\n                if (listener.prev) {\n                    listener.prev.next = listener.next;\n                } else {\n                    first = listener.next;\n                }\n            };\n        }\n    };\n}\nconst nullListeners = {\n    notify () {},\n    get: ()=>[]\n};\nfunction createSubscription(store, parentSub) {\n    let unsubscribe;\n    let listeners = nullListeners; // Reasons to keep the subscription active\n    let subscriptionsAmount = 0; // Is this specific subscription subscribed (or only nested ones?)\n    let selfSubscribed = false;\n    function addNestedSub(listener) {\n        trySubscribe();\n        const cleanupListener = listeners.subscribe(listener); // cleanup nested sub\n        let removed = false;\n        return ()=>{\n            if (!removed) {\n                removed = true;\n                cleanupListener();\n                tryUnsubscribe();\n            }\n        };\n    }\n    function notifyNestedSubs() {\n        listeners.notify();\n    }\n    function handleChangeWrapper() {\n        if (subscription.onStateChange) {\n            subscription.onStateChange();\n        }\n    }\n    function isSubscribed() {\n        return selfSubscribed;\n    }\n    function trySubscribe() {\n        subscriptionsAmount++;\n        if (!unsubscribe) {\n            unsubscribe = parentSub ? parentSub.addNestedSub(handleChangeWrapper) : store.subscribe(handleChangeWrapper);\n            listeners = createListenerCollection();\n        }\n    }\n    function tryUnsubscribe() {\n        subscriptionsAmount--;\n        if (unsubscribe && subscriptionsAmount === 0) {\n            unsubscribe();\n            unsubscribe = undefined;\n            listeners.clear();\n            listeners = nullListeners;\n        }\n    }\n    function trySubscribeSelf() {\n        if (!selfSubscribed) {\n            selfSubscribed = true;\n            trySubscribe();\n        }\n    }\n    function tryUnsubscribeSelf() {\n        if (selfSubscribed) {\n            selfSubscribed = false;\n            tryUnsubscribe();\n        }\n    }\n    const subscription = {\n        addNestedSub,\n        notifyNestedSubs,\n        handleChangeWrapper,\n        isSubscribed,\n        trySubscribe: trySubscribeSelf,\n        tryUnsubscribe: tryUnsubscribeSelf,\n        getListeners: ()=>listeners\n    };\n    return subscription;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/es/utils/Subscription.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/es/utils/batch.js":
/*!****************************************************!*\
  !*** ./node_modules/react-redux/es/utils/batch.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getBatch: function() { return /* binding */ getBatch; },\n/* harmony export */   setBatch: function() { return /* binding */ setBatch; }\n/* harmony export */ });\n// Default to a dummy \"batch\" implementation that just runs the callback\nfunction defaultNoopBatch(callback) {\n    callback();\n}\nlet batch = defaultNoopBatch; // Allow injecting another batching function later\nconst setBatch = (newBatch)=>batch = newBatch; // Supply a getter just to skip dealing with ESM bindings\nconst getBatch = ()=>batch;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy91dGlscy9iYXRjaC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLHdFQUF3RTtBQUN4RSxTQUFTQSxpQkFBaUJDLFFBQVE7SUFDaENBO0FBQ0Y7QUFFQSxJQUFJQyxRQUFRRixrQkFBa0Isa0RBQWtEO0FBRXpFLE1BQU1HLFdBQVdDLENBQUFBLFdBQVlGLFFBQVFFLFNBQVMsQ0FBQyx5REFBeUQ7QUFFeEcsTUFBTUMsV0FBVyxJQUFNSCxNQUFNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy91dGlscy9iYXRjaC5qcz8xNGQyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIERlZmF1bHQgdG8gYSBkdW1teSBcImJhdGNoXCIgaW1wbGVtZW50YXRpb24gdGhhdCBqdXN0IHJ1bnMgdGhlIGNhbGxiYWNrXG5mdW5jdGlvbiBkZWZhdWx0Tm9vcEJhdGNoKGNhbGxiYWNrKSB7XG4gIGNhbGxiYWNrKCk7XG59XG5cbmxldCBiYXRjaCA9IGRlZmF1bHROb29wQmF0Y2g7IC8vIEFsbG93IGluamVjdGluZyBhbm90aGVyIGJhdGNoaW5nIGZ1bmN0aW9uIGxhdGVyXG5cbmV4cG9ydCBjb25zdCBzZXRCYXRjaCA9IG5ld0JhdGNoID0+IGJhdGNoID0gbmV3QmF0Y2g7IC8vIFN1cHBseSBhIGdldHRlciBqdXN0IHRvIHNraXAgZGVhbGluZyB3aXRoIEVTTSBiaW5kaW5nc1xuXG5leHBvcnQgY29uc3QgZ2V0QmF0Y2ggPSAoKSA9PiBiYXRjaDsiXSwibmFtZXMiOlsiZGVmYXVsdE5vb3BCYXRjaCIsImNhbGxiYWNrIiwiYmF0Y2giLCJzZXRCYXRjaCIsIm5ld0JhdGNoIiwiZ2V0QmF0Y2giXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/es/utils/batch.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/es/utils/bindActionCreators.js":
/*!*****************************************************************!*\
  !*** ./node_modules/react-redux/es/utils/bindActionCreators.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ bindActionCreators; }\n/* harmony export */ });\nfunction bindActionCreators(actionCreators, dispatch) {\n    const boundActionCreators = {};\n    for(const key in actionCreators){\n        const actionCreator = actionCreators[key];\n        if (typeof actionCreator === \"function\") {\n            boundActionCreators[key] = function() {\n                for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n                    args[_key] = arguments[_key];\n                }\n                return dispatch(actionCreator(...args));\n            };\n        }\n    }\n    return boundActionCreators;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy91dGlscy9iaW5kQWN0aW9uQ3JlYXRvcnMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFlLFNBQVNBLG1CQUFtQkMsY0FBYyxFQUFFQyxRQUFRO0lBQ2pFLE1BQU1DLHNCQUFzQixDQUFDO0lBRTdCLElBQUssTUFBTUMsT0FBT0gsZUFBZ0I7UUFDaEMsTUFBTUksZ0JBQWdCSixjQUFjLENBQUNHLElBQUk7UUFFekMsSUFBSSxPQUFPQyxrQkFBa0IsWUFBWTtZQUN2Q0YsbUJBQW1CLENBQUNDLElBQUksR0FBRztpREFBSUU7b0JBQUFBOzt1QkFBU0osU0FBU0csaUJBQWlCQzs7UUFDcEU7SUFDRjtJQUVBLE9BQU9IO0FBQ1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL3V0aWxzL2JpbmRBY3Rpb25DcmVhdG9ycy5qcz80ZWU1Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGJpbmRBY3Rpb25DcmVhdG9ycyhhY3Rpb25DcmVhdG9ycywgZGlzcGF0Y2gpIHtcbiAgY29uc3QgYm91bmRBY3Rpb25DcmVhdG9ycyA9IHt9O1xuXG4gIGZvciAoY29uc3Qga2V5IGluIGFjdGlvbkNyZWF0b3JzKSB7XG4gICAgY29uc3QgYWN0aW9uQ3JlYXRvciA9IGFjdGlvbkNyZWF0b3JzW2tleV07XG5cbiAgICBpZiAodHlwZW9mIGFjdGlvbkNyZWF0b3IgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIGJvdW5kQWN0aW9uQ3JlYXRvcnNba2V5XSA9ICguLi5hcmdzKSA9PiBkaXNwYXRjaChhY3Rpb25DcmVhdG9yKC4uLmFyZ3MpKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gYm91bmRBY3Rpb25DcmVhdG9ycztcbn0iXSwibmFtZXMiOlsiYmluZEFjdGlvbkNyZWF0b3JzIiwiYWN0aW9uQ3JlYXRvcnMiLCJkaXNwYXRjaCIsImJvdW5kQWN0aW9uQ3JlYXRvcnMiLCJrZXkiLCJhY3Rpb25DcmVhdG9yIiwiYXJncyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/es/utils/bindActionCreators.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/es/utils/isPlainObject.js":
/*!************************************************************!*\
  !*** ./node_modules/react-redux/es/utils/isPlainObject.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ isPlainObject; }\n/* harmony export */ });\n/**\r\n * @param {any} obj The object to inspect.\r\n * @returns {boolean} True if the argument appears to be a plain object.\r\n */ function isPlainObject(obj) {\n    if (typeof obj !== \"object\" || obj === null) return false;\n    let proto = Object.getPrototypeOf(obj);\n    if (proto === null) return true;\n    let baseProto = proto;\n    while(Object.getPrototypeOf(baseProto) !== null){\n        baseProto = Object.getPrototypeOf(baseProto);\n    }\n    return proto === baseProto;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy91dGlscy9pc1BsYWluT2JqZWN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7O0NBR0MsR0FDYyxTQUFTQSxjQUFjQyxHQUFHO0lBQ3ZDLElBQUksT0FBT0EsUUFBUSxZQUFZQSxRQUFRLE1BQU0sT0FBTztJQUNwRCxJQUFJQyxRQUFRQyxPQUFPQyxjQUFjLENBQUNIO0lBQ2xDLElBQUlDLFVBQVUsTUFBTSxPQUFPO0lBQzNCLElBQUlHLFlBQVlIO0lBRWhCLE1BQU9DLE9BQU9DLGNBQWMsQ0FBQ0MsZUFBZSxLQUFNO1FBQ2hEQSxZQUFZRixPQUFPQyxjQUFjLENBQUNDO0lBQ3BDO0lBRUEsT0FBT0gsVUFBVUc7QUFDbkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL3V0aWxzL2lzUGxhaW5PYmplY3QuanM/NTRkMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQHBhcmFtIHthbnl9IG9iaiBUaGUgb2JqZWN0IHRvIGluc3BlY3QuXHJcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHRoZSBhcmd1bWVudCBhcHBlYXJzIHRvIGJlIGEgcGxhaW4gb2JqZWN0LlxyXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGlzUGxhaW5PYmplY3Qob2JqKSB7XG4gIGlmICh0eXBlb2Ygb2JqICE9PSAnb2JqZWN0JyB8fCBvYmogPT09IG51bGwpIHJldHVybiBmYWxzZTtcbiAgbGV0IHByb3RvID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKG9iaik7XG4gIGlmIChwcm90byA9PT0gbnVsbCkgcmV0dXJuIHRydWU7XG4gIGxldCBiYXNlUHJvdG8gPSBwcm90bztcblxuICB3aGlsZSAoT2JqZWN0LmdldFByb3RvdHlwZU9mKGJhc2VQcm90bykgIT09IG51bGwpIHtcbiAgICBiYXNlUHJvdG8gPSBPYmplY3QuZ2V0UHJvdG90eXBlT2YoYmFzZVByb3RvKTtcbiAgfVxuXG4gIHJldHVybiBwcm90byA9PT0gYmFzZVByb3RvO1xufSJdLCJuYW1lcyI6WyJpc1BsYWluT2JqZWN0Iiwib2JqIiwicHJvdG8iLCJPYmplY3QiLCJnZXRQcm90b3R5cGVPZiIsImJhc2VQcm90byJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/es/utils/isPlainObject.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/es/utils/reactBatchedUpdates.js":
/*!******************************************************************!*\
  !*** ./node_modules/react-redux/es/utils/reactBatchedUpdates.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   unstable_batchedUpdates: function() { return /* reexport safe */ react_dom__WEBPACK_IMPORTED_MODULE_0__.unstable_batchedUpdates; }\n/* harmony export */ });\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-dom */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react-dom/index.js\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy91dGlscy9yZWFjdEJhdGNoZWRVcGRhdGVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQW9EIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy91dGlscy9yZWFjdEJhdGNoZWRVcGRhdGVzLmpzP2IzNDciXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgdW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXMgfSBmcm9tICdyZWFjdC1kb20nOyJdLCJuYW1lcyI6WyJ1bnN0YWJsZV9iYXRjaGVkVXBkYXRlcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/es/utils/reactBatchedUpdates.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/es/utils/shallowEqual.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-redux/es/utils/shallowEqual.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ shallowEqual; }\n/* harmony export */ });\nfunction is(x, y) {\n    if (x === y) {\n        return x !== 0 || y !== 0 || 1 / x === 1 / y;\n    } else {\n        return x !== x && y !== y;\n    }\n}\nfunction shallowEqual(objA, objB) {\n    if (is(objA, objB)) return true;\n    if (typeof objA !== \"object\" || objA === null || typeof objB !== \"object\" || objB === null) {\n        return false;\n    }\n    const keysA = Object.keys(objA);\n    const keysB = Object.keys(objB);\n    if (keysA.length !== keysB.length) return false;\n    for(let i = 0; i < keysA.length; i++){\n        if (!Object.prototype.hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n            return false;\n        }\n    }\n    return true;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy91dGlscy9zaGFsbG93RXF1YWwuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLFNBQVNBLEdBQUdDLENBQUMsRUFBRUMsQ0FBQztJQUNkLElBQUlELE1BQU1DLEdBQUc7UUFDWCxPQUFPRCxNQUFNLEtBQUtDLE1BQU0sS0FBSyxJQUFJRCxNQUFNLElBQUlDO0lBQzdDLE9BQU87UUFDTCxPQUFPRCxNQUFNQSxLQUFLQyxNQUFNQTtJQUMxQjtBQUNGO0FBRWUsU0FBU0MsYUFBYUMsSUFBSSxFQUFFQyxJQUFJO0lBQzdDLElBQUlMLEdBQUdJLE1BQU1DLE9BQU8sT0FBTztJQUUzQixJQUFJLE9BQU9ELFNBQVMsWUFBWUEsU0FBUyxRQUFRLE9BQU9DLFNBQVMsWUFBWUEsU0FBUyxNQUFNO1FBQzFGLE9BQU87SUFDVDtJQUVBLE1BQU1DLFFBQVFDLE9BQU9DLElBQUksQ0FBQ0o7SUFDMUIsTUFBTUssUUFBUUYsT0FBT0MsSUFBSSxDQUFDSDtJQUMxQixJQUFJQyxNQUFNSSxNQUFNLEtBQUtELE1BQU1DLE1BQU0sRUFBRSxPQUFPO0lBRTFDLElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJTCxNQUFNSSxNQUFNLEVBQUVDLElBQUs7UUFDckMsSUFBSSxDQUFDSixPQUFPSyxTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDVCxNQUFNQyxLQUFLLENBQUNLLEVBQUUsS0FBSyxDQUFDWCxHQUFHSSxJQUFJLENBQUNFLEtBQUssQ0FBQ0ssRUFBRSxDQUFDLEVBQUVOLElBQUksQ0FBQ0MsS0FBSyxDQUFDSyxFQUFFLENBQUMsR0FBRztZQUNoRyxPQUFPO1FBQ1Q7SUFDRjtJQUVBLE9BQU87QUFDVCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvdXRpbHMvc2hhbGxvd0VxdWFsLmpzPzc2NzYiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gaXMoeCwgeSkge1xuICBpZiAoeCA9PT0geSkge1xuICAgIHJldHVybiB4ICE9PSAwIHx8IHkgIT09IDAgfHwgMSAvIHggPT09IDEgLyB5O1xuICB9IGVsc2Uge1xuICAgIHJldHVybiB4ICE9PSB4ICYmIHkgIT09IHk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc2hhbGxvd0VxdWFsKG9iakEsIG9iakIpIHtcbiAgaWYgKGlzKG9iakEsIG9iakIpKSByZXR1cm4gdHJ1ZTtcblxuICBpZiAodHlwZW9mIG9iakEgIT09ICdvYmplY3QnIHx8IG9iakEgPT09IG51bGwgfHwgdHlwZW9mIG9iakIgIT09ICdvYmplY3QnIHx8IG9iakIgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBjb25zdCBrZXlzQSA9IE9iamVjdC5rZXlzKG9iakEpO1xuICBjb25zdCBrZXlzQiA9IE9iamVjdC5rZXlzKG9iakIpO1xuICBpZiAoa2V5c0EubGVuZ3RoICE9PSBrZXlzQi5sZW5ndGgpIHJldHVybiBmYWxzZTtcblxuICBmb3IgKGxldCBpID0gMDsgaSA8IGtleXNBLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKCFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqQiwga2V5c0FbaV0pIHx8ICFpcyhvYmpBW2tleXNBW2ldXSwgb2JqQltrZXlzQVtpXV0pKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRydWU7XG59Il0sIm5hbWVzIjpbImlzIiwieCIsInkiLCJzaGFsbG93RXF1YWwiLCJvYmpBIiwib2JqQiIsImtleXNBIiwiT2JqZWN0Iiwia2V5cyIsImtleXNCIiwibGVuZ3RoIiwiaSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/es/utils/shallowEqual.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/es/utils/useIsomorphicLayoutEffect.js":
/*!************************************************************************!*\
  !*** ./node_modules/react-redux/es/utils/useIsomorphicLayoutEffect.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   canUseDOM: function() { return /* binding */ canUseDOM; },\n/* harmony export */   useIsomorphicLayoutEffect: function() { return /* binding */ useIsomorphicLayoutEffect; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n // React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser. We need useLayoutEffect to ensure the store\n// subscription callback always has the selector from the latest render commit\n// available, otherwise a store update may happen between render and the effect,\n// which may cause missed updates; we also must ensure the store subscription\n// is created synchronously, otherwise a store update may occur before the\n// subscription is created and an inconsistent state may be observed\n// Matches logic in React's `shared/ExecutionEnvironment` file\nconst canUseDOM = !!( true && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\");\nconst useIsomorphicLayoutEffect = canUseDOM ? react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect : react__WEBPACK_IMPORTED_MODULE_0__.useEffect;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy91dGlscy91c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBK0IsQ0FBQyw2RUFBNkU7QUFDN0csNkVBQTZFO0FBQzdFLDhFQUE4RTtBQUM5RSw4RUFBOEU7QUFDOUUsZ0ZBQWdGO0FBQ2hGLDZFQUE2RTtBQUM3RSwwRUFBMEU7QUFDMUUsb0VBQW9FO0FBQ3BFLDhEQUE4RDtBQUV2RCxNQUFNQyxZQUFZLENBQUMsQ0FBRSxNQUFrQixJQUFlLE9BQU9DLE9BQU9DLFFBQVEsS0FBSyxlQUFlLE9BQU9ELE9BQU9DLFFBQVEsQ0FBQ0MsYUFBYSxLQUFLLFdBQVUsRUFBRztBQUN0SixNQUFNQyw0QkFBNEJKLFlBQVlELGtEQUFxQixHQUFHQSw0Q0FBZSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy91dGlscy91c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0LmpzP2IyZGEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnOyAvLyBSZWFjdCBjdXJyZW50bHkgdGhyb3dzIGEgd2FybmluZyB3aGVuIHVzaW5nIHVzZUxheW91dEVmZmVjdCBvbiB0aGUgc2VydmVyLlxuLy8gVG8gZ2V0IGFyb3VuZCBpdCwgd2UgY2FuIGNvbmRpdGlvbmFsbHkgdXNlRWZmZWN0IG9uIHRoZSBzZXJ2ZXIgKG5vLW9wKSBhbmRcbi8vIHVzZUxheW91dEVmZmVjdCBpbiB0aGUgYnJvd3Nlci4gV2UgbmVlZCB1c2VMYXlvdXRFZmZlY3QgdG8gZW5zdXJlIHRoZSBzdG9yZVxuLy8gc3Vic2NyaXB0aW9uIGNhbGxiYWNrIGFsd2F5cyBoYXMgdGhlIHNlbGVjdG9yIGZyb20gdGhlIGxhdGVzdCByZW5kZXIgY29tbWl0XG4vLyBhdmFpbGFibGUsIG90aGVyd2lzZSBhIHN0b3JlIHVwZGF0ZSBtYXkgaGFwcGVuIGJldHdlZW4gcmVuZGVyIGFuZCB0aGUgZWZmZWN0LFxuLy8gd2hpY2ggbWF5IGNhdXNlIG1pc3NlZCB1cGRhdGVzOyB3ZSBhbHNvIG11c3QgZW5zdXJlIHRoZSBzdG9yZSBzdWJzY3JpcHRpb25cbi8vIGlzIGNyZWF0ZWQgc3luY2hyb25vdXNseSwgb3RoZXJ3aXNlIGEgc3RvcmUgdXBkYXRlIG1heSBvY2N1ciBiZWZvcmUgdGhlXG4vLyBzdWJzY3JpcHRpb24gaXMgY3JlYXRlZCBhbmQgYW4gaW5jb25zaXN0ZW50IHN0YXRlIG1heSBiZSBvYnNlcnZlZFxuLy8gTWF0Y2hlcyBsb2dpYyBpbiBSZWFjdCdzIGBzaGFyZWQvRXhlY3V0aW9uRW52aXJvbm1lbnRgIGZpbGVcblxuZXhwb3J0IGNvbnN0IGNhblVzZURPTSA9ICEhKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiB3aW5kb3cuZG9jdW1lbnQgIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCAhPT0gJ3VuZGVmaW5lZCcpO1xuZXhwb3J0IGNvbnN0IHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QgPSBjYW5Vc2VET00gPyBSZWFjdC51c2VMYXlvdXRFZmZlY3QgOiBSZWFjdC51c2VFZmZlY3Q7Il0sIm5hbWVzIjpbIlJlYWN0IiwiY2FuVXNlRE9NIiwid2luZG93IiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwidXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdCIsInVzZUxheW91dEVmZmVjdCIsInVzZUVmZmVjdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/es/utils/useIsomorphicLayoutEffect.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/es/utils/useSyncExternalStore.js":
/*!*******************************************************************!*\
  !*** ./node_modules/react-redux/es/utils/useSyncExternalStore.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   notInitialized: function() { return /* binding */ notInitialized; }\n/* harmony export */ });\nconst notInitialized = ()=>{\n    throw new Error(\"uSES not initialized!\");\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy91dGlscy91c2VTeW5jRXh0ZXJuYWxTdG9yZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sTUFBTUEsaUJBQWlCO0lBQzVCLE1BQU0sSUFBSUMsTUFBTTtBQUNsQixFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy91dGlscy91c2VTeW5jRXh0ZXJuYWxTdG9yZS5qcz85NjQ4Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBub3RJbml0aWFsaXplZCA9ICgpID0+IHtcbiAgdGhyb3cgbmV3IEVycm9yKCd1U0VTIG5vdCBpbml0aWFsaXplZCEnKTtcbn07Il0sIm5hbWVzIjpbIm5vdEluaXRpYWxpemVkIiwiRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/es/utils/useSyncExternalStore.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/es/utils/verifyPlainObject.js":
/*!****************************************************************!*\
  !*** ./node_modules/react-redux/es/utils/verifyPlainObject.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ verifyPlainObject; }\n/* harmony export */ });\n/* harmony import */ var _isPlainObject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isPlainObject */ \"(app-pages-browser)/./node_modules/react-redux/es/utils/isPlainObject.js\");\n/* harmony import */ var _warning__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./warning */ \"(app-pages-browser)/./node_modules/react-redux/es/utils/warning.js\");\n\n\nfunction verifyPlainObject(value, displayName, methodName) {\n    if (!(0,_isPlainObject__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(value)) {\n        (0,_warning__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(\"\".concat(methodName, \"() in \").concat(displayName, \" must return a plain object. Instead received \").concat(value, \".\"));\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy91dGlscy92ZXJpZnlQbGFpbk9iamVjdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNEM7QUFDWjtBQUNqQixTQUFTRSxrQkFBa0JDLEtBQUssRUFBRUMsV0FBVyxFQUFFQyxVQUFVO0lBQ3RFLElBQUksQ0FBQ0wsMERBQWFBLENBQUNHLFFBQVE7UUFDekJGLG9EQUFPQSxDQUFDLEdBQXNCRyxPQUFuQkMsWUFBVyxVQUFvRUYsT0FBNURDLGFBQVksa0RBQXNELE9BQU5ELE9BQU07SUFDbEc7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvdXRpbHMvdmVyaWZ5UGxhaW5PYmplY3QuanM/MGQyOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgaXNQbGFpbk9iamVjdCBmcm9tICcuL2lzUGxhaW5PYmplY3QnO1xuaW1wb3J0IHdhcm5pbmcgZnJvbSAnLi93YXJuaW5nJztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHZlcmlmeVBsYWluT2JqZWN0KHZhbHVlLCBkaXNwbGF5TmFtZSwgbWV0aG9kTmFtZSkge1xuICBpZiAoIWlzUGxhaW5PYmplY3QodmFsdWUpKSB7XG4gICAgd2FybmluZyhgJHttZXRob2ROYW1lfSgpIGluICR7ZGlzcGxheU5hbWV9IG11c3QgcmV0dXJuIGEgcGxhaW4gb2JqZWN0LiBJbnN0ZWFkIHJlY2VpdmVkICR7dmFsdWV9LmApO1xuICB9XG59Il0sIm5hbWVzIjpbImlzUGxhaW5PYmplY3QiLCJ3YXJuaW5nIiwidmVyaWZ5UGxhaW5PYmplY3QiLCJ2YWx1ZSIsImRpc3BsYXlOYW1lIiwibWV0aG9kTmFtZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/es/utils/verifyPlainObject.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/es/utils/warning.js":
/*!******************************************************!*\
  !*** ./node_modules/react-redux/es/utils/warning.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ warning; }\n/* harmony export */ });\n/**\r\n * Prints a warning in the console if it exists.\r\n *\r\n * @param {String} message The warning message.\r\n * @returns {void}\r\n */ function warning(message) {\n    /* eslint-disable no-console */ if (typeof console !== \"undefined\" && typeof console.error === \"function\") {\n        console.error(message);\n    }\n    /* eslint-enable no-console */ try {\n        // This error was thrown as a convenience so that if you enable\n        // \"break on all exceptions\" in your console,\n        // it would pause the execution at this line.\n        throw new Error(message);\n    /* eslint-disable no-empty */ } catch (e) {}\n/* eslint-enable no-empty */ }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy91dGlscy93YXJuaW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7Ozs7Q0FLQyxHQUNjLFNBQVNBLFFBQVFDLE9BQU87SUFDckMsNkJBQTZCLEdBQzdCLElBQUksT0FBT0MsWUFBWSxlQUFlLE9BQU9BLFFBQVFDLEtBQUssS0FBSyxZQUFZO1FBQ3pFRCxRQUFRQyxLQUFLLENBQUNGO0lBQ2hCO0lBQ0EsNEJBQTRCLEdBRzVCLElBQUk7UUFDRiwrREFBK0Q7UUFDL0QsNkNBQTZDO1FBQzdDLDZDQUE2QztRQUM3QyxNQUFNLElBQUlHLE1BQU1IO0lBQ2hCLDJCQUEyQixHQUM3QixFQUFFLE9BQU9JLEdBQUcsQ0FBQztBQUNiLDBCQUEwQixHQUU1QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvdXRpbHMvd2FybmluZy5qcz80NTk1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBQcmludHMgYSB3YXJuaW5nIGluIHRoZSBjb25zb2xlIGlmIGl0IGV4aXN0cy5cclxuICpcclxuICogQHBhcmFtIHtTdHJpbmd9IG1lc3NhZ2UgVGhlIHdhcm5pbmcgbWVzc2FnZS5cclxuICogQHJldHVybnMge3ZvaWR9XHJcbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gd2FybmluZyhtZXNzYWdlKSB7XG4gIC8qIGVzbGludC1kaXNhYmxlIG5vLWNvbnNvbGUgKi9cbiAgaWYgKHR5cGVvZiBjb25zb2xlICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgY29uc29sZS5lcnJvciA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGNvbnNvbGUuZXJyb3IobWVzc2FnZSk7XG4gIH1cbiAgLyogZXNsaW50LWVuYWJsZSBuby1jb25zb2xlICovXG5cblxuICB0cnkge1xuICAgIC8vIFRoaXMgZXJyb3Igd2FzIHRocm93biBhcyBhIGNvbnZlbmllbmNlIHNvIHRoYXQgaWYgeW91IGVuYWJsZVxuICAgIC8vIFwiYnJlYWsgb24gYWxsIGV4Y2VwdGlvbnNcIiBpbiB5b3VyIGNvbnNvbGUsXG4gICAgLy8gaXQgd291bGQgcGF1c2UgdGhlIGV4ZWN1dGlvbiBhdCB0aGlzIGxpbmUuXG4gICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpO1xuICAgIC8qIGVzbGludC1kaXNhYmxlIG5vLWVtcHR5ICovXG4gIH0gY2F0Y2ggKGUpIHt9XG4gIC8qIGVzbGludC1lbmFibGUgbm8tZW1wdHkgKi9cblxufSJdLCJuYW1lcyI6WyJ3YXJuaW5nIiwibWVzc2FnZSIsImNvbnNvbGUiLCJlcnJvciIsIkVycm9yIiwiZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/es/utils/warning.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/node_modules/react-is/cjs/react-is.development.js":
/*!************************************************************************************!*\
  !*** ./node_modules/react-redux/node_modules/react-is/cjs/react-is.development.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("/**\n * @license React\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */ \nif (true) {\n    (function() {\n        \"use strict\";\n        // ATTENTION\n        // When adding new symbols to this file,\n        // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n        // The Symbol used to tag the ReactElement-like types.\n        var REACT_ELEMENT_TYPE = Symbol.for(\"react.element\");\n        var REACT_PORTAL_TYPE = Symbol.for(\"react.portal\");\n        var REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\n        var REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\");\n        var REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\");\n        var REACT_PROVIDER_TYPE = Symbol.for(\"react.provider\");\n        var REACT_CONTEXT_TYPE = Symbol.for(\"react.context\");\n        var REACT_SERVER_CONTEXT_TYPE = Symbol.for(\"react.server_context\");\n        var REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\");\n        var REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\");\n        var REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\");\n        var REACT_MEMO_TYPE = Symbol.for(\"react.memo\");\n        var REACT_LAZY_TYPE = Symbol.for(\"react.lazy\");\n        var REACT_OFFSCREEN_TYPE = Symbol.for(\"react.offscreen\");\n        // -----------------------------------------------------------------------------\n        var enableScopeAPI = false; // Experimental Create Event Handle API.\n        var enableCacheElement = false;\n        var enableTransitionTracing = false; // No known bugs, but needs performance testing\n        var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n        // stuff. Intended to enable React core members to more easily debug scheduling\n        // issues in DEV builds.\n        var enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n        var REACT_MODULE_REFERENCE;\n        {\n            REACT_MODULE_REFERENCE = Symbol.for(\"react.module.reference\");\n        }\n        function isValidElementType(type) {\n            if (typeof type === \"string\" || typeof type === \"function\") {\n                return true;\n            } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n            if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) {\n                return true;\n            }\n            if (typeof type === \"object\" && type !== null) {\n                if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n                // types supported by any Flight configuration anywhere since\n                // we don't know which Flight build this will end up being used\n                // with.\n                type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        function typeOf(object) {\n            if (typeof object === \"object\" && object !== null) {\n                var $$typeof = object.$$typeof;\n                switch($$typeof){\n                    case REACT_ELEMENT_TYPE:\n                        var type = object.type;\n                        switch(type){\n                            case REACT_FRAGMENT_TYPE:\n                            case REACT_PROFILER_TYPE:\n                            case REACT_STRICT_MODE_TYPE:\n                            case REACT_SUSPENSE_TYPE:\n                            case REACT_SUSPENSE_LIST_TYPE:\n                                return type;\n                            default:\n                                var $$typeofType = type && type.$$typeof;\n                                switch($$typeofType){\n                                    case REACT_SERVER_CONTEXT_TYPE:\n                                    case REACT_CONTEXT_TYPE:\n                                    case REACT_FORWARD_REF_TYPE:\n                                    case REACT_LAZY_TYPE:\n                                    case REACT_MEMO_TYPE:\n                                    case REACT_PROVIDER_TYPE:\n                                        return $$typeofType;\n                                    default:\n                                        return $$typeof;\n                                }\n                        }\n                    case REACT_PORTAL_TYPE:\n                        return $$typeof;\n                }\n            }\n            return undefined;\n        }\n        var ContextConsumer = REACT_CONTEXT_TYPE;\n        var ContextProvider = REACT_PROVIDER_TYPE;\n        var Element = REACT_ELEMENT_TYPE;\n        var ForwardRef = REACT_FORWARD_REF_TYPE;\n        var Fragment = REACT_FRAGMENT_TYPE;\n        var Lazy = REACT_LAZY_TYPE;\n        var Memo = REACT_MEMO_TYPE;\n        var Portal = REACT_PORTAL_TYPE;\n        var Profiler = REACT_PROFILER_TYPE;\n        var StrictMode = REACT_STRICT_MODE_TYPE;\n        var Suspense = REACT_SUSPENSE_TYPE;\n        var SuspenseList = REACT_SUSPENSE_LIST_TYPE;\n        var hasWarnedAboutDeprecatedIsAsyncMode = false;\n        var hasWarnedAboutDeprecatedIsConcurrentMode = false; // AsyncMode should be deprecated\n        function isAsyncMode(object) {\n            {\n                if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n                    hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n                    console[\"warn\"](\"The ReactIs.isAsyncMode() alias has been deprecated, \" + \"and will be removed in React 18+.\");\n                }\n            }\n            return false;\n        }\n        function isConcurrentMode(object) {\n            {\n                if (!hasWarnedAboutDeprecatedIsConcurrentMode) {\n                    hasWarnedAboutDeprecatedIsConcurrentMode = true; // Using console['warn'] to evade Babel and ESLint\n                    console[\"warn\"](\"The ReactIs.isConcurrentMode() alias has been deprecated, \" + \"and will be removed in React 18+.\");\n                }\n            }\n            return false;\n        }\n        function isContextConsumer(object) {\n            return typeOf(object) === REACT_CONTEXT_TYPE;\n        }\n        function isContextProvider(object) {\n            return typeOf(object) === REACT_PROVIDER_TYPE;\n        }\n        function isElement(object) {\n            return typeof object === \"object\" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n        }\n        function isForwardRef(object) {\n            return typeOf(object) === REACT_FORWARD_REF_TYPE;\n        }\n        function isFragment(object) {\n            return typeOf(object) === REACT_FRAGMENT_TYPE;\n        }\n        function isLazy(object) {\n            return typeOf(object) === REACT_LAZY_TYPE;\n        }\n        function isMemo(object) {\n            return typeOf(object) === REACT_MEMO_TYPE;\n        }\n        function isPortal(object) {\n            return typeOf(object) === REACT_PORTAL_TYPE;\n        }\n        function isProfiler(object) {\n            return typeOf(object) === REACT_PROFILER_TYPE;\n        }\n        function isStrictMode(object) {\n            return typeOf(object) === REACT_STRICT_MODE_TYPE;\n        }\n        function isSuspense(object) {\n            return typeOf(object) === REACT_SUSPENSE_TYPE;\n        }\n        function isSuspenseList(object) {\n            return typeOf(object) === REACT_SUSPENSE_LIST_TYPE;\n        }\n        exports.ContextConsumer = ContextConsumer;\n        exports.ContextProvider = ContextProvider;\n        exports.Element = Element;\n        exports.ForwardRef = ForwardRef;\n        exports.Fragment = Fragment;\n        exports.Lazy = Lazy;\n        exports.Memo = Memo;\n        exports.Portal = Portal;\n        exports.Profiler = Profiler;\n        exports.StrictMode = StrictMode;\n        exports.Suspense = Suspense;\n        exports.SuspenseList = SuspenseList;\n        exports.isAsyncMode = isAsyncMode;\n        exports.isConcurrentMode = isConcurrentMode;\n        exports.isContextConsumer = isContextConsumer;\n        exports.isContextProvider = isContextProvider;\n        exports.isElement = isElement;\n        exports.isForwardRef = isForwardRef;\n        exports.isFragment = isFragment;\n        exports.isLazy = isLazy;\n        exports.isMemo = isMemo;\n        exports.isPortal = isPortal;\n        exports.isProfiler = isProfiler;\n        exports.isStrictMode = isStrictMode;\n        exports.isSuspense = isSuspense;\n        exports.isSuspenseList = isSuspenseList;\n        exports.isValidElementType = isValidElementType;\n        exports.typeOf = typeOf;\n    })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9ub2RlX21vZHVsZXMvcmVhY3QtaXMvY2pzL3JlYWN0LWlzLmRldmVsb3BtZW50LmpzIiwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7OztDQVFDLEdBRUQ7QUFFQSxJQUFJQSxJQUFxQyxFQUFFO0lBQ3hDO1FBQ0g7UUFFQSxZQUFZO1FBQ1osd0NBQXdDO1FBQ3hDLGtGQUFrRjtRQUNsRixzREFBc0Q7UUFDdEQsSUFBSUMscUJBQXFCQyxPQUFPQyxHQUFHLENBQUM7UUFDcEMsSUFBSUMsb0JBQW9CRixPQUFPQyxHQUFHLENBQUM7UUFDbkMsSUFBSUUsc0JBQXNCSCxPQUFPQyxHQUFHLENBQUM7UUFDckMsSUFBSUcseUJBQXlCSixPQUFPQyxHQUFHLENBQUM7UUFDeEMsSUFBSUksc0JBQXNCTCxPQUFPQyxHQUFHLENBQUM7UUFDckMsSUFBSUssc0JBQXNCTixPQUFPQyxHQUFHLENBQUM7UUFDckMsSUFBSU0scUJBQXFCUCxPQUFPQyxHQUFHLENBQUM7UUFDcEMsSUFBSU8sNEJBQTRCUixPQUFPQyxHQUFHLENBQUM7UUFDM0MsSUFBSVEseUJBQXlCVCxPQUFPQyxHQUFHLENBQUM7UUFDeEMsSUFBSVMsc0JBQXNCVixPQUFPQyxHQUFHLENBQUM7UUFDckMsSUFBSVUsMkJBQTJCWCxPQUFPQyxHQUFHLENBQUM7UUFDMUMsSUFBSVcsa0JBQWtCWixPQUFPQyxHQUFHLENBQUM7UUFDakMsSUFBSVksa0JBQWtCYixPQUFPQyxHQUFHLENBQUM7UUFDakMsSUFBSWEsdUJBQXVCZCxPQUFPQyxHQUFHLENBQUM7UUFFdEMsZ0ZBQWdGO1FBRWhGLElBQUljLGlCQUFpQixPQUFPLHdDQUF3QztRQUNwRSxJQUFJQyxxQkFBcUI7UUFDekIsSUFBSUMsMEJBQTBCLE9BQU8sK0NBQStDO1FBRXBGLElBQUlDLHFCQUFxQixPQUFPLHNEQUFzRDtRQUN0RiwrRUFBK0U7UUFDL0Usd0JBQXdCO1FBRXhCLElBQUlDLHFCQUFxQixPQUFPLDZDQUE2QztRQUU3RSxJQUFJQztRQUVKO1lBQ0VBLHlCQUF5QnBCLE9BQU9DLEdBQUcsQ0FBQztRQUN0QztRQUVBLFNBQVNvQixtQkFBbUJDLElBQUk7WUFDOUIsSUFBSSxPQUFPQSxTQUFTLFlBQVksT0FBT0EsU0FBUyxZQUFZO2dCQUMxRCxPQUFPO1lBQ1QsRUFBRSxtRkFBbUY7WUFHckYsSUFBSUEsU0FBU25CLHVCQUF1Qm1CLFNBQVNqQix1QkFBdUJjLHNCQUF1QkcsU0FBU2xCLDBCQUEwQmtCLFNBQVNaLHVCQUF1QlksU0FBU1gsNEJBQTRCTyxzQkFBdUJJLFNBQVNSLHdCQUF3QkMsa0JBQW1CQyxzQkFBdUJDLHlCQUEwQjtnQkFDN1QsT0FBTztZQUNUO1lBRUEsSUFBSSxPQUFPSyxTQUFTLFlBQVlBLFNBQVMsTUFBTTtnQkFDN0MsSUFBSUEsS0FBS0MsUUFBUSxLQUFLVixtQkFBbUJTLEtBQUtDLFFBQVEsS0FBS1gsbUJBQW1CVSxLQUFLQyxRQUFRLEtBQUtqQix1QkFBdUJnQixLQUFLQyxRQUFRLEtBQUtoQixzQkFBc0JlLEtBQUtDLFFBQVEsS0FBS2QsMEJBQTBCLDZEQUE2RDtnQkFDeFEsNkRBQTZEO2dCQUM3RCwrREFBK0Q7Z0JBQy9ELFFBQVE7Z0JBQ1JhLEtBQUtDLFFBQVEsS0FBS0gsMEJBQTBCRSxLQUFLRSxXQUFXLEtBQUtDLFdBQVc7b0JBQzFFLE9BQU87Z0JBQ1Q7WUFDRjtZQUVBLE9BQU87UUFDVDtRQUVBLFNBQVNDLE9BQU9DLE1BQU07WUFDcEIsSUFBSSxPQUFPQSxXQUFXLFlBQVlBLFdBQVcsTUFBTTtnQkFDakQsSUFBSUosV0FBV0ksT0FBT0osUUFBUTtnQkFFOUIsT0FBUUE7b0JBQ04sS0FBS3hCO3dCQUNILElBQUl1QixPQUFPSyxPQUFPTCxJQUFJO3dCQUV0QixPQUFRQTs0QkFDTixLQUFLbkI7NEJBQ0wsS0FBS0U7NEJBQ0wsS0FBS0Q7NEJBQ0wsS0FBS007NEJBQ0wsS0FBS0M7Z0NBQ0gsT0FBT1c7NEJBRVQ7Z0NBQ0UsSUFBSU0sZUFBZU4sUUFBUUEsS0FBS0MsUUFBUTtnQ0FFeEMsT0FBUUs7b0NBQ04sS0FBS3BCO29DQUNMLEtBQUtEO29DQUNMLEtBQUtFO29DQUNMLEtBQUtJO29DQUNMLEtBQUtEO29DQUNMLEtBQUtOO3dDQUNILE9BQU9zQjtvQ0FFVDt3Q0FDRSxPQUFPTDtnQ0FDWDt3QkFFSjtvQkFFRixLQUFLckI7d0JBQ0gsT0FBT3FCO2dCQUNYO1lBQ0Y7WUFFQSxPQUFPRTtRQUNUO1FBQ0EsSUFBSUksa0JBQWtCdEI7UUFDdEIsSUFBSXVCLGtCQUFrQnhCO1FBQ3RCLElBQUl5QixVQUFVaEM7UUFDZCxJQUFJaUMsYUFBYXZCO1FBQ2pCLElBQUl3QixXQUFXOUI7UUFDZixJQUFJK0IsT0FBT3JCO1FBQ1gsSUFBSXNCLE9BQU92QjtRQUNYLElBQUl3QixTQUFTbEM7UUFDYixJQUFJbUMsV0FBV2hDO1FBQ2YsSUFBSWlDLGFBQWFsQztRQUNqQixJQUFJbUMsV0FBVzdCO1FBQ2YsSUFBSThCLGVBQWU3QjtRQUNuQixJQUFJOEIsc0NBQXNDO1FBQzFDLElBQUlDLDJDQUEyQyxPQUFPLGlDQUFpQztRQUV2RixTQUFTQyxZQUFZaEIsTUFBTTtZQUN6QjtnQkFDRSxJQUFJLENBQUNjLHFDQUFxQztvQkFDeENBLHNDQUFzQyxNQUFNLGtEQUFrRDtvQkFFOUZHLE9BQU8sQ0FBQyxPQUFPLENBQUMsMERBQTBEO2dCQUM1RTtZQUNGO1lBRUEsT0FBTztRQUNUO1FBQ0EsU0FBU0MsaUJBQWlCbEIsTUFBTTtZQUM5QjtnQkFDRSxJQUFJLENBQUNlLDBDQUEwQztvQkFDN0NBLDJDQUEyQyxNQUFNLGtEQUFrRDtvQkFFbkdFLE9BQU8sQ0FBQyxPQUFPLENBQUMsK0RBQStEO2dCQUNqRjtZQUNGO1lBRUEsT0FBTztRQUNUO1FBQ0EsU0FBU0Usa0JBQWtCbkIsTUFBTTtZQUMvQixPQUFPRCxPQUFPQyxZQUFZcEI7UUFDNUI7UUFDQSxTQUFTd0Msa0JBQWtCcEIsTUFBTTtZQUMvQixPQUFPRCxPQUFPQyxZQUFZckI7UUFDNUI7UUFDQSxTQUFTMEMsVUFBVXJCLE1BQU07WUFDdkIsT0FBTyxPQUFPQSxXQUFXLFlBQVlBLFdBQVcsUUFBUUEsT0FBT0osUUFBUSxLQUFLeEI7UUFDOUU7UUFDQSxTQUFTa0QsYUFBYXRCLE1BQU07WUFDMUIsT0FBT0QsT0FBT0MsWUFBWWxCO1FBQzVCO1FBQ0EsU0FBU3lDLFdBQVd2QixNQUFNO1lBQ3hCLE9BQU9ELE9BQU9DLFlBQVl4QjtRQUM1QjtRQUNBLFNBQVNnRCxPQUFPeEIsTUFBTTtZQUNwQixPQUFPRCxPQUFPQyxZQUFZZDtRQUM1QjtRQUNBLFNBQVN1QyxPQUFPekIsTUFBTTtZQUNwQixPQUFPRCxPQUFPQyxZQUFZZjtRQUM1QjtRQUNBLFNBQVN5QyxTQUFTMUIsTUFBTTtZQUN0QixPQUFPRCxPQUFPQyxZQUFZekI7UUFDNUI7UUFDQSxTQUFTb0QsV0FBVzNCLE1BQU07WUFDeEIsT0FBT0QsT0FBT0MsWUFBWXRCO1FBQzVCO1FBQ0EsU0FBU2tELGFBQWE1QixNQUFNO1lBQzFCLE9BQU9ELE9BQU9DLFlBQVl2QjtRQUM1QjtRQUNBLFNBQVNvRCxXQUFXN0IsTUFBTTtZQUN4QixPQUFPRCxPQUFPQyxZQUFZakI7UUFDNUI7UUFDQSxTQUFTK0MsZUFBZTlCLE1BQU07WUFDNUIsT0FBT0QsT0FBT0MsWUFBWWhCO1FBQzVCO1FBRUErQyx1QkFBdUIsR0FBRzdCO1FBQzFCNkIsdUJBQXVCLEdBQUc1QjtRQUMxQjRCLGVBQWUsR0FBRzNCO1FBQ2xCMkIsa0JBQWtCLEdBQUcxQjtRQUNyQjBCLGdCQUFnQixHQUFHekI7UUFDbkJ5QixZQUFZLEdBQUd4QjtRQUNmd0IsWUFBWSxHQUFHdkI7UUFDZnVCLGNBQWMsR0FBR3RCO1FBQ2pCc0IsZ0JBQWdCLEdBQUdyQjtRQUNuQnFCLGtCQUFrQixHQUFHcEI7UUFDckJvQixnQkFBZ0IsR0FBR25CO1FBQ25CbUIsb0JBQW9CLEdBQUdsQjtRQUN2QmtCLG1CQUFtQixHQUFHZjtRQUN0QmUsd0JBQXdCLEdBQUdiO1FBQzNCYSx5QkFBeUIsR0FBR1o7UUFDNUJZLHlCQUF5QixHQUFHWDtRQUM1QlcsaUJBQWlCLEdBQUdWO1FBQ3BCVSxvQkFBb0IsR0FBR1Q7UUFDdkJTLGtCQUFrQixHQUFHUjtRQUNyQlEsY0FBYyxHQUFHUDtRQUNqQk8sY0FBYyxHQUFHTjtRQUNqQk0sZ0JBQWdCLEdBQUdMO1FBQ25CSyxrQkFBa0IsR0FBR0o7UUFDckJJLG9CQUFvQixHQUFHSDtRQUN2Qkcsa0JBQWtCLEdBQUdGO1FBQ3JCRSxzQkFBc0IsR0FBR0Q7UUFDekJDLDBCQUEwQixHQUFHckM7UUFDN0JxQyxjQUFjLEdBQUdoQztJQUNmO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L25vZGVfbW9kdWxlcy9yZWFjdC1pcy9janMvcmVhY3QtaXMuZGV2ZWxvcG1lbnQuanM/YWVlZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlIFJlYWN0XG4gKiByZWFjdC1pcy5kZXZlbG9wbWVudC5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAoZnVuY3Rpb24oKSB7XG4ndXNlIHN0cmljdCc7XG5cbi8vIEFUVEVOVElPTlxuLy8gV2hlbiBhZGRpbmcgbmV3IHN5bWJvbHMgdG8gdGhpcyBmaWxlLFxuLy8gUGxlYXNlIGNvbnNpZGVyIGFsc28gYWRkaW5nIHRvICdyZWFjdC1kZXZ0b29scy1zaGFyZWQvc3JjL2JhY2tlbmQvUmVhY3RTeW1ib2xzJ1xuLy8gVGhlIFN5bWJvbCB1c2VkIHRvIHRhZyB0aGUgUmVhY3RFbGVtZW50LWxpa2UgdHlwZXMuXG52YXIgUkVBQ1RfRUxFTUVOVF9UWVBFID0gU3ltYm9sLmZvcigncmVhY3QuZWxlbWVudCcpO1xudmFyIFJFQUNUX1BPUlRBTF9UWVBFID0gU3ltYm9sLmZvcigncmVhY3QucG9ydGFsJyk7XG52YXIgUkVBQ1RfRlJBR01FTlRfVFlQRSA9IFN5bWJvbC5mb3IoJ3JlYWN0LmZyYWdtZW50Jyk7XG52YXIgUkVBQ1RfU1RSSUNUX01PREVfVFlQRSA9IFN5bWJvbC5mb3IoJ3JlYWN0LnN0cmljdF9tb2RlJyk7XG52YXIgUkVBQ1RfUFJPRklMRVJfVFlQRSA9IFN5bWJvbC5mb3IoJ3JlYWN0LnByb2ZpbGVyJyk7XG52YXIgUkVBQ1RfUFJPVklERVJfVFlQRSA9IFN5bWJvbC5mb3IoJ3JlYWN0LnByb3ZpZGVyJyk7XG52YXIgUkVBQ1RfQ09OVEVYVF9UWVBFID0gU3ltYm9sLmZvcigncmVhY3QuY29udGV4dCcpO1xudmFyIFJFQUNUX1NFUlZFUl9DT05URVhUX1RZUEUgPSBTeW1ib2wuZm9yKCdyZWFjdC5zZXJ2ZXJfY29udGV4dCcpO1xudmFyIFJFQUNUX0ZPUldBUkRfUkVGX1RZUEUgPSBTeW1ib2wuZm9yKCdyZWFjdC5mb3J3YXJkX3JlZicpO1xudmFyIFJFQUNUX1NVU1BFTlNFX1RZUEUgPSBTeW1ib2wuZm9yKCdyZWFjdC5zdXNwZW5zZScpO1xudmFyIFJFQUNUX1NVU1BFTlNFX0xJU1RfVFlQRSA9IFN5bWJvbC5mb3IoJ3JlYWN0LnN1c3BlbnNlX2xpc3QnKTtcbnZhciBSRUFDVF9NRU1PX1RZUEUgPSBTeW1ib2wuZm9yKCdyZWFjdC5tZW1vJyk7XG52YXIgUkVBQ1RfTEFaWV9UWVBFID0gU3ltYm9sLmZvcigncmVhY3QubGF6eScpO1xudmFyIFJFQUNUX09GRlNDUkVFTl9UWVBFID0gU3ltYm9sLmZvcigncmVhY3Qub2Zmc2NyZWVuJyk7XG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbnZhciBlbmFibGVTY29wZUFQSSA9IGZhbHNlOyAvLyBFeHBlcmltZW50YWwgQ3JlYXRlIEV2ZW50IEhhbmRsZSBBUEkuXG52YXIgZW5hYmxlQ2FjaGVFbGVtZW50ID0gZmFsc2U7XG52YXIgZW5hYmxlVHJhbnNpdGlvblRyYWNpbmcgPSBmYWxzZTsgLy8gTm8ga25vd24gYnVncywgYnV0IG5lZWRzIHBlcmZvcm1hbmNlIHRlc3RpbmdcblxudmFyIGVuYWJsZUxlZ2FjeUhpZGRlbiA9IGZhbHNlOyAvLyBFbmFibGVzIHVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrIGZlYXR1cmUgaW4gRmliZXJcbi8vIHN0dWZmLiBJbnRlbmRlZCB0byBlbmFibGUgUmVhY3QgY29yZSBtZW1iZXJzIHRvIG1vcmUgZWFzaWx5IGRlYnVnIHNjaGVkdWxpbmdcbi8vIGlzc3VlcyBpbiBERVYgYnVpbGRzLlxuXG52YXIgZW5hYmxlRGVidWdUcmFjaW5nID0gZmFsc2U7IC8vIFRyYWNrIHdoaWNoIEZpYmVyKHMpIHNjaGVkdWxlIHJlbmRlciB3b3JrLlxuXG52YXIgUkVBQ1RfTU9EVUxFX1JFRkVSRU5DRTtcblxue1xuICBSRUFDVF9NT0RVTEVfUkVGRVJFTkNFID0gU3ltYm9sLmZvcigncmVhY3QubW9kdWxlLnJlZmVyZW5jZScpO1xufVxuXG5mdW5jdGlvbiBpc1ZhbGlkRWxlbWVudFR5cGUodHlwZSkge1xuICBpZiAodHlwZW9mIHR5cGUgPT09ICdzdHJpbmcnIHx8IHR5cGVvZiB0eXBlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH0gLy8gTm90ZTogdHlwZW9mIG1pZ2h0IGJlIG90aGVyIHRoYW4gJ3N5bWJvbCcgb3IgJ251bWJlcicgKGUuZy4gaWYgaXQncyBhIHBvbHlmaWxsKS5cblxuXG4gIGlmICh0eXBlID09PSBSRUFDVF9GUkFHTUVOVF9UWVBFIHx8IHR5cGUgPT09IFJFQUNUX1BST0ZJTEVSX1RZUEUgfHwgZW5hYmxlRGVidWdUcmFjaW5nICB8fCB0eXBlID09PSBSRUFDVF9TVFJJQ1RfTU9ERV9UWVBFIHx8IHR5cGUgPT09IFJFQUNUX1NVU1BFTlNFX1RZUEUgfHwgdHlwZSA9PT0gUkVBQ1RfU1VTUEVOU0VfTElTVF9UWVBFIHx8IGVuYWJsZUxlZ2FjeUhpZGRlbiAgfHwgdHlwZSA9PT0gUkVBQ1RfT0ZGU0NSRUVOX1RZUEUgfHwgZW5hYmxlU2NvcGVBUEkgIHx8IGVuYWJsZUNhY2hlRWxlbWVudCAgfHwgZW5hYmxlVHJhbnNpdGlvblRyYWNpbmcgKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICBpZiAodHlwZW9mIHR5cGUgPT09ICdvYmplY3QnICYmIHR5cGUgIT09IG51bGwpIHtcbiAgICBpZiAodHlwZS4kJHR5cGVvZiA9PT0gUkVBQ1RfTEFaWV9UWVBFIHx8IHR5cGUuJCR0eXBlb2YgPT09IFJFQUNUX01FTU9fVFlQRSB8fCB0eXBlLiQkdHlwZW9mID09PSBSRUFDVF9QUk9WSURFUl9UWVBFIHx8IHR5cGUuJCR0eXBlb2YgPT09IFJFQUNUX0NPTlRFWFRfVFlQRSB8fCB0eXBlLiQkdHlwZW9mID09PSBSRUFDVF9GT1JXQVJEX1JFRl9UWVBFIHx8IC8vIFRoaXMgbmVlZHMgdG8gaW5jbHVkZSBhbGwgcG9zc2libGUgbW9kdWxlIHJlZmVyZW5jZSBvYmplY3RcbiAgICAvLyB0eXBlcyBzdXBwb3J0ZWQgYnkgYW55IEZsaWdodCBjb25maWd1cmF0aW9uIGFueXdoZXJlIHNpbmNlXG4gICAgLy8gd2UgZG9uJ3Qga25vdyB3aGljaCBGbGlnaHQgYnVpbGQgdGhpcyB3aWxsIGVuZCB1cCBiZWluZyB1c2VkXG4gICAgLy8gd2l0aC5cbiAgICB0eXBlLiQkdHlwZW9mID09PSBSRUFDVF9NT0RVTEVfUkVGRVJFTkNFIHx8IHR5cGUuZ2V0TW9kdWxlSWQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG5mdW5jdGlvbiB0eXBlT2Yob2JqZWN0KSB7XG4gIGlmICh0eXBlb2Ygb2JqZWN0ID09PSAnb2JqZWN0JyAmJiBvYmplY3QgIT09IG51bGwpIHtcbiAgICB2YXIgJCR0eXBlb2YgPSBvYmplY3QuJCR0eXBlb2Y7XG5cbiAgICBzd2l0Y2ggKCQkdHlwZW9mKSB7XG4gICAgICBjYXNlIFJFQUNUX0VMRU1FTlRfVFlQRTpcbiAgICAgICAgdmFyIHR5cGUgPSBvYmplY3QudHlwZTtcblxuICAgICAgICBzd2l0Y2ggKHR5cGUpIHtcbiAgICAgICAgICBjYXNlIFJFQUNUX0ZSQUdNRU5UX1RZUEU6XG4gICAgICAgICAgY2FzZSBSRUFDVF9QUk9GSUxFUl9UWVBFOlxuICAgICAgICAgIGNhc2UgUkVBQ1RfU1RSSUNUX01PREVfVFlQRTpcbiAgICAgICAgICBjYXNlIFJFQUNUX1NVU1BFTlNFX1RZUEU6XG4gICAgICAgICAgY2FzZSBSRUFDVF9TVVNQRU5TRV9MSVNUX1RZUEU6XG4gICAgICAgICAgICByZXR1cm4gdHlwZTtcblxuICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICB2YXIgJCR0eXBlb2ZUeXBlID0gdHlwZSAmJiB0eXBlLiQkdHlwZW9mO1xuXG4gICAgICAgICAgICBzd2l0Y2ggKCQkdHlwZW9mVHlwZSkge1xuICAgICAgICAgICAgICBjYXNlIFJFQUNUX1NFUlZFUl9DT05URVhUX1RZUEU6XG4gICAgICAgICAgICAgIGNhc2UgUkVBQ1RfQ09OVEVYVF9UWVBFOlxuICAgICAgICAgICAgICBjYXNlIFJFQUNUX0ZPUldBUkRfUkVGX1RZUEU6XG4gICAgICAgICAgICAgIGNhc2UgUkVBQ1RfTEFaWV9UWVBFOlxuICAgICAgICAgICAgICBjYXNlIFJFQUNUX01FTU9fVFlQRTpcbiAgICAgICAgICAgICAgY2FzZSBSRUFDVF9QUk9WSURFUl9UWVBFOlxuICAgICAgICAgICAgICAgIHJldHVybiAkJHR5cGVvZlR5cGU7XG5cbiAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICByZXR1cm4gJCR0eXBlb2Y7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgfVxuXG4gICAgICBjYXNlIFJFQUNUX1BPUlRBTF9UWVBFOlxuICAgICAgICByZXR1cm4gJCR0eXBlb2Y7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHVuZGVmaW5lZDtcbn1cbnZhciBDb250ZXh0Q29uc3VtZXIgPSBSRUFDVF9DT05URVhUX1RZUEU7XG52YXIgQ29udGV4dFByb3ZpZGVyID0gUkVBQ1RfUFJPVklERVJfVFlQRTtcbnZhciBFbGVtZW50ID0gUkVBQ1RfRUxFTUVOVF9UWVBFO1xudmFyIEZvcndhcmRSZWYgPSBSRUFDVF9GT1JXQVJEX1JFRl9UWVBFO1xudmFyIEZyYWdtZW50ID0gUkVBQ1RfRlJBR01FTlRfVFlQRTtcbnZhciBMYXp5ID0gUkVBQ1RfTEFaWV9UWVBFO1xudmFyIE1lbW8gPSBSRUFDVF9NRU1PX1RZUEU7XG52YXIgUG9ydGFsID0gUkVBQ1RfUE9SVEFMX1RZUEU7XG52YXIgUHJvZmlsZXIgPSBSRUFDVF9QUk9GSUxFUl9UWVBFO1xudmFyIFN0cmljdE1vZGUgPSBSRUFDVF9TVFJJQ1RfTU9ERV9UWVBFO1xudmFyIFN1c3BlbnNlID0gUkVBQ1RfU1VTUEVOU0VfVFlQRTtcbnZhciBTdXNwZW5zZUxpc3QgPSBSRUFDVF9TVVNQRU5TRV9MSVNUX1RZUEU7XG52YXIgaGFzV2FybmVkQWJvdXREZXByZWNhdGVkSXNBc3luY01vZGUgPSBmYWxzZTtcbnZhciBoYXNXYXJuZWRBYm91dERlcHJlY2F0ZWRJc0NvbmN1cnJlbnRNb2RlID0gZmFsc2U7IC8vIEFzeW5jTW9kZSBzaG91bGQgYmUgZGVwcmVjYXRlZFxuXG5mdW5jdGlvbiBpc0FzeW5jTW9kZShvYmplY3QpIHtcbiAge1xuICAgIGlmICghaGFzV2FybmVkQWJvdXREZXByZWNhdGVkSXNBc3luY01vZGUpIHtcbiAgICAgIGhhc1dhcm5lZEFib3V0RGVwcmVjYXRlZElzQXN5bmNNb2RlID0gdHJ1ZTsgLy8gVXNpbmcgY29uc29sZVsnd2FybiddIHRvIGV2YWRlIEJhYmVsIGFuZCBFU0xpbnRcblxuICAgICAgY29uc29sZVsnd2FybiddKCdUaGUgUmVhY3RJcy5pc0FzeW5jTW9kZSgpIGFsaWFzIGhhcyBiZWVuIGRlcHJlY2F0ZWQsICcgKyAnYW5kIHdpbGwgYmUgcmVtb3ZlZCBpbiBSZWFjdCAxOCsuJyk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGZhbHNlO1xufVxuZnVuY3Rpb24gaXNDb25jdXJyZW50TW9kZShvYmplY3QpIHtcbiAge1xuICAgIGlmICghaGFzV2FybmVkQWJvdXREZXByZWNhdGVkSXNDb25jdXJyZW50TW9kZSkge1xuICAgICAgaGFzV2FybmVkQWJvdXREZXByZWNhdGVkSXNDb25jdXJyZW50TW9kZSA9IHRydWU7IC8vIFVzaW5nIGNvbnNvbGVbJ3dhcm4nXSB0byBldmFkZSBCYWJlbCBhbmQgRVNMaW50XG5cbiAgICAgIGNvbnNvbGVbJ3dhcm4nXSgnVGhlIFJlYWN0SXMuaXNDb25jdXJyZW50TW9kZSgpIGFsaWFzIGhhcyBiZWVuIGRlcHJlY2F0ZWQsICcgKyAnYW5kIHdpbGwgYmUgcmVtb3ZlZCBpbiBSZWFjdCAxOCsuJyk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGZhbHNlO1xufVxuZnVuY3Rpb24gaXNDb250ZXh0Q29uc3VtZXIob2JqZWN0KSB7XG4gIHJldHVybiB0eXBlT2Yob2JqZWN0KSA9PT0gUkVBQ1RfQ09OVEVYVF9UWVBFO1xufVxuZnVuY3Rpb24gaXNDb250ZXh0UHJvdmlkZXIob2JqZWN0KSB7XG4gIHJldHVybiB0eXBlT2Yob2JqZWN0KSA9PT0gUkVBQ1RfUFJPVklERVJfVFlQRTtcbn1cbmZ1bmN0aW9uIGlzRWxlbWVudChvYmplY3QpIHtcbiAgcmV0dXJuIHR5cGVvZiBvYmplY3QgPT09ICdvYmplY3QnICYmIG9iamVjdCAhPT0gbnVsbCAmJiBvYmplY3QuJCR0eXBlb2YgPT09IFJFQUNUX0VMRU1FTlRfVFlQRTtcbn1cbmZ1bmN0aW9uIGlzRm9yd2FyZFJlZihvYmplY3QpIHtcbiAgcmV0dXJuIHR5cGVPZihvYmplY3QpID09PSBSRUFDVF9GT1JXQVJEX1JFRl9UWVBFO1xufVxuZnVuY3Rpb24gaXNGcmFnbWVudChvYmplY3QpIHtcbiAgcmV0dXJuIHR5cGVPZihvYmplY3QpID09PSBSRUFDVF9GUkFHTUVOVF9UWVBFO1xufVxuZnVuY3Rpb24gaXNMYXp5KG9iamVjdCkge1xuICByZXR1cm4gdHlwZU9mKG9iamVjdCkgPT09IFJFQUNUX0xBWllfVFlQRTtcbn1cbmZ1bmN0aW9uIGlzTWVtbyhvYmplY3QpIHtcbiAgcmV0dXJuIHR5cGVPZihvYmplY3QpID09PSBSRUFDVF9NRU1PX1RZUEU7XG59XG5mdW5jdGlvbiBpc1BvcnRhbChvYmplY3QpIHtcbiAgcmV0dXJuIHR5cGVPZihvYmplY3QpID09PSBSRUFDVF9QT1JUQUxfVFlQRTtcbn1cbmZ1bmN0aW9uIGlzUHJvZmlsZXIob2JqZWN0KSB7XG4gIHJldHVybiB0eXBlT2Yob2JqZWN0KSA9PT0gUkVBQ1RfUFJPRklMRVJfVFlQRTtcbn1cbmZ1bmN0aW9uIGlzU3RyaWN0TW9kZShvYmplY3QpIHtcbiAgcmV0dXJuIHR5cGVPZihvYmplY3QpID09PSBSRUFDVF9TVFJJQ1RfTU9ERV9UWVBFO1xufVxuZnVuY3Rpb24gaXNTdXNwZW5zZShvYmplY3QpIHtcbiAgcmV0dXJuIHR5cGVPZihvYmplY3QpID09PSBSRUFDVF9TVVNQRU5TRV9UWVBFO1xufVxuZnVuY3Rpb24gaXNTdXNwZW5zZUxpc3Qob2JqZWN0KSB7XG4gIHJldHVybiB0eXBlT2Yob2JqZWN0KSA9PT0gUkVBQ1RfU1VTUEVOU0VfTElTVF9UWVBFO1xufVxuXG5leHBvcnRzLkNvbnRleHRDb25zdW1lciA9IENvbnRleHRDb25zdW1lcjtcbmV4cG9ydHMuQ29udGV4dFByb3ZpZGVyID0gQ29udGV4dFByb3ZpZGVyO1xuZXhwb3J0cy5FbGVtZW50ID0gRWxlbWVudDtcbmV4cG9ydHMuRm9yd2FyZFJlZiA9IEZvcndhcmRSZWY7XG5leHBvcnRzLkZyYWdtZW50ID0gRnJhZ21lbnQ7XG5leHBvcnRzLkxhenkgPSBMYXp5O1xuZXhwb3J0cy5NZW1vID0gTWVtbztcbmV4cG9ydHMuUG9ydGFsID0gUG9ydGFsO1xuZXhwb3J0cy5Qcm9maWxlciA9IFByb2ZpbGVyO1xuZXhwb3J0cy5TdHJpY3RNb2RlID0gU3RyaWN0TW9kZTtcbmV4cG9ydHMuU3VzcGVuc2UgPSBTdXNwZW5zZTtcbmV4cG9ydHMuU3VzcGVuc2VMaXN0ID0gU3VzcGVuc2VMaXN0O1xuZXhwb3J0cy5pc0FzeW5jTW9kZSA9IGlzQXN5bmNNb2RlO1xuZXhwb3J0cy5pc0NvbmN1cnJlbnRNb2RlID0gaXNDb25jdXJyZW50TW9kZTtcbmV4cG9ydHMuaXNDb250ZXh0Q29uc3VtZXIgPSBpc0NvbnRleHRDb25zdW1lcjtcbmV4cG9ydHMuaXNDb250ZXh0UHJvdmlkZXIgPSBpc0NvbnRleHRQcm92aWRlcjtcbmV4cG9ydHMuaXNFbGVtZW50ID0gaXNFbGVtZW50O1xuZXhwb3J0cy5pc0ZvcndhcmRSZWYgPSBpc0ZvcndhcmRSZWY7XG5leHBvcnRzLmlzRnJhZ21lbnQgPSBpc0ZyYWdtZW50O1xuZXhwb3J0cy5pc0xhenkgPSBpc0xhenk7XG5leHBvcnRzLmlzTWVtbyA9IGlzTWVtbztcbmV4cG9ydHMuaXNQb3J0YWwgPSBpc1BvcnRhbDtcbmV4cG9ydHMuaXNQcm9maWxlciA9IGlzUHJvZmlsZXI7XG5leHBvcnRzLmlzU3RyaWN0TW9kZSA9IGlzU3RyaWN0TW9kZTtcbmV4cG9ydHMuaXNTdXNwZW5zZSA9IGlzU3VzcGVuc2U7XG5leHBvcnRzLmlzU3VzcGVuc2VMaXN0ID0gaXNTdXNwZW5zZUxpc3Q7XG5leHBvcnRzLmlzVmFsaWRFbGVtZW50VHlwZSA9IGlzVmFsaWRFbGVtZW50VHlwZTtcbmV4cG9ydHMudHlwZU9mID0gdHlwZU9mO1xuICB9KSgpO1xufVxuIl0sIm5hbWVzIjpbInByb2Nlc3MiLCJSRUFDVF9FTEVNRU5UX1RZUEUiLCJTeW1ib2wiLCJmb3IiLCJSRUFDVF9QT1JUQUxfVFlQRSIsIlJFQUNUX0ZSQUdNRU5UX1RZUEUiLCJSRUFDVF9TVFJJQ1RfTU9ERV9UWVBFIiwiUkVBQ1RfUFJPRklMRVJfVFlQRSIsIlJFQUNUX1BST1ZJREVSX1RZUEUiLCJSRUFDVF9DT05URVhUX1RZUEUiLCJSRUFDVF9TRVJWRVJfQ09OVEVYVF9UWVBFIiwiUkVBQ1RfRk9SV0FSRF9SRUZfVFlQRSIsIlJFQUNUX1NVU1BFTlNFX1RZUEUiLCJSRUFDVF9TVVNQRU5TRV9MSVNUX1RZUEUiLCJSRUFDVF9NRU1PX1RZUEUiLCJSRUFDVF9MQVpZX1RZUEUiLCJSRUFDVF9PRkZTQ1JFRU5fVFlQRSIsImVuYWJsZVNjb3BlQVBJIiwiZW5hYmxlQ2FjaGVFbGVtZW50IiwiZW5hYmxlVHJhbnNpdGlvblRyYWNpbmciLCJlbmFibGVMZWdhY3lIaWRkZW4iLCJlbmFibGVEZWJ1Z1RyYWNpbmciLCJSRUFDVF9NT0RVTEVfUkVGRVJFTkNFIiwiaXNWYWxpZEVsZW1lbnRUeXBlIiwidHlwZSIsIiQkdHlwZW9mIiwiZ2V0TW9kdWxlSWQiLCJ1bmRlZmluZWQiLCJ0eXBlT2YiLCJvYmplY3QiLCIkJHR5cGVvZlR5cGUiLCJDb250ZXh0Q29uc3VtZXIiLCJDb250ZXh0UHJvdmlkZXIiLCJFbGVtZW50IiwiRm9yd2FyZFJlZiIsIkZyYWdtZW50IiwiTGF6eSIsIk1lbW8iLCJQb3J0YWwiLCJQcm9maWxlciIsIlN0cmljdE1vZGUiLCJTdXNwZW5zZSIsIlN1c3BlbnNlTGlzdCIsImhhc1dhcm5lZEFib3V0RGVwcmVjYXRlZElzQXN5bmNNb2RlIiwiaGFzV2FybmVkQWJvdXREZXByZWNhdGVkSXNDb25jdXJyZW50TW9kZSIsImlzQXN5bmNNb2RlIiwiY29uc29sZSIsImlzQ29uY3VycmVudE1vZGUiLCJpc0NvbnRleHRDb25zdW1lciIsImlzQ29udGV4dFByb3ZpZGVyIiwiaXNFbGVtZW50IiwiaXNGb3J3YXJkUmVmIiwiaXNGcmFnbWVudCIsImlzTGF6eSIsImlzTWVtbyIsImlzUG9ydGFsIiwiaXNQcm9maWxlciIsImlzU3RyaWN0TW9kZSIsImlzU3VzcGVuc2UiLCJpc1N1c3BlbnNlTGlzdCIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/node_modules/react-is/cjs/react-is.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/node_modules/react-is/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/react-redux/node_modules/react-is/index.js ***!
  \*****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\nif (false) {} else {\n    module.exports = __webpack_require__(/*! ./cjs/react-is.development.js */ \"(app-pages-browser)/./node_modules/react-redux/node_modules/react-is/cjs/react-is.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9ub2RlX21vZHVsZXMvcmVhY3QtaXMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQSxJQUFJQSxLQUF5QixFQUFjLEVBRTFDLE1BQU07SUFDTEMsNktBQXlCO0FBQzNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9ub2RlX21vZHVsZXMvcmVhY3QtaXMvaW5kZXguanM/OTU5YyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiJdLCJuYW1lcyI6WyJwcm9jZXNzIiwibW9kdWxlIiwiZXhwb3J0cyIsInJlcXVpcmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/node_modules/react-is/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/redux/es/redux.js":
/*!****************************************!*\
  !*** ./node_modules/redux/es/redux.js ***!
  \****************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __DO_NOT_USE__ActionTypes: function() { return /* binding */ ActionTypes; },\n/* harmony export */   applyMiddleware: function() { return /* binding */ applyMiddleware; },\n/* harmony export */   bindActionCreators: function() { return /* binding */ bindActionCreators; },\n/* harmony export */   combineReducers: function() { return /* binding */ combineReducers; },\n/* harmony export */   compose: function() { return /* binding */ compose; },\n/* harmony export */   createStore: function() { return /* binding */ createStore; },\n/* harmony export */   legacy_createStore: function() { return /* binding */ legacy_createStore; }\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectSpread2 */ \"(app-pages-browser)/./node_modules/@babel/runtime/helpers/esm/objectSpread2.js\");\n\n/**\n * Adapted from React: https://github.com/facebook/react/blob/master/packages/shared/formatProdErrorMessage.js\n *\n * Do not require this module directly! Use normal throw error calls. These messages will be replaced with error codes\n * during build.\n * @param {number} code\n */ function formatProdErrorMessage(code) {\n    return \"Minified Redux error #\" + code + \"; visit https://redux.js.org/Errors?code=\" + code + \" for the full message or \" + \"use the non-minified dev environment for full errors. \";\n}\n// Inlined version of the `symbol-observable` polyfill\nvar $$observable = function() {\n    return typeof Symbol === \"function\" && Symbol.observable || \"@@observable\";\n}();\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */ var randomString = function randomString() {\n    return Math.random().toString(36).substring(7).split(\"\").join(\".\");\n};\nvar ActionTypes = {\n    INIT: \"@@redux/INIT\" + randomString(),\n    REPLACE: \"@@redux/REPLACE\" + randomString(),\n    PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n        return \"@@redux/PROBE_UNKNOWN_ACTION\" + randomString();\n    }\n};\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */ function isPlainObject(obj) {\n    if (typeof obj !== \"object\" || obj === null) return false;\n    var proto = obj;\n    while(Object.getPrototypeOf(proto) !== null){\n        proto = Object.getPrototypeOf(proto);\n    }\n    return Object.getPrototypeOf(obj) === proto;\n}\n// Inlined / shortened version of `kindOf` from https://github.com/jonschlinkert/kind-of\nfunction miniKindOf(val) {\n    if (val === void 0) return \"undefined\";\n    if (val === null) return \"null\";\n    var type = typeof val;\n    switch(type){\n        case \"boolean\":\n        case \"string\":\n        case \"number\":\n        case \"symbol\":\n        case \"function\":\n            {\n                return type;\n            }\n    }\n    if (Array.isArray(val)) return \"array\";\n    if (isDate(val)) return \"date\";\n    if (isError(val)) return \"error\";\n    var constructorName = ctorName(val);\n    switch(constructorName){\n        case \"Symbol\":\n        case \"Promise\":\n        case \"WeakMap\":\n        case \"WeakSet\":\n        case \"Map\":\n        case \"Set\":\n            return constructorName;\n    } // other\n    return type.slice(8, -1).toLowerCase().replace(/\\s/g, \"\");\n}\nfunction ctorName(val) {\n    return typeof val.constructor === \"function\" ? val.constructor.name : null;\n}\nfunction isError(val) {\n    return val instanceof Error || typeof val.message === \"string\" && val.constructor && typeof val.constructor.stackTraceLimit === \"number\";\n}\nfunction isDate(val) {\n    if (val instanceof Date) return true;\n    return typeof val.toDateString === \"function\" && typeof val.getDate === \"function\" && typeof val.setDate === \"function\";\n}\nfunction kindOf(val) {\n    var typeOfVal = typeof val;\n    if (true) {\n        typeOfVal = miniKindOf(val);\n    }\n    return typeOfVal;\n}\n/**\n * @deprecated\n *\n * **We recommend using the `configureStore` method\n * of the `@reduxjs/toolkit` package**, which replaces `createStore`.\n *\n * Redux Toolkit is our recommended approach for writing Redux logic today,\n * including store setup, reducers, data fetching, and more.\n *\n * **For more details, please read this Redux docs page:**\n * **https://redux.js.org/introduction/why-rtk-is-redux-today**\n *\n * `configureStore` from Redux Toolkit is an improved version of `createStore` that\n * simplifies setup and helps avoid common bugs.\n *\n * You should not be using the `redux` core package by itself today, except for learning purposes.\n * The `createStore` method from the core `redux` package will not be removed, but we encourage\n * all users to migrate to using Redux Toolkit for all Redux code.\n *\n * If you want to use `createStore` without this visual deprecation warning, use\n * the `legacy_createStore` import instead:\n *\n * `import { legacy_createStore as createStore} from 'redux'`\n *\n */ function createStore(reducer, preloadedState, enhancer) {\n    var _ref2;\n    if (typeof preloadedState === \"function\" && typeof enhancer === \"function\" || typeof enhancer === \"function\" && typeof arguments[3] === \"function\") {\n        throw new Error( false ? 0 : \"It looks like you are passing several store enhancers to \" + \"createStore(). This is not supported. Instead, compose them \" + \"together to a single function. See https://redux.js.org/tutorials/fundamentals/part-4-store#creating-a-store-with-enhancers for an example.\");\n    }\n    if (typeof preloadedState === \"function\" && typeof enhancer === \"undefined\") {\n        enhancer = preloadedState;\n        preloadedState = undefined;\n    }\n    if (typeof enhancer !== \"undefined\") {\n        if (typeof enhancer !== \"function\") {\n            throw new Error( false ? 0 : \"Expected the enhancer to be a function. Instead, received: '\" + kindOf(enhancer) + \"'\");\n        }\n        return enhancer(createStore)(reducer, preloadedState);\n    }\n    if (typeof reducer !== \"function\") {\n        throw new Error( false ? 0 : \"Expected the root reducer to be a function. Instead, received: '\" + kindOf(reducer) + \"'\");\n    }\n    var currentReducer = reducer;\n    var currentState = preloadedState;\n    var currentListeners = [];\n    var nextListeners = currentListeners;\n    var isDispatching = false;\n    /**\n   * This makes a shallow copy of currentListeners so we can use\n   * nextListeners as a temporary list while dispatching.\n   *\n   * This prevents any bugs around consumers calling\n   * subscribe/unsubscribe in the middle of a dispatch.\n   */ function ensureCanMutateNextListeners() {\n        if (nextListeners === currentListeners) {\n            nextListeners = currentListeners.slice();\n        }\n    }\n    /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */ function getState() {\n        if (isDispatching) {\n            throw new Error( false ? 0 : \"You may not call store.getState() while the reducer is executing. \" + \"The reducer has already received the state as an argument. \" + \"Pass it down from the top reducer instead of reading it from the store.\");\n        }\n        return currentState;\n    }\n    /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */ function subscribe(listener) {\n        if (typeof listener !== \"function\") {\n            throw new Error( false ? 0 : \"Expected the listener to be a function. Instead, received: '\" + kindOf(listener) + \"'\");\n        }\n        if (isDispatching) {\n            throw new Error( false ? 0 : \"You may not call store.subscribe() while the reducer is executing. \" + \"If you would like to be notified after the store has been updated, subscribe from a \" + \"component and invoke store.getState() in the callback to access the latest state. \" + \"See https://redux.js.org/api/store#subscribelistener for more details.\");\n        }\n        var isSubscribed = true;\n        ensureCanMutateNextListeners();\n        nextListeners.push(listener);\n        return function unsubscribe() {\n            if (!isSubscribed) {\n                return;\n            }\n            if (isDispatching) {\n                throw new Error( false ? 0 : \"You may not unsubscribe from a store listener while the reducer is executing. \" + \"See https://redux.js.org/api/store#subscribelistener for more details.\");\n            }\n            isSubscribed = false;\n            ensureCanMutateNextListeners();\n            var index = nextListeners.indexOf(listener);\n            nextListeners.splice(index, 1);\n            currentListeners = null;\n        };\n    }\n    /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */ function dispatch(action) {\n        if (!isPlainObject(action)) {\n            throw new Error( false ? 0 : \"Actions must be plain objects. Instead, the actual type was: '\" + kindOf(action) + \"'. You may need to add middleware to your store setup to handle dispatching other values, such as 'redux-thunk' to handle dispatching functions. See https://redux.js.org/tutorials/fundamentals/part-4-store#middleware and https://redux.js.org/tutorials/fundamentals/part-6-async-logic#using-the-redux-thunk-middleware for examples.\");\n        }\n        if (typeof action.type === \"undefined\") {\n            throw new Error( false ? 0 : 'Actions may not have an undefined \"type\" property. You may have misspelled an action type string constant.');\n        }\n        if (isDispatching) {\n            throw new Error( false ? 0 : \"Reducers may not dispatch actions.\");\n        }\n        try {\n            isDispatching = true;\n            currentState = currentReducer(currentState, action);\n        } finally{\n            isDispatching = false;\n        }\n        var listeners = currentListeners = nextListeners;\n        for(var i = 0; i < listeners.length; i++){\n            var listener = listeners[i];\n            listener();\n        }\n        return action;\n    }\n    /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */ function replaceReducer(nextReducer) {\n        if (typeof nextReducer !== \"function\") {\n            throw new Error( false ? 0 : \"Expected the nextReducer to be a function. Instead, received: '\" + kindOf(nextReducer));\n        }\n        currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.\n        // Any reducers that existed in both the new and old rootReducer\n        // will receive the previous state. This effectively populates\n        // the new state tree with any relevant data from the old one.\n        dispatch({\n            type: ActionTypes.REPLACE\n        });\n    }\n    /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */ function observable() {\n        var _ref;\n        var outerSubscribe = subscribe;\n        return _ref = {\n            /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */ subscribe: function subscribe(observer) {\n                if (typeof observer !== \"object\" || observer === null) {\n                    throw new Error( false ? 0 : \"Expected the observer to be an object. Instead, received: '\" + kindOf(observer) + \"'\");\n                }\n                function observeState() {\n                    if (observer.next) {\n                        observer.next(getState());\n                    }\n                }\n                observeState();\n                var unsubscribe = outerSubscribe(observeState);\n                return {\n                    unsubscribe: unsubscribe\n                };\n            }\n        }, _ref[$$observable] = function() {\n            return this;\n        }, _ref;\n    } // When a store is created, an \"INIT\" action is dispatched so that every\n    // reducer returns their initial state. This effectively populates\n    // the initial state tree.\n    dispatch({\n        type: ActionTypes.INIT\n    });\n    return _ref2 = {\n        dispatch: dispatch,\n        subscribe: subscribe,\n        getState: getState,\n        replaceReducer: replaceReducer\n    }, _ref2[$$observable] = observable, _ref2;\n}\n/**\n * Creates a Redux store that holds the state tree.\n *\n * **We recommend using `configureStore` from the\n * `@reduxjs/toolkit` package**, which replaces `createStore`:\n * **https://redux.js.org/introduction/why-rtk-is-redux-today**\n *\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */ var legacy_createStore = createStore;\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */ function warning(message) {\n    /* eslint-disable no-console */ if (typeof console !== \"undefined\" && typeof console.error === \"function\") {\n        console.error(message);\n    }\n    /* eslint-enable no-console */ try {\n        // This error was thrown as a convenience so that if you enable\n        // \"break on all exceptions\" in your console,\n        // it would pause the execution at this line.\n        throw new Error(message);\n    } catch (e) {} // eslint-disable-line no-empty\n}\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n    var reducerKeys = Object.keys(reducers);\n    var argumentName = action && action.type === ActionTypes.INIT ? \"preloadedState argument passed to createStore\" : \"previous state received by the reducer\";\n    if (reducerKeys.length === 0) {\n        return \"Store does not have a valid reducer. Make sure the argument passed \" + \"to combineReducers is an object whose values are reducers.\";\n    }\n    if (!isPlainObject(inputState)) {\n        return \"The \" + argumentName + ' has unexpected type of \"' + kindOf(inputState) + '\". Expected argument to be an object with the following ' + ('keys: \"' + reducerKeys.join('\", \"') + '\"');\n    }\n    var unexpectedKeys = Object.keys(inputState).filter(function(key) {\n        return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n    });\n    unexpectedKeys.forEach(function(key) {\n        unexpectedKeyCache[key] = true;\n    });\n    if (action && action.type === ActionTypes.REPLACE) return;\n    if (unexpectedKeys.length > 0) {\n        return \"Unexpected \" + (unexpectedKeys.length > 1 ? \"keys\" : \"key\") + \" \" + ('\"' + unexpectedKeys.join('\", \"') + '\" found in ' + argumentName + \". \") + \"Expected to find one of the known reducer keys instead: \" + ('\"' + reducerKeys.join('\", \"') + '\". Unexpected keys will be ignored.');\n    }\n}\nfunction assertReducerShape(reducers) {\n    Object.keys(reducers).forEach(function(key) {\n        var reducer = reducers[key];\n        var initialState = reducer(undefined, {\n            type: ActionTypes.INIT\n        });\n        if (typeof initialState === \"undefined\") {\n            throw new Error( false ? 0 : 'The slice reducer for key \"' + key + '\" returned undefined during initialization. ' + \"If the state passed to the reducer is undefined, you must \" + \"explicitly return the initial state. The initial state may \" + \"not be undefined. If you don't want to set a value for this reducer, \" + \"you can use null instead of undefined.\");\n        }\n        if (typeof reducer(undefined, {\n            type: ActionTypes.PROBE_UNKNOWN_ACTION()\n        }) === \"undefined\") {\n            throw new Error( false ? 0 : 'The slice reducer for key \"' + key + '\" returned undefined when probed with a random type. ' + (\"Don't try to handle '\" + ActionTypes.INIT + '\\' or other actions in \"redux/*\" ') + \"namespace. They are considered private. Instead, you must return the \" + \"current state for any unknown actions, unless it is undefined, \" + \"in which case you must return the initial state, regardless of the \" + \"action type. The initial state may not be undefined, but can be null.\");\n        }\n    });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */ function combineReducers(reducers) {\n    var reducerKeys = Object.keys(reducers);\n    var finalReducers = {};\n    for(var i = 0; i < reducerKeys.length; i++){\n        var key = reducerKeys[i];\n        if (true) {\n            if (typeof reducers[key] === \"undefined\") {\n                warning('No reducer provided for key \"' + key + '\"');\n            }\n        }\n        if (typeof reducers[key] === \"function\") {\n            finalReducers[key] = reducers[key];\n        }\n    }\n    var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same\n    // keys multiple times.\n    var unexpectedKeyCache;\n    if (true) {\n        unexpectedKeyCache = {};\n    }\n    var shapeAssertionError;\n    try {\n        assertReducerShape(finalReducers);\n    } catch (e) {\n        shapeAssertionError = e;\n    }\n    return function combination(state, action) {\n        if (state === void 0) {\n            state = {};\n        }\n        if (shapeAssertionError) {\n            throw shapeAssertionError;\n        }\n        if (true) {\n            var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n            if (warningMessage) {\n                warning(warningMessage);\n            }\n        }\n        var hasChanged = false;\n        var nextState = {};\n        for(var _i = 0; _i < finalReducerKeys.length; _i++){\n            var _key = finalReducerKeys[_i];\n            var reducer = finalReducers[_key];\n            var previousStateForKey = state[_key];\n            var nextStateForKey = reducer(previousStateForKey, action);\n            if (typeof nextStateForKey === \"undefined\") {\n                var actionType = action && action.type;\n                throw new Error( false ? 0 : \"When called with an action of type \" + (actionType ? '\"' + String(actionType) + '\"' : \"(unknown type)\") + ', the slice reducer for key \"' + _key + '\" returned undefined. ' + \"To ignore an action, you must explicitly return the previous state. \" + \"If you want this reducer to hold no value, you can return null instead of undefined.\");\n            }\n            nextState[_key] = nextStateForKey;\n            hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n        }\n        hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;\n        return hasChanged ? nextState : state;\n    };\n}\nfunction bindActionCreator(actionCreator, dispatch) {\n    return function() {\n        return dispatch(actionCreator.apply(this, arguments));\n    };\n}\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass an action creator as the first argument,\n * and get a dispatch wrapped function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */ function bindActionCreators(actionCreators, dispatch) {\n    if (typeof actionCreators === \"function\") {\n        return bindActionCreator(actionCreators, dispatch);\n    }\n    if (typeof actionCreators !== \"object\" || actionCreators === null) {\n        throw new Error( false ? 0 : \"bindActionCreators expected an object or a function, but instead received: '\" + kindOf(actionCreators) + \"'. \" + 'Did you write \"import ActionCreators from\" instead of \"import * as ActionCreators from\"?');\n    }\n    var boundActionCreators = {};\n    for(var key in actionCreators){\n        var actionCreator = actionCreators[key];\n        if (typeof actionCreator === \"function\") {\n            boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n        }\n    }\n    return boundActionCreators;\n}\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */ function compose() {\n    for(var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++){\n        funcs[_key] = arguments[_key];\n    }\n    if (funcs.length === 0) {\n        return function(arg) {\n            return arg;\n        };\n    }\n    if (funcs.length === 1) {\n        return funcs[0];\n    }\n    return funcs.reduce(function(a, b) {\n        return function() {\n            return a(b.apply(void 0, arguments));\n        };\n    });\n}\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */ function applyMiddleware() {\n    for(var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++){\n        middlewares[_key] = arguments[_key];\n    }\n    return function(createStore) {\n        return function() {\n            var store = createStore.apply(void 0, arguments);\n            var _dispatch = function dispatch() {\n                throw new Error( false ? 0 : \"Dispatching while constructing your middleware is not allowed. \" + \"Other middleware would not be applied to this dispatch.\");\n            };\n            var middlewareAPI = {\n                getState: store.getState,\n                dispatch: function dispatch() {\n                    return _dispatch.apply(void 0, arguments);\n                }\n            };\n            var chain = middlewares.map(function(middleware) {\n                return middleware(middlewareAPI);\n            });\n            _dispatch = compose.apply(void 0, chain)(store.dispatch);\n            return (0,_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])((0,_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, store), {}, {\n                dispatch: _dispatch\n            });\n        };\n    };\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/redux/es/redux.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("/**\n * @license React\n * use-sync-external-store-shim.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */ \nif (true) {\n    (function() {\n        var _s = $RefreshSig$();\n        \"use strict\";\n        /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== \"undefined\" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === \"function\") {\n            __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n        }\n        var React = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n        var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n        function error(format) {\n            {\n                {\n                    for(var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++){\n                        args[_key2 - 1] = arguments[_key2];\n                    }\n                    printWarning(\"error\", format, args);\n                }\n            }\n        }\n        function printWarning(level, format, args) {\n            // When changing this logic, you might want to also\n            // update consoleWithStackDev.www.js as well.\n            {\n                var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n                var stack = ReactDebugCurrentFrame.getStackAddendum();\n                if (stack !== \"\") {\n                    format += \"%s\";\n                    args = args.concat([\n                        stack\n                    ]);\n                } // eslint-disable-next-line react-internal/safe-string-coercion\n                var argsWithFormat = args.map(function(item) {\n                    return String(item);\n                }); // Careful: RN currently depends on this prefix\n                argsWithFormat.unshift(\"Warning: \" + format); // We intentionally don't use spread (or .apply) directly because it\n                // breaks IE9: https://github.com/facebook/react/issues/13610\n                // eslint-disable-next-line react-internal/no-production-logging\n                Function.prototype.apply.call(console[level], console, argsWithFormat);\n            }\n        }\n        /**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */ function is(x, y) {\n            return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n            ;\n        }\n        var objectIs = typeof Object.is === \"function\" ? Object.is : is;\n        // dispatch for CommonJS interop named imports.\n        var useState = React.useState, useEffect = React.useEffect, useLayoutEffect = React.useLayoutEffect, useDebugValue = React.useDebugValue;\n        var didWarnOld18Alpha = false;\n        var didWarnUncachedGetSnapshot = false; // Disclaimer: This shim breaks many of the rules of React, and only works\n        // because of a very particular set of implementation details and assumptions\n        // -- change any one of them and it will break. The most important assumption\n        // is that updates are always synchronous, because concurrent rendering is\n        // only available in versions of React that also have a built-in\n        // useSyncExternalStore API. And we only use this shim when the built-in API\n        // does not exist.\n        //\n        // Do not assume that the clever hacks used by this hook also work in general.\n        // The point of this shim is to replace the need for hacks by other libraries.\n        function useSyncExternalStore(subscribe, getSnapshot, // React do not expose a way to check if we're hydrating. So users of the shim\n        // will need to track that themselves and return the correct value\n        // from `getSnapshot`.\n        getServerSnapshot) {\n            _s();\n            {\n                if (!didWarnOld18Alpha) {\n                    if (React.startTransition !== undefined) {\n                        didWarnOld18Alpha = true;\n                        error(\"You are using an outdated, pre-release alpha of React 18 that \" + \"does not support useSyncExternalStore. The \" + \"use-sync-external-store shim will not work correctly. Upgrade \" + \"to a newer pre-release.\");\n                    }\n                }\n            }\n            // breaks the rules of React, and only works here because of specific\n            // implementation details, most importantly that updates are\n            // always synchronous.\n            var value = getSnapshot();\n            {\n                if (!didWarnUncachedGetSnapshot) {\n                    var cachedValue = getSnapshot();\n                    if (!objectIs(value, cachedValue)) {\n                        error(\"The result of getSnapshot should be cached to avoid an infinite loop\");\n                        didWarnUncachedGetSnapshot = true;\n                    }\n                }\n            }\n            // re-render whenever the subscribed state changes by updating an some\n            // arbitrary useState hook. Then, during render, we call getSnapshot to read\n            // the current value.\n            //\n            // Because we don't actually use the state returned by the useState hook, we\n            // can save a bit of memory by storing other stuff in that slot.\n            //\n            // To implement the early bailout, we need to track some things on a mutable\n            // object. Usually, we would put that in a useRef hook, but we can stash it in\n            // our useState hook instead.\n            //\n            // To force a re-render, we call forceUpdate({inst}). That works because the\n            // new object always fails an equality check.\n            var _useState = useState({\n                inst: {\n                    value: value,\n                    getSnapshot: getSnapshot\n                }\n            }), inst = _useState[0].inst, forceUpdate = _useState[1]; // Track the latest getSnapshot function with a ref. This needs to be updated\n            // in the layout phase so we can access it during the tearing check that\n            // happens on subscribe.\n            useLayoutEffect(function() {\n                inst.value = value;\n                inst.getSnapshot = getSnapshot; // Whenever getSnapshot or subscribe changes, we need to check in the\n                // commit phase if there was an interleaved mutation. In concurrent mode\n                // this can happen all the time, but even in synchronous mode, an earlier\n                // effect may have mutated the store.\n                if (checkIfSnapshotChanged(inst)) {\n                    // Force a re-render.\n                    forceUpdate({\n                        inst: inst\n                    });\n                }\n            }, [\n                subscribe,\n                value,\n                getSnapshot\n            ]);\n            useEffect(function() {\n                // Check for changes right before subscribing. Subsequent changes will be\n                // detected in the subscription handler.\n                if (checkIfSnapshotChanged(inst)) {\n                    // Force a re-render.\n                    forceUpdate({\n                        inst: inst\n                    });\n                }\n                var handleStoreChange = function() {\n                    // TODO: Because there is no cross-renderer API for batching updates, it's\n                    // up to the consumer of this library to wrap their subscription event\n                    // with unstable_batchedUpdates. Should we try to detect when this isn't\n                    // the case and print a warning in development?\n                    // The store changed. Check if the snapshot changed since the last time we\n                    // read from the store.\n                    if (checkIfSnapshotChanged(inst)) {\n                        // Force a re-render.\n                        forceUpdate({\n                            inst: inst\n                        });\n                    }\n                }; // Subscribe to the store and return a clean-up function.\n                return subscribe(handleStoreChange);\n            }, [\n                subscribe\n            ]);\n            useDebugValue(value);\n            return value;\n        }\n        _s(useSyncExternalStore, \"HNxGYQ39TeXJ0jUaPc6qLOsv73k=\");\n        function checkIfSnapshotChanged(inst) {\n            var latestGetSnapshot = inst.getSnapshot;\n            var prevValue = inst.value;\n            try {\n                var nextValue = latestGetSnapshot();\n                return !objectIs(prevValue, nextValue);\n            } catch (error) {\n                return true;\n            }\n        }\n        function useSyncExternalStore$1(subscribe, getSnapshot, getServerSnapshot) {\n            // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n            // React do not expose a way to check if we're hydrating. So users of the shim\n            // will need to track that themselves and return the correct value\n            // from `getSnapshot`.\n            return getSnapshot();\n        }\n        var canUseDOM = !!( true && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\");\n        var isServerEnvironment = !canUseDOM;\n        var shim = isServerEnvironment ? useSyncExternalStore$1 : useSyncExternalStore;\n        var useSyncExternalStore$2 = React.useSyncExternalStore !== undefined ? React.useSyncExternalStore : shim;\n        exports.useSyncExternalStore = useSyncExternalStore$2;\n        /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== \"undefined\" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === \"function\") {\n            __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n        }\n    })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.development.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.development.js ***!
  \************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("/**\n * @license React\n * use-sync-external-store-shim/with-selector.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */ \nif (true) {\n    (function() {\n        var _s = $RefreshSig$();\n        \"use strict\";\n        /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== \"undefined\" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === \"function\") {\n            __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n        }\n        var React = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n        var shim = __webpack_require__(/*! use-sync-external-store/shim */ \"(app-pages-browser)/./node_modules/use-sync-external-store/shim/index.js\");\n        /**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */ function is(x, y) {\n            return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n            ;\n        }\n        var objectIs = typeof Object.is === \"function\" ? Object.is : is;\n        var useSyncExternalStore = shim.useSyncExternalStore;\n        // for CommonJS interop.\n        var useRef = React.useRef, useEffect = React.useEffect, useMemo = React.useMemo, useDebugValue = React.useDebugValue; // Same as useSyncExternalStore, but supports selector and isEqual arguments.\n        function useSyncExternalStoreWithSelector(subscribe, getSnapshot, getServerSnapshot, selector, isEqual) {\n            _s();\n            // Use this to track the rendered snapshot.\n            var instRef = useRef(null);\n            var inst;\n            if (instRef.current === null) {\n                inst = {\n                    hasValue: false,\n                    value: null\n                };\n                instRef.current = inst;\n            } else {\n                inst = instRef.current;\n            }\n            var _useMemo = useMemo(function() {\n                // Track the memoized state using closure variables that are local to this\n                // memoized instance of a getSnapshot function. Intentionally not using a\n                // useRef hook, because that state would be shared across all concurrent\n                // copies of the hook/component.\n                var hasMemo = false;\n                var memoizedSnapshot;\n                var memoizedSelection;\n                var memoizedSelector = function(nextSnapshot) {\n                    if (!hasMemo) {\n                        // The first time the hook is called, there is no memoized result.\n                        hasMemo = true;\n                        memoizedSnapshot = nextSnapshot;\n                        var _nextSelection = selector(nextSnapshot);\n                        if (isEqual !== undefined) {\n                            // Even if the selector has changed, the currently rendered selection\n                            // may be equal to the new selection. We should attempt to reuse the\n                            // current value if possible, to preserve downstream memoizations.\n                            if (inst.hasValue) {\n                                var currentSelection = inst.value;\n                                if (isEqual(currentSelection, _nextSelection)) {\n                                    memoizedSelection = currentSelection;\n                                    return currentSelection;\n                                }\n                            }\n                        }\n                        memoizedSelection = _nextSelection;\n                        return _nextSelection;\n                    } // We may be able to reuse the previous invocation's result.\n                    // We may be able to reuse the previous invocation's result.\n                    var prevSnapshot = memoizedSnapshot;\n                    var prevSelection = memoizedSelection;\n                    if (objectIs(prevSnapshot, nextSnapshot)) {\n                        // The snapshot is the same as last time. Reuse the previous selection.\n                        return prevSelection;\n                    } // The snapshot has changed, so we need to compute a new selection.\n                    // The snapshot has changed, so we need to compute a new selection.\n                    var nextSelection = selector(nextSnapshot); // If a custom isEqual function is provided, use that to check if the data\n                    // has changed. If it hasn't, return the previous selection. That signals\n                    // to React that the selections are conceptually equal, and we can bail\n                    // out of rendering.\n                    // If a custom isEqual function is provided, use that to check if the data\n                    // has changed. If it hasn't, return the previous selection. That signals\n                    // to React that the selections are conceptually equal, and we can bail\n                    // out of rendering.\n                    if (isEqual !== undefined && isEqual(prevSelection, nextSelection)) {\n                        return prevSelection;\n                    }\n                    memoizedSnapshot = nextSnapshot;\n                    memoizedSelection = nextSelection;\n                    return nextSelection;\n                }; // Assigning this to a constant so that Flow knows it can't change.\n                // Assigning this to a constant so that Flow knows it can't change.\n                var maybeGetServerSnapshot = getServerSnapshot === undefined ? null : getServerSnapshot;\n                var getSnapshotWithSelector = function() {\n                    return memoizedSelector(getSnapshot());\n                };\n                var getServerSnapshotWithSelector = maybeGetServerSnapshot === null ? undefined : function() {\n                    return memoizedSelector(maybeGetServerSnapshot());\n                };\n                return [\n                    getSnapshotWithSelector,\n                    getServerSnapshotWithSelector\n                ];\n            }, [\n                getSnapshot,\n                getServerSnapshot,\n                selector,\n                isEqual\n            ]), getSelection = _useMemo[0], getServerSelection = _useMemo[1];\n            var value = useSyncExternalStore(subscribe, getSelection, getServerSelection);\n            useEffect(function() {\n                inst.hasValue = true;\n                inst.value = value;\n            }, [\n                value\n            ]);\n            useDebugValue(value);\n            return value;\n        }\n        _s(useSyncExternalStoreWithSelector, \"mZhzs7ShZXU5RBraOlzBOQ4BK68=\", false, function() {\n            return [\n                useSyncExternalStore\n            ];\n        });\n        exports.useSyncExternalStoreWithSelector = useSyncExternalStoreWithSelector;\n        /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== \"undefined\" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === \"function\") {\n            __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n        }\n    })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/use-sync-external-store/shim/index.js":
/*!************************************************************!*\
  !*** ./node_modules/use-sync-external-store/shim/index.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\nif (false) {} else {\n    module.exports = __webpack_require__(/*! ../cjs/use-sync-external-store-shim.development.js */ \"(app-pages-browser)/./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy91c2Utc3luYy1leHRlcm5hbC1zdG9yZS9zaGltL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsSUFBSUEsS0FBeUIsRUFBYyxFQUUxQyxNQUFNO0lBQ0xDLDRNQUF5QjtBQUMzQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUvc2hpbS9pbmRleC5qcz8yZTg3Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi9janMvdXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUtc2hpbS5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi9janMvdXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUtc2hpbS5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbInByb2Nlc3MiLCJtb2R1bGUiLCJleHBvcnRzIiwicmVxdWlyZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/use-sync-external-store/shim/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/use-sync-external-store/shim/with-selector.js":
/*!********************************************************************!*\
  !*** ./node_modules/use-sync-external-store/shim/with-selector.js ***!
  \********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\nif (false) {} else {\n    module.exports = __webpack_require__(/*! ../cjs/use-sync-external-store-shim/with-selector.development.js */ \"(app-pages-browser)/./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy91c2Utc3luYy1leHRlcm5hbC1zdG9yZS9zaGltL3dpdGgtc2VsZWN0b3IuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQSxJQUFJQSxLQUF5QixFQUFjLEVBRTFDLE1BQU07SUFDTEMsd09BQXlCO0FBQzNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy91c2Utc3luYy1leHRlcm5hbC1zdG9yZS9zaGltL3dpdGgtc2VsZWN0b3IuanM/ZTMzYiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vY2pzL3VzZS1zeW5jLWV4dGVybmFsLXN0b3JlLXNoaW0vd2l0aC1zZWxlY3Rvci5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi9janMvdXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUtc2hpbS93aXRoLXNlbGVjdG9yLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOlsicHJvY2VzcyIsIm1vZHVsZSIsImV4cG9ydHMiLCJyZXF1aXJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/use-sync-external-store/shim/with-selector.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/app/_model.tsx":
/*!****************************!*\
  !*** ./src/app/_model.tsx ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ ModelProvider; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _models_store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/models/store */ \"(app-pages-browser)/./src/models/store.ts\");\n/* harmony import */ var foca__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! foca */ \"(app-pages-browser)/./node_modules/foca/dist/esm/index.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\n\nfunction ModelProvider(param) {\n    let { children } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(foca__WEBPACK_IMPORTED_MODULE_2__.FocaProvider, {\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/namnguyen/Documents/SourceCode/blockodyssey_test/src/app/_model.tsx\",\n        lineNumber: 6,\n        columnNumber: 10\n    }, this);\n}\n_c = ModelProvider;\nvar _c;\n$RefreshReg$(_c, \"ModelProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvX21vZGVsLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUN3QjtBQUNZO0FBRXJCLFNBQVNDLGNBQWMsS0FBMkM7UUFBM0MsRUFBRUMsUUFBUSxFQUFpQyxHQUEzQztJQUNwQyxxQkFBTyw4REFBQ0YsOENBQVlBO2tCQUFFRTs7Ozs7O0FBQ3hCO0tBRndCRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvYXBwL19tb2RlbC50c3g/ZTIzYSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCc7XG5pbXBvcnQgJ0AvbW9kZWxzL3N0b3JlJztcbmltcG9ydCB7IEZvY2FQcm92aWRlciB9IGZyb20gJ2ZvY2EnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNb2RlbFByb3ZpZGVyKHsgY2hpbGRyZW4gfTogeyBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlIH0pIHtcbiAgcmV0dXJuIDxGb2NhUHJvdmlkZXI+e2NoaWxkcmVufTwvRm9jYVByb3ZpZGVyPjtcbn1cbiJdLCJuYW1lcyI6WyJGb2NhUHJvdmlkZXIiLCJNb2RlbFByb3ZpZGVyIiwiY2hpbGRyZW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/_model.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/models/store.ts":
/*!*****************************!*\
  !*** ./src/models/store.ts ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var foca__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! foca */ \"(app-pages-browser)/./node_modules/foca/dist/esm/index.js\");\n// import { storeModel } from '@/app/store/model';\n\nconst middleware = [];\nfoca__WEBPACK_IMPORTED_MODULE_0__.store.init({\n    compose: \"redux-devtools\",\n    persist: [\n        {\n            key: \"todo-list-development\",\n            version: 1,\n            engine: foca__WEBPACK_IMPORTED_MODULE_0__.engines.localStorage,\n            models: []\n        }\n    ]\n});\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9tb2RlbHMvc3RvcmUudHMiLCJtYXBwaW5ncyI6Ijs7QUFBQSxrREFBa0Q7QUFDQTtBQUVsRCxNQUFNRSxhQUEyQixFQUFFO0FBRW5DRix1Q0FBS0EsQ0FBQ0csSUFBSSxDQUFDO0lBQ1RDLFNBQVM7SUFDVEMsU0FBUztRQUNQO1lBQ0VDLEtBVE87WUFVUEMsU0FBUztZQUNUQyxRQUFRUCx5Q0FBT0EsQ0FBQ1EsWUFBWTtZQUM1QkMsUUFBUSxFQUFFO1FBQ1o7S0FDRDtBQUNIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9tb2RlbHMvc3RvcmUudHM/OTFiYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQgeyBzdG9yZU1vZGVsIH0gZnJvbSAnQC9hcHAvc3RvcmUvbW9kZWwnO1xuaW1wb3J0IHsgTWlkZGxld2FyZSwgc3RvcmUsIGVuZ2luZXMgfSBmcm9tICdmb2NhJztcblxuY29uc3QgbWlkZGxld2FyZTogTWlkZGxld2FyZVtdID0gW107XG5cbnN0b3JlLmluaXQoe1xuICBjb21wb3NlOiAncmVkdXgtZGV2dG9vbHMnLFxuICBwZXJzaXN0OiBbXG4gICAge1xuICAgICAga2V5OiBgdG9kby1saXN0LSR7cHJvY2Vzcy5lbnYuTk9ERV9FTlZ9YCxcbiAgICAgIHZlcnNpb246IDEsXG4gICAgICBlbmdpbmU6IGVuZ2luZXMubG9jYWxTdG9yYWdlLFxuICAgICAgbW9kZWxzOiBbXSxcbiAgICB9LFxuICBdLFxufSk7XG4iXSwibmFtZXMiOlsic3RvcmUiLCJlbmdpbmVzIiwibWlkZGxld2FyZSIsImluaXQiLCJjb21wb3NlIiwicGVyc2lzdCIsImtleSIsInZlcnNpb24iLCJlbmdpbmUiLCJsb2NhbFN0b3JhZ2UiLCJtb2RlbHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/models/store.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/foca/dist/esm/index.js":
/*!*********************************************!*\
  !*** ./node_modules/foca/dist/esm/index.js ***!
  \*********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FocaProvider: function() { return /* binding */ FocaProvider; },\n/* harmony export */   cloneModel: function() { return /* binding */ cloneModel; },\n/* harmony export */   compose: function() { return /* reexport safe */ redux__WEBPACK_IMPORTED_MODULE_2__.compose; },\n/* harmony export */   connect: function() { return /* binding */ connect; },\n/* harmony export */   defineModel: function() { return /* binding */ defineModel; },\n/* harmony export */   engines: function() { return /* binding */ engines; },\n/* harmony export */   getLoading: function() { return /* binding */ getLoading; },\n/* harmony export */   memoryStorage: function() { return /* binding */ memoryStorage; },\n/* harmony export */   store: function() { return /* binding */ modelStore; },\n/* harmony export */   useComputed: function() { return /* binding */ useComputed; },\n/* harmony export */   useIsolate: function() { return /* binding */ useIsolate; },\n/* harmony export */   useLoading: function() { return /* binding */ useLoading; },\n/* harmony export */   useModel: function() { return /* binding */ useModel; }\n/* harmony export */ });\n/* harmony import */ var redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! redux */ \"(app-pages-browser)/./node_modules/redux/es/redux.js\");\n/* harmony import */ var topic__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! topic */ \"(app-pages-browser)/./node_modules/topic/dist/esm/index.js\");\n/* harmony import */ var immer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! immer */ \"(app-pages-browser)/./node_modules/immer/dist/immer.esm.mjs\");\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-redux */ \"(app-pages-browser)/./node_modules/react-redux/es/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n// src/utils/isType.ts\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$(), _s3 = $RefreshSig$(), _s4 = $RefreshSig$(), _s5 = $RefreshSig$(), _s6 = $RefreshSig$();\nfunction _assert_this_initialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n    return self;\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n        }\n    });\n    if (superClass) _set_prototype_of(subClass, superClass);\n}\nfunction _instanceof(left, right) {\n    if (right != null && typeof Symbol !== \"undefined\" && right[Symbol.hasInstance]) {\n        return !!right[Symbol.hasInstance](left);\n    } else {\n        return left instanceof right;\n    }\n}\nfunction _set_prototype_of(o, p) {\n    _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    };\n    return _set_prototype_of(o, p);\n}\nfunction _type_of(obj) {\n    \"@swc/helpers - typeof\";\n    return obj && typeof Symbol !== \"undefined\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n}\nvar OBJECT = \"object\";\nvar FUNCTION = \"function\";\nvar isFunction = function(value) {\n    return !!value && (typeof value === \"undefined\" ? \"undefined\" : _type_of(value)) === FUNCTION;\n};\nvar isObject = function(value) {\n    return !!value && (typeof value === \"undefined\" ? \"undefined\" : _type_of(value)) === OBJECT;\n};\nvar isPlainObject = function(value) {\n    return !!value && Object.prototype.toString.call(value) === \"[object Object]\";\n};\nvar isString = function(value) {\n    return typeof value === \"string\";\n};\n// src/utils/serialize.ts\nvar JSON_UNDEFINED = \"__JSON_UNDEFINED__\";\nvar replacer = function(_key, value) {\n    return value === void 0 ? JSON_UNDEFINED : value;\n};\nvar reviver = function(_key, value) {\n    if (isObject(value)) {\n        var keys = Object.keys(value);\n        for(var i = keys.length; i-- > 0;){\n            var key = keys[i];\n            if (value[key] === JSON_UNDEFINED) {\n                value[key] = void 0;\n            }\n        }\n    }\n    return value;\n};\nvar stringifyState = function(value) {\n    return JSON.stringify(value, replacer);\n};\nvar parseState = function(value) {\n    return JSON.parse(value, value.indexOf(JSON_UNDEFINED) >= 0 ? reviver : void 0);\n};\n// src/utils/deepEqual.ts\nvar deepEqual = function(a, b) {\n    if (a === b) return true;\n    if (a && b && (typeof a === \"undefined\" ? \"undefined\" : _type_of(a)) == OBJECT && (typeof b === \"undefined\" ? \"undefined\" : _type_of(b)) == OBJECT) {\n        if (a.constructor !== b.constructor) return false;\n        var i;\n        var len;\n        var key;\n        if (Array.isArray(a)) {\n            len = a.length;\n            if (len != b.length) return false;\n            for(i = len; i-- > 0;){\n                if (!deepEqual(a[i], b[i])) return false;\n            }\n            return true;\n        }\n        var keys = Object.keys(a);\n        len = keys.length;\n        if (len !== Object.keys(b).length) return false;\n        for(i = len; i-- > 0;){\n            if (!hasOwn.call(b, keys[i])) return false;\n        }\n        for(i = len; i-- > 0;){\n            key = keys[i];\n            if (!deepEqual(a[key], b[key])) return false;\n        }\n        return true;\n    }\n    return a !== a && b !== b;\n};\nvar hasOwn = Object.prototype.hasOwnProperty;\n// src/store/modelStore.ts\n\n\n// src/actions/refresh.ts\nvar TYPE_REFRESH_STORE = \"@@store/refresh\";\nvar actionRefresh = function(force) {\n    return {\n        type: TYPE_REFRESH_STORE,\n        payload: {\n            force: force\n        }\n    };\n};\nvar isRefreshAction = function(action) {\n    return action.type === TYPE_REFRESH_STORE;\n};\n// src/actions/model.ts\nvar isPreModelAction = function(action) {\n    var test = action;\n    return test.preModel && !!test.model && isFunction(test.consumer);\n};\nvar isPostModelAction = function(action) {\n    var test = action;\n    return test.postModel && !!test.next;\n};\n// src/utils/immer.ts\n\n(0,immer__WEBPACK_IMPORTED_MODULE_1__.enableES5)();\nvar immer = new immer__WEBPACK_IMPORTED_MODULE_1__.Immer({\n    autoFreeze: false\n});\n// src/middleware/modelInterceptor.ts\nvar modelInterceptor = function(api) {\n    return function(dispatch2) {\n        return function(action) {\n            if (!isPreModelAction(action)) {\n                return dispatch2(action);\n            }\n            var prev = api.getState()[action.model];\n            var next = immer.produce(prev, function(draft) {\n                return action.consumer(draft, action);\n            });\n            action.actionInActionGuard && action.actionInActionGuard();\n            if (deepEqual(prev, next)) return action;\n            return dispatch2({\n                type: action.type,\n                model: action.model,\n                postModel: true,\n                next: next\n            });\n        };\n    };\n};\n// src/actions/persist.ts\nvar TYPE_PERSIST_HYDRATE = \"@@persist/hydrate\";\nvar actionHydrate = function(states) {\n    return {\n        type: TYPE_PERSIST_HYDRATE,\n        payload: states\n    };\n};\nvar isHydrateAction = function(action) {\n    return action.type === TYPE_PERSIST_HYDRATE;\n};\n// src/utils/to-promise.ts\nvar toPromise = function(fn) {\n    return Promise.resolve().then(fn);\n};\n// src/persist/PersistItem.ts\nvar defaultDumpOrLoadFn = function(value) {\n    return value;\n};\nvar PersistItem = /*#__PURE__*/ function() {\n    \"use strict\";\n    function PersistItem(options) {\n        this.options = options;\n        this.records = {};\n        var models = options.models, _options_keyPrefix = options.keyPrefix, keyPrefix = _options_keyPrefix === void 0 ? \"@@foca.persist:\" : _options_keyPrefix, key = options.key, _options_merge = options.merge, merge = _options_merge === void 0 ? \"merge\" : _options_merge;\n        this.key = keyPrefix + key;\n        for(var i = models.length; i-- > 0;){\n            var model = models[i];\n            var _ref = model._$opts.persist || {}, _ref_load = _ref.load, load = _ref_load === void 0 ? defaultDumpOrLoadFn : _ref_load, _ref_dump = _ref.dump, dump = _ref_dump === void 0 ? defaultDumpOrLoadFn : _ref_dump, tmp = _ref.version, customVersion = tmp === void 0 ? 0 : tmp, tmp1 = _ref.merge, customMerge = tmp1 === void 0 ? merge : tmp1;\n            this.records[model.name] = {\n                model: model,\n                opts: {\n                    version: customVersion,\n                    merge: customMerge,\n                    load: load,\n                    dump: dump,\n                    ctx: model._$persistCtx\n                }\n            };\n        }\n    }\n    var _proto = PersistItem.prototype;\n    _proto.init = function init() {\n        var _this = this;\n        return toPromise(function() {\n            return _this.options.engine.getItem(_this.key);\n        }).then(function(data) {\n            if (!data) {\n                _this.loadMissingState();\n                return _this.dump();\n            }\n            try {\n                var schema = JSON.parse(data);\n                if (!_this.validateSchema(schema)) {\n                    _this.loadMissingState();\n                    return _this.dump();\n                }\n                var schemaKeys = Object.keys(schema.d);\n                for(var i = schemaKeys.length; i-- > 0;){\n                    var key = schemaKeys[i];\n                    var record = _this.records[key];\n                    if (record) {\n                        var opts = record.opts;\n                        var itemSchema = schema.d[key];\n                        if (_this.validateItemSchema(itemSchema, opts)) {\n                            var dumpData = parseState(itemSchema.d);\n                            record.prev = _this.merge(opts.load.call(opts.ctx, dumpData), opts.ctx.initialState, opts.merge);\n                            record.schema = itemSchema;\n                        }\n                    }\n                }\n                _this.loadMissingState();\n                return _this.dump();\n            } catch (e) {\n                _this.dump();\n                throw e;\n            }\n        });\n    };\n    _proto.loadMissingState = function loadMissingState() {\n        var _this = this;\n        this.loop(function(record) {\n            var prev = record.prev, opts = record.opts, schema = record.schema;\n            if (!schema || !prev) {\n                var dumpData = opts.dump.call(null, opts.ctx.initialState);\n                record.prev = _this.merge(opts.load.call(opts.ctx, dumpData), opts.ctx.initialState, opts.merge);\n                record.schema = {\n                    v: opts.version,\n                    d: stringifyState(dumpData)\n                };\n            }\n        });\n    };\n    _proto.merge = function merge(persistState, initialState, mode) {\n        var isStateArray = Array.isArray(persistState);\n        var isInitialStateArray = Array.isArray(initialState);\n        if (isStateArray && isInitialStateArray) return persistState;\n        if (isStateArray || isInitialStateArray) return initialState;\n        if (mode === \"replace\") return persistState;\n        var state = Object.assign({}, initialState, persistState);\n        if (mode === \"deep-merge\") {\n            var keys = Object.keys(persistState);\n            for(var i = 0; i < keys.length; ++i){\n                var key = keys[i];\n                if (Object.prototype.hasOwnProperty.call(initialState, key) && isPlainObject(state[key]) && isPlainObject(initialState[key])) {\n                    state[key] = Object.assign({}, initialState[key], state[key]);\n                }\n            }\n        }\n        return state;\n    };\n    _proto.collect = function collect() {\n        var stateMaps = {};\n        this.loop(function(param, key) {\n            var state = param.prev;\n            state && (stateMaps[key] = state);\n        });\n        return stateMaps;\n    };\n    _proto.update = function update(nextState) {\n        var changed = false;\n        this.loop(function(record) {\n            var model = record.model, prev = record.prev, opts = record.opts, schema = record.schema;\n            var nextStateForKey = nextState[model.name];\n            if (nextStateForKey !== prev) {\n                record.prev = nextStateForKey;\n                var nextSchema = {\n                    v: opts.version,\n                    d: stringifyState(opts.dump.call(null, nextStateForKey))\n                };\n                if (!schema || nextSchema.d !== schema.d) {\n                    record.schema = nextSchema;\n                    changed || (changed = true);\n                }\n            }\n        });\n        changed && this.dump();\n    };\n    _proto.loop = function loop(callback) {\n        var records = this.records;\n        var recordKeys = Object.keys(records);\n        for(var i = recordKeys.length; i-- > 0;){\n            var key = recordKeys[i];\n            callback(records[key], key);\n        }\n    };\n    _proto.dump = function dump() {\n        this.options.engine.setItem(this.key, JSON.stringify(this.toJSON()));\n    };\n    _proto.validateSchema = function validateSchema(schema) {\n        return isObject(schema) && isObject(schema.d) && schema.v === this.options.version;\n    };\n    _proto.validateItemSchema = function validateItemSchema(schema, options) {\n        return schema && schema.v === options.version && isString(schema.d);\n    };\n    _proto.toJSON = function toJSON() {\n        var states = {};\n        this.loop(function(param, key) {\n            var schema = param.schema;\n            schema && (states[key] = schema);\n        });\n        return {\n            v: this.options.version,\n            d: states\n        };\n    };\n    return PersistItem;\n}();\n// src/persist/PersistManager.ts\nvar PersistManager = /*#__PURE__*/ function() {\n    \"use strict\";\n    function PersistManager(options) {\n        this.initialized = false;\n        this.list = options.map(function(option) {\n            return new PersistItem(option);\n        });\n    }\n    var _proto = PersistManager.prototype;\n    _proto.init = function init(store, hydrate) {\n        var _this = this;\n        this.unsubscribeStore = store.subscribe(function() {\n            _this.initialized && _this.update(store);\n        });\n        return Promise.all(this.list.map(function(item) {\n            return item.init();\n        })).then(function() {\n            hydrate && store.dispatch(actionHydrate(_this.collect()));\n            _this.initialized = true;\n        });\n    };\n    _proto.destroy = function destroy() {\n        this.unsubscribeStore();\n        this.initialized = false;\n    };\n    _proto.collect = function collect() {\n        return this.list.reduce(function(stateMaps, item) {\n            return Object.assign(stateMaps, item.collect());\n        }, {});\n    };\n    _proto.combineReducer = function combineReducer(original2) {\n        return function(state, action) {\n            if (state === void 0) state = {};\n            if (isHydrateAction(action)) {\n                return Object.assign({}, state, action.payload);\n            }\n            return original2(state, action);\n        };\n    };\n    _proto.update = function update(store) {\n        var _this = this;\n        this.timer || (this.timer = setTimeout(function() {\n            var nextState = store.getState();\n            _this.timer = void 0;\n            for(var i = _this.list.length; i-- > 0;){\n                _this.list[i].update(nextState);\n            }\n        }, 50));\n    };\n    return PersistManager;\n}();\n// src/store/proxyStore.ts\n\nvar proxyStore = (0,redux__WEBPACK_IMPORTED_MODULE_2__.legacy_createStore)(function() {\n    return {};\n});\nvar dispatch = function() {\n    proxyStore.dispatch({\n        type: \"-\"\n    });\n};\nvar combine = function(otherStore) {\n    otherStore.subscribe(dispatch);\n};\n// src/utils/symbolObservable.ts\nvar $$observable = (typeof Symbol === \"undefined\" ? \"undefined\" : _type_of(Symbol)) === FUNCTION && Symbol.observable || \"@@observable\";\n// src/store/StoreBasic.ts\nvar _a;\nvar StoreBasic = /*#__PURE__*/ function() {\n    \"use strict\";\n    function StoreBasic() {\n        var _this = this;\n        this.origin = null;\n        this.dispatch = function(action) {\n            return _this.store.dispatch(action);\n        };\n        this.getState = function() {\n            return _this.store.getState();\n        };\n        this.subscribe = function(listener) {\n            return _this.store.subscribe(listener);\n        };\n        this[_a] = function() {\n            return _this.store[$$observable]();\n        };\n    }\n    _create_class(StoreBasic, [\n        {\n            key: \"store\",\n            get: function get() {\n                if (!this.origin) {\n                    throw new Error(\"[store] 当前无实例，忘记执行'store.init()'了吗？\");\n                }\n                return this.origin;\n            }\n        }\n    ]);\n    return StoreBasic;\n}();\n_a = $$observable;\n// src/middleware/actionInActionInterceptor.ts\nvar actionInActionInterceptor = function() {\n    var dispatching = false;\n    var prevAction = null;\n    return function(dispatch2) {\n        return function(action) {\n            if (!isPreModelAction(action)) {\n                return dispatch2(action);\n            }\n            if (dispatching) {\n                throw new Error(\"[dispatch] 派发任务冲突，请检查是否在reducers函数中直接或者间接执行了其他reducers或者methods函数。\\nreducers的唯一职责是更新当前的state，有额外的业务逻辑时请把methods作为执行入口并按需调用reducers。\\n\\n当前冲突的reducer：\\n\\n\" + JSON.stringify(action, null, 4) + \"\\n\\n上次执行未完成的reducer：\\n\\n\" + JSON.stringify(prevAction, null, 4) + \"\\n\\n\");\n            }\n            try {\n                dispatching = true;\n                prevAction = action;\n                action.actionInActionGuard = function() {\n                    dispatching = false;\n                    prevAction = null;\n                };\n                return dispatch2(action);\n            } catch (e) {\n                prevAction = null;\n                dispatching = false;\n                throw e;\n            }\n        };\n    };\n};\n// src/middleware/freezeStateMiddleware.ts\n\nvar freezeStateMiddleware = function(api) {\n    (0,immer__WEBPACK_IMPORTED_MODULE_1__.freeze)(api.getState(), true);\n    return function(dispatch2) {\n        return function(action) {\n            try {\n                return dispatch2(action);\n            } finally{\n                (0,immer__WEBPACK_IMPORTED_MODULE_1__.freeze)(api.getState(), true);\n            }\n        };\n    };\n};\n// src/store/modelStore.ts\nvar ModelStore = /*#__PURE__*/ function(StoreBasic) {\n    \"use strict\";\n    _inherits(ModelStore, StoreBasic);\n    function ModelStore() {\n        var _this;\n        _this = StoreBasic.call(this) || this;\n        _this.topic = new topic__WEBPACK_IMPORTED_MODULE_0__.Topic();\n        _this._isReady = false;\n        _this.consumers = {};\n        _this.reducerKeys = [];\n        _this.persister = null;\n        _this.topic.keep(\"ready\", function() {\n            return _this._isReady;\n        });\n        return _this;\n    }\n    var _proto = ModelStore.prototype;\n    _proto.init = function init(options) {\n        if (options === void 0) options = {};\n        var _this = this;\n        var prevStore = this.origin;\n        var firstInitialize = !prevStore;\n        if (!firstInitialize) {\n            if (false) {}\n        }\n        this._isReady = false;\n        this.reducer = this.combineReducers();\n        var persistOptions = options.persist;\n        var persister = this.persister;\n        persister && persister.destroy();\n        if (persistOptions && persistOptions.length) {\n            persister = this.persister = new PersistManager(persistOptions);\n            this.reducer = persister.combineReducer(this.reducer);\n        } else {\n            persister = this.persister = null;\n        }\n        var store;\n        if (firstInitialize) {\n            var middleware = (options.middleware || []).concat(modelInterceptor);\n            if (true) {\n                middleware.unshift(actionInActionInterceptor);\n                middleware.push(freezeStateMiddleware);\n            }\n            var enhancer = redux__WEBPACK_IMPORTED_MODULE_2__.applyMiddleware.apply(null, middleware);\n            store = this.origin = (0,redux__WEBPACK_IMPORTED_MODULE_2__.legacy_createStore)(this.reducer, options.preloadedState, this.getCompose(options.compose)(enhancer));\n            this.topic.publish(\"init\");\n            combine(store);\n        } else {\n            store = prevStore;\n            store.replaceReducer(this.reducer);\n        }\n        if (persister) {\n            persister.init(store, firstInitialize).then(function() {\n                _this.ready();\n            });\n        } else {\n            this.ready();\n        }\n        return this;\n    };\n    _proto.refresh = function refresh(force) {\n        if (force === void 0) force = false;\n        var action = this.dispatch(actionRefresh(force));\n        this.topic.publish(\"refresh\");\n        return action;\n    };\n    _proto.unmount = function unmount() {\n        this.origin = null;\n        this._isReady = false;\n        this.topic.publish(\"unmount\");\n    };\n    _proto.onInitialized = function onInitialized(maybeSync) {\n        var _this = this;\n        return new Promise(function(resolve) {\n            if (_this._isReady) {\n                maybeSync && maybeSync();\n                resolve();\n            } else {\n                _this.topic.subscribeOnce(\"ready\", function() {\n                    maybeSync && maybeSync();\n                    resolve();\n                });\n            }\n        });\n    };\n    _proto.ready = function ready() {\n        this._isReady = true;\n        this.topic.publish(\"ready\");\n    };\n    _proto.getCompose = function getCompose(customCompose) {\n        if (customCompose === \"redux-devtools\") {\n            if (true) {\n                return /** @ts-expect-error */ (( false ? 0 : _type_of(window)) === OBJECT ? window : (typeof global === \"undefined\" ? \"undefined\" : _type_of(global)) === OBJECT ? global : {})[\"__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\"] || redux__WEBPACK_IMPORTED_MODULE_2__.compose;\n            }\n            return redux__WEBPACK_IMPORTED_MODULE_2__.compose;\n        }\n        return customCompose || redux__WEBPACK_IMPORTED_MODULE_2__.compose;\n    };\n    _proto.combineReducers = function combineReducers() {\n        var _this = this;\n        return function(state, action) {\n            if (state === void 0) {\n                state = {};\n            }\n            var reducerKeys = _this.reducerKeys;\n            var consumers = _this.consumers;\n            var keyLength = reducerKeys.length;\n            var nextState = {};\n            var hasChanged = false;\n            var i = keyLength;\n            while(i-- > 0){\n                var key = reducerKeys[i];\n                var prevForKey = state[key];\n                var nextForKey = nextState[key] = consumers[key](prevForKey, action);\n                hasChanged || (hasChanged = nextForKey !== prevForKey);\n            }\n            return hasChanged || keyLength !== Object.keys(state).length ? nextState : state;\n        };\n    };\n    ModelStore.appendReducer = function appendReducer(key, consumer) {\n        var store = this.origin;\n        var consumers = this.consumers;\n        var exists = store && consumers.hasOwnProperty(key);\n        consumers[key] = consumer;\n        this.reducerKeys = Object.keys(consumers);\n        store && !exists && store.replaceReducer(this.reducer);\n    };\n    ModelStore.removeReducer = function removeReducer(key) {\n        var store = this.origin;\n        var consumers = this.consumers;\n        if (consumers.hasOwnProperty(key)) {\n            delete consumers[key];\n            this.reducerKeys = Object.keys(consumers);\n            store && store.replaceReducer(this.reducer);\n        }\n    };\n    _create_class(ModelStore, [\n        {\n            key: \"isReady\",\n            get: function get() {\n                return this._isReady;\n            }\n        }\n    ]);\n    return ModelStore;\n}(StoreBasic);\nvar modelStore = new ModelStore();\n// src/utils/toArgs.ts\nvar slice = Array.prototype.slice;\nvar toArgs = function(args, start) {\n    return slice.call(args, start);\n};\n// src/model/enhanceAction.ts\nvar enhanceAction = function(ctx, actionName, consumer) {\n    var modelName = ctx.name;\n    var actionType = modelName + \".\" + actionName;\n    var enhancedConsumer = function(state, action) {\n        return consumer.apply(ctx, [\n            state\n        ].concat(action.payload));\n    };\n    var fn = function fn() {\n        return modelStore.dispatch({\n            type: actionType,\n            model: modelName,\n            preModel: true,\n            payload: toArgs(arguments),\n            consumer: enhancedConsumer\n        });\n    };\n    return fn;\n};\n// src/actions/loading.ts\nvar TYPE_SET_LOADING = \"@@store/loading\";\nvar LOADING_CATEGORY = \"##\" + Math.random();\nvar DESTROY_LOADING = TYPE_SET_LOADING + \"/destroy\";\nvar isLoadingAction = function(action) {\n    var tester = action;\n    return tester.type === TYPE_SET_LOADING && !!tester.model && !!tester.method && !!tester.payload;\n};\nvar isDestroyLoadingAction = function(action) {\n    var tester = action;\n    return tester.type === DESTROY_LOADING && !!tester.model;\n};\n// src/utils/isPromise.ts\nvar hasPromise = (typeof Promise === \"undefined\" ? \"undefined\" : _type_of(Promise)) === FUNCTION;\nvar isPromise = function(value) {\n    return hasPromise && _instanceof(value, Promise) || (isObject(value) || isFunction(value)) && isFunction(value.then);\n};\n// src/store/loadingStore.ts\n\n// src/middleware/loadingInterceptor.ts\nvar loadingInterceptor = function(loadingStore2) {\n    return function() {\n        return function(dispatch2) {\n            return function(action) {\n                if (!isLoadingAction(action)) {\n                    return dispatch2(action);\n                }\n                var model = action.model, method = action.method, _action_payload = action.payload, category = _action_payload.category, loading = _action_payload.loading;\n                if (loadingStore2.isModelInitializing(model)) {\n                    loadingStore2.activate(model, method);\n                } else if (!loadingStore2.isActive(model, method)) {\n                    return;\n                }\n                var record = loadingStore2.getItem(model, method);\n                if (!record || record.loadings.data[category] !== loading) {\n                    return dispatch2(action);\n                }\n                return action;\n            };\n        };\n    };\n};\n// src/middleware/destroyLoadingInterceptor.ts\nvar destroyLoadingInterceptor = function(api) {\n    return function(dispatch2) {\n        return function(action) {\n            if (!isDestroyLoadingAction(action) || api.getState().hasOwnProperty(action.model)) {\n                return dispatch2(action);\n            }\n            return action;\n        };\n    };\n};\n// src/store/loadingStore.ts\n\nvar findLoading = function findLoading(category) {\n    return !!this.data[category];\n};\nvar createDefaultRecord = function() {\n    return {\n        loadings: {\n            find: findLoading,\n            data: {}\n        }\n    };\n};\nvar LoadingStore = /*#__PURE__*/ function(StoreBasic) {\n    \"use strict\";\n    _inherits(LoadingStore, StoreBasic);\n    function LoadingStore() {\n        var _this;\n        _this = StoreBasic.call(this) || this;\n        _this.initializingModels = [];\n        _this.status = {};\n        _this.defaultRecord = (0,immer__WEBPACK_IMPORTED_MODULE_1__.freeze)(createDefaultRecord(), true);\n        var topic = modelStore.topic;\n        topic.subscribe(\"init\", _this.init.bind(_assert_this_initialized(_this)));\n        topic.subscribe(\"refresh\", _this.refresh.bind(_assert_this_initialized(_this)));\n        topic.subscribe(\"unmount\", _this.unmount.bind(_assert_this_initialized(_this)));\n        topic.subscribe(\"modelPreInit\", function(modelName) {\n            _this.initializingModels.push(modelName);\n        });\n        topic.subscribe(\"modelPostInit\", function(modelName) {\n            _this.initializingModels = _this.initializingModels.filter(function(item) {\n                return item !== modelName;\n            });\n        });\n        return _this;\n    }\n    var _proto = LoadingStore.prototype;\n    _proto.init = function init() {\n        var middleware = [\n            loadingInterceptor(this),\n            destroyLoadingInterceptor\n        ];\n        if (true) {\n            middleware.push(freezeStateMiddleware);\n        }\n        this.origin = (0,redux__WEBPACK_IMPORTED_MODULE_2__.legacy_createStore)(this.reducer.bind(this), redux__WEBPACK_IMPORTED_MODULE_2__.applyMiddleware.apply(null, middleware));\n        combine(this.store);\n    };\n    _proto.unmount = function unmount() {\n        this.origin = null;\n    };\n    _proto.reducer = function reducer(state, action) {\n        if (state === void 0) {\n            state = {};\n        }\n        if (isLoadingAction(action)) {\n            var model = action.model, method = action.method, _action_payload = action.payload, category = _action_payload.category, loading = _action_payload.loading;\n            var next = immer.produce(state, function(draft) {\n                var _a2;\n                draft[model] || (draft[model] = {});\n                var loadings = ((_a2 = draft[model])[method] || (_a2[method] = createDefaultRecord())).loadings;\n                loadings.data[category] = loading;\n            });\n            return next;\n        }\n        if (isDestroyLoadingAction(action)) {\n            var next1 = Object.assign({}, state);\n            delete next1[action.model];\n            delete this.status[action.model];\n            return next1;\n        }\n        if (isRefreshAction(action)) return {};\n        return state;\n    };\n    _proto.get = function get(effect) {\n        var _effect__ = effect._, model = _effect__.model, method = _effect__.method;\n        var record;\n        if (this.isActive(model, method)) {\n            record = this.getItem(model, method);\n        } else {\n            this.activate(model, method);\n        }\n        return record || this.defaultRecord;\n    };\n    _proto.getItem = function getItem(model, method) {\n        var level1 = this.getState()[model];\n        return level1 && level1[method];\n    };\n    _proto.isModelInitializing = function isModelInitializing(model) {\n        return this.initializingModels.length > 0 && this.initializingModels.includes(model);\n    };\n    _proto.isActive = function isActive(model, method) {\n        var level1 = this.status[model];\n        return level1 !== void 0 && level1[method] === true;\n    };\n    _proto.activate = function activate(model, method) {\n        var _a2;\n        ((_a2 = this.status)[model] || (_a2[model] = {}))[method] = true;\n    };\n    _proto.inactivate = function inactivate(model, method) {\n        var _a2;\n        ((_a2 = this.status)[model] || (_a2[model] = {}))[method] = false;\n    };\n    _proto.refresh = function refresh() {\n        return this.dispatch(actionRefresh(true));\n    };\n    return LoadingStore;\n}(StoreBasic);\nvar loadingStore = new LoadingStore();\n// src/model/enhanceEffect.ts\nvar enhanceEffect = function(ctx, methodName, effect) {\n    var fn = function fn() {\n        return execute(ctx, methodName, effect, toArgs(arguments));\n    };\n    fn._ = {\n        model: ctx.name,\n        method: methodName,\n        hasRoom: \"\"\n    };\n    var room = function(category) {\n        return {\n            execute: function execute1() {\n                return execute(ctx, methodName, effect, toArgs(arguments), category);\n            }\n        };\n    };\n    room._ = Object.assign({}, fn._, {\n        hasRoom: true\n    });\n    fn.room = room;\n    return fn;\n};\nvar dispatchLoading = function(modelName, methodName, loading, category) {\n    loadingStore.dispatch({\n        type: TYPE_SET_LOADING,\n        model: modelName,\n        method: methodName,\n        payload: {\n            category: category === void 0 ? LOADING_CATEGORY : category,\n            loading: loading\n        }\n    });\n};\nvar execute = function(ctx, methodName, effect, args, category) {\n    var modelName = ctx.name;\n    var resultOrPromise = effect.apply(ctx, args);\n    if (!isPromise(resultOrPromise)) return resultOrPromise;\n    dispatchLoading(modelName, methodName, true, category);\n    return resultOrPromise.then(function(result) {\n        return dispatchLoading(modelName, methodName, false, category), result;\n    }, function(e) {\n        dispatchLoading(modelName, methodName, false, category);\n        throw e;\n    });\n};\n// src/redux/createReducer.ts\nvar createReducer = function(options) {\n    var allowRefresh = options.allowRefresh;\n    var reducerName = options.name;\n    var initialState = options.initialState;\n    return function reducer(state, action) {\n        if (state === void 0) return initialState;\n        if (isPostModelAction(action) && action.model === reducerName) {\n            return action.next;\n        }\n        if (isRefreshAction(action) && (allowRefresh || action.payload.force)) {\n            return initialState;\n        }\n        return state;\n    };\n};\n// src/utils/getter.ts\nfunction composeGetter() {\n    var args = toArgs(arguments);\n    return args.reduce(function(carry, getter) {\n        return getter(carry);\n    }, args.shift());\n}\nvar defineGetter = function(obj, key, get) {\n    Object.defineProperty(obj, key, {\n        get: get\n    });\n    return obj;\n};\n// src/utils/getMethodCategory.ts\nvar getMethodCategory = function(methodName) {\n    return methodName.indexOf(\"_\") === 0 ? \"internal\" : \"external\";\n};\n// src/model/guard.ts\nvar counter = {};\nvar guard = function(modelName) {\n    counter[modelName] || (counter[modelName] = 0);\n    if (true) {\n        setTimeout(function() {\n            --counter[modelName];\n        });\n    }\n    if (++counter[modelName] > 1) {\n        throw new Error(\"模型名称'\" + modelName + \"'被重复使用\");\n    }\n};\n// src/reactive/depsCollector.ts\nvar deps = [];\nvar level = -1;\nvar depsCollector = {\n    get active () {\n        return level >= 0;\n    },\n    produce: function produce(callback) {\n        var current = deps[++level] = [];\n        callback();\n        deps.length = level--;\n        var uniqueDeps = [];\n        var uniqueID = [];\n        for(var i = 0; i < current.length; ++i){\n            var dep = current[i];\n            var id = dep.id;\n            if (uniqueID.indexOf(id) === -1) {\n                uniqueID.push(id);\n                uniqueDeps.push(dep);\n                dep.end();\n            }\n        }\n        return uniqueDeps;\n    },\n    append: function append(dep) {\n        deps[level].push(dep);\n    },\n    prepend: function prepend(dep) {\n        deps[level].unshift(dep);\n    }\n};\n// src/reactive/ObjectDeps.ts\nvar ObjectDeps = /*#__PURE__*/ function() {\n    \"use strict\";\n    function _ObjectDeps(store, model, deps2) {\n        if (deps2 === void 0) deps2 = [];\n        this.store = store;\n        this.model = model;\n        this.deps = deps2;\n        this.active = true;\n        this.root = this.getState();\n    }\n    var _proto = _ObjectDeps.prototype;\n    _proto.isDirty = function isDirty() {\n        var rootState = this.getState();\n        if (this.root === rootState) return false;\n        var _this_getSnapshot = this.getSnapshot(rootState), pathChanged = _this_getSnapshot.pathChanged, nextSnapshot = _this_getSnapshot.snapshot;\n        if (pathChanged || this.snapshot !== nextSnapshot) return true;\n        this.root = rootState;\n        return false;\n    };\n    _proto.start = function start(startState) {\n        depsCollector.append(this);\n        return this.proxy(startState);\n    };\n    _proto.end = function end() {\n        this.active = false;\n    };\n    _proto.getState = function getState() {\n        return this.store.getState()[this.model];\n    };\n    _proto.getSnapshot = function getSnapshot(state) {\n        var deps2 = this.deps;\n        var snapshot = state;\n        for(var i = 0; i < deps2.length; ++i){\n            if (!isObject(snapshot)) {\n                return {\n                    pathChanged: true,\n                    snapshot: snapshot\n                };\n            }\n            snapshot = snapshot[deps2[i]];\n        }\n        return {\n            pathChanged: false,\n            snapshot: snapshot\n        };\n    };\n    _proto.proxy = function proxy(currentState) {\n        var _loop = function(i) {\n            var key = keys[i];\n            Object.defineProperty(nextState, key, {\n                enumerable: true,\n                get: function() {\n                    if (!_this.active) return currentState[key];\n                    if (visited) {\n                        return new _ObjectDeps(_this.store, _this.model, currentDeps.slice()).start(currentState)[key];\n                    }\n                    visited = true;\n                    _this.deps.push(key);\n                    return _this.proxy(_this.snapshot = currentState[key]);\n                }\n            });\n        };\n        var _this = this;\n        if (currentState === null || !isObject(currentState) || Array.isArray(currentState)) {\n            return currentState;\n        }\n        var nextState = {};\n        var keys = Object.keys(currentState);\n        var currentDeps = this.deps.slice();\n        var visited = false;\n        for(var i = keys.length; i-- > 0;)_loop(i);\n        if (true) {\n            Object.freeze(nextState);\n        }\n        return nextState;\n    };\n    _create_class(_ObjectDeps, [\n        {\n            key: \"id\",\n            get: function get() {\n                return this.model + \".\" + this.deps.join(\".\");\n            }\n        }\n    ]);\n    return _ObjectDeps;\n}();\n// src/model/defineModel.ts\n\n// src/reactive/createComputedDeps.ts\n\nvar createComputedDeps = function(body) {\n    var snapshot;\n    return {\n        id: \"c-\" + body.model + \"-\" + body.property,\n        end: function end() {\n            snapshot = body.snapshot;\n        },\n        isDirty: function isDirty() {\n            return !(0,react_redux__WEBPACK_IMPORTED_MODULE_3__.shallowEqual)(snapshot, body.value);\n        }\n    };\n};\n// src/reactive/ComputedValue.ts\nvar ComputedValue = /*#__PURE__*/ function() {\n    \"use strict\";\n    function ComputedValue(store, model, property, fn) {\n        this.store = store;\n        this.model = model;\n        this.property = property;\n        this.fn = fn;\n        this.deps = [];\n    }\n    var _proto = ComputedValue.prototype;\n    _proto.isDirty = function isDirty() {\n        if (!this.root) return true;\n        var rootState = this.store.getState();\n        if (this.root !== rootState) {\n            var deps2 = this.deps;\n            for(var i = deps2.length; i-- > 0;){\n                if (deps2[i].isDirty()) return true;\n            }\n        }\n        this.root = rootState;\n        return false;\n    };\n    _proto.updateSnapshot = function updateSnapshot() {\n        var _this = this;\n        this.deps = depsCollector.produce(function() {\n            _this.snapshot = _this.fn();\n            _this.root = _this.store.getState();\n        });\n    };\n    _create_class(ComputedValue, [\n        {\n            key: \"value\",\n            get: function get() {\n                if (this.active) {\n                    throw new Error(\"[model:\" + this.model + '] 计算属性\"' + this.property + '\"正在被循环引用');\n                }\n                this.active = true;\n                this.isDirty() && this.updateSnapshot();\n                this.active = false;\n                if (depsCollector.active) {\n                    depsCollector.prepend(createComputedDeps(this));\n                }\n                return this.snapshot;\n            }\n        }\n    ]);\n    return ComputedValue;\n}();\n// src/model/enhance-computed.ts\nvar enhanceComputed = function(ctx, modelName, computedName, fn) {\n    var anonymousFn = function anonymousFn() {\n        var args = toArgs(arguments);\n        var hitCache;\n        searchCache: for(var i = 0; i < caches.length; ++i){\n            var cache2 = caches[i];\n            if (hitCache) {\n                ++cache2.skipCount;\n                continue;\n            }\n            for(var j = 0; j < cache2.deps.length; ++j){\n                if (args[j] !== cache2.deps[j]) {\n                    ++cache2.skipCount;\n                    continue searchCache;\n                }\n            }\n            cache2.skipCount = 0;\n            hitCache = cache2;\n        }\n        if (hitCache) return hitCache.ref.value;\n        if (caches.length > 10) {\n            caches = caches.filter(function(cache2) {\n                return cache2.skipCount < 15;\n            });\n        }\n        hitCache = {\n            deps: args,\n            skipCount: 0,\n            ref: new ComputedValue(modelStore, modelName, computedName, function() {\n                return fn.apply(ctx, args);\n            })\n        };\n        caches.push(hitCache);\n        return hitCache.ref.value;\n    };\n    var caches = [];\n    return anonymousFn;\n};\n// src/model/defineModel.ts\nvar defineModel = function(uniqueName, options) {\n    guard(uniqueName);\n    var reducers = options.reducers, methods = options.methods, computed = options.computed, skipRefresh = options.skipRefresh, events = options.events;\n    var initialState =  true ? (0,immer__WEBPACK_IMPORTED_MODULE_1__.freeze)(options.initialState, true) : 0;\n    if (true) {\n        var items = [\n            {\n                name: \"reducers\",\n                value: reducers\n            },\n            {\n                name: \"methods\",\n                value: methods\n            },\n            {\n                name: \"computed\",\n                value: computed\n            }\n        ];\n        var validateUniqueMethod = function(index1, index2) {\n            var item1 = items[index1];\n            var item2 = items[index2];\n            if (item1.value && item2.value) {\n                Object.keys(item1.value).forEach(function(key) {\n                    if (item2.value.hasOwnProperty(key)) {\n                        throw new Error(\"[model:\" + uniqueName + \"] 属性'\" + key + \"'在\" + item1.name + \"和\" + item2.name + \"中重复使用\");\n                    }\n                });\n            }\n        };\n        validateUniqueMethod(0, 1);\n        validateUniqueMethod(0, 2);\n        validateUniqueMethod(1, 2);\n    }\n    if (true) {\n        if (!deepEqual(parseState(stringifyState(initialState)), initialState)) {\n            throw new Error(\"[model:\" + uniqueName + \"] initialState 包含了不可系列化的数据，允许的类型为：Object, Array, Number, String, Undefined 和 Null\");\n        }\n    }\n    var getState = function(obj) {\n        return defineGetter(obj, \"state\", function() {\n            var state = modelStore.getState()[uniqueName];\n            return depsCollector.active ? new ObjectDeps(modelStore, uniqueName).start(state) : state;\n        });\n    };\n    var getInitialState = function(obj) {\n        return defineGetter(obj, \"initialState\", function() {\n            return parseState(stringifyState(initialState));\n        });\n    };\n    var actionCtx = composeGetter({\n        name: uniqueName\n    }, getInitialState);\n    var createEffectCtx = function(methodName) {\n        var isArrayState = Array.isArray(initialState);\n        var obj = {\n            // @ts-expect-error\n            setState: enhanceAction(actionCtx, \"\" + methodName + \".setState\", function(state, fn_state) {\n                var nextState = isFunction(fn_state) ? fn_state(state) : fn_state;\n                if (nextState === void 0) return;\n                return isArrayState || (0,immer__WEBPACK_IMPORTED_MODULE_1__.isDraft)(nextState) ? nextState : Object.assign({}, (0,immer__WEBPACK_IMPORTED_MODULE_1__.original)(state), nextState);\n            })\n        };\n        return composeGetter(Object.assign(obj, {\n            name: uniqueName\n        }), getState, getInitialState);\n    };\n    var enhancedMethods = {\n        external: {},\n        internal: {}\n    };\n    if (reducers) {\n        var reducerKeys = Object.keys(reducers);\n        for(var i = reducerKeys.length; i-- > 0;){\n            var key = reducerKeys[i];\n            enhancedMethods[getMethodCategory(key)][key] = enhanceAction(actionCtx, key, reducers[key]);\n        }\n    }\n    if (computed) {\n        var computedCtx = composeGetter({\n            name: uniqueName\n        }, getState);\n        var computedKeys = Object.keys(computed);\n        for(var i1 = computedKeys.length; i1-- > 0;){\n            var key1 = computedKeys[i1];\n            computedCtx[key1] = enhancedMethods[getMethodCategory(key1)][key1] = enhanceComputed(computedCtx, uniqueName, key1, computed[key1]);\n        }\n    }\n    if (methods) {\n        var ctx;\n        var ctxs = [\n            ctx = createEffectCtx(\"\")\n        ];\n        var methodKeys = Object.keys(methods);\n        for(var i2 = methodKeys.length; i2-- > 0;){\n            var key2 = methodKeys[i2];\n            if (true) {\n                ctxs.push(ctx = createEffectCtx(key2));\n            }\n            enhancedMethods[getMethodCategory(key2)][key2] = enhanceEffect(ctx, key2, methods[key2]);\n        }\n        for(var i3 = ctxs.length; i3-- > 0;){\n            Object.assign(ctxs[i3], enhancedMethods.external, enhancedMethods.internal);\n        }\n    }\n    if (events) {\n        var onInit = events.onInit, onChange = events.onChange, onDestroy = events.onDestroy;\n        var eventCtx = Object.assign(composeGetter({\n            name: uniqueName\n        }, getState), enhancedMethods.external, enhancedMethods.internal);\n        modelStore.onInitialized().then(function() {\n            var subscriptions = [];\n            if (onChange) {\n                var prevState = eventCtx.state;\n                subscriptions.push(modelStore.subscribe(function() {\n                    var nextState = eventCtx.state;\n                    if (modelStore.isReady && prevState !== nextState && nextState !== void 0) {\n                        onChange.call(eventCtx, prevState, nextState);\n                    }\n                    prevState = nextState;\n                }));\n            }\n            if (onDestroy) {\n                subscriptions.push(modelStore.subscribe(function() {\n                    if (eventCtx.state === void 0) {\n                        for(var i = 0; i < subscriptions.length; ++i){\n                            subscriptions[i]();\n                        }\n                        onDestroy.call(null, uniqueName);\n                    }\n                }));\n            }\n            if (onInit) {\n                modelStore.topic.publish(\"modelPreInit\", uniqueName);\n                var promiseOrVoid = onInit.call(eventCtx);\n                var postInit = function() {\n                    modelStore.topic.publish(\"modelPostInit\", uniqueName);\n                };\n                if (isPromise(promiseOrVoid)) {\n                    promiseOrVoid.then(postInit, postInit);\n                } else {\n                    postInit();\n                }\n            }\n        });\n    }\n    ModelStore.appendReducer.call(modelStore, uniqueName, createReducer({\n        name: uniqueName,\n        initialState: initialState,\n        allowRefresh: !skipRefresh\n    }));\n    var model = Object.assign(composeGetter({\n        name: uniqueName,\n        _$opts: options,\n        _$persistCtx: getInitialState({})\n    }, getState), enhancedMethods.external);\n    return model;\n};\n// src/model/cloneModel.ts\nvar editableKeys = [\n    \"initialState\",\n    \"events\",\n    \"persist\",\n    \"skipRefresh\"\n];\nvar cloneModel = function(uniqueName, model, options) {\n    var realModel = model;\n    var prevOpts = realModel._$opts;\n    var nextOpts = Object.assign({}, prevOpts);\n    if (options) {\n        Object.assign(nextOpts, isFunction(options) ? options(nextOpts) : options);\n        if (true) {\n            Object.keys(nextOpts).forEach(function(key) {\n                if (nextOpts[key] !== prevOpts[key] && editableKeys.indexOf(key) === -1) {\n                    throw new Error(\"[model:\" + uniqueName + \"] 复制模型时禁止重写属性'\" + key + \"'\");\n                }\n            });\n        }\n    }\n    return defineModel(uniqueName, nextOpts);\n};\n// src/model/useModel.ts\n\n// src/redux/useSelector.ts\n\n// src/redux/contexts.ts\n\nvar ModelContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_4__.createContext)(null);\nvar LoadingContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_4__.createContext)(null);\nvar ProxyContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_4__.createContext)(null);\n// src/redux/useSelector.ts\nvar useModelSelector = (0,react_redux__WEBPACK_IMPORTED_MODULE_3__.createSelectorHook)(ModelContext);\nvar useLoadingSelector = (0,react_redux__WEBPACK_IMPORTED_MODULE_3__.createSelectorHook)(LoadingContext);\n// src/model/useModel.ts\nfunction useModel() {\n    _s();\n    var args = toArgs(arguments);\n    var algorithm = args.length > 1 && isString(args[args.length - 1]) && args.pop();\n    var selector = args.length > 1 && isFunction(args[args.length - 1]) && args.pop();\n    var models = args;\n    var modelsLength = models.length;\n    var onlyOneModel = modelsLength === 1;\n    if (!algorithm) {\n        if (selector) {\n            algorithm = \"deepEqual\";\n        } else if (onlyOneModel) {\n            algorithm = \"strictEqual\";\n        } else {\n            algorithm = \"shallowEqual\";\n        }\n    }\n    var hasMemo = false, snapshot, prevState, currentStates, i, changed;\n    var reducerNames = [];\n    for(i = 0; i < modelsLength; ++i){\n        reducerNames.push(models[i].name);\n    }\n    return useModelSelector(function(state) {\n        if (hasMemo) {\n            changed = false;\n            for(i = modelsLength; i-- > 0;){\n                var reducerName = reducerNames[i];\n                if (state[reducerName] !== prevState[reducerName]) {\n                    changed = true;\n                    break;\n                }\n            }\n            if (!changed) {\n                prevState = state;\n                return snapshot;\n            }\n        }\n        prevState = state;\n        hasMemo = true;\n        if (onlyOneModel) {\n            var firstState = state[reducerNames[0]];\n            return snapshot = selector ? selector(firstState) : firstState;\n        }\n        if (selector) {\n            currentStates = [];\n            for(i = modelsLength; i-- > 0;){\n                currentStates[i] = state[reducerNames[i]];\n            }\n            return snapshot = selector.apply(null, currentStates);\n        }\n        snapshot = {};\n        for(i = modelsLength; i-- > 0;){\n            var reducerName1 = reducerNames[i];\n            snapshot[reducerName1] = state[reducerName1];\n        }\n        return snapshot;\n    }, compareFn[algorithm]);\n}\n_s(useModel, \"XeoUvFGYRm6jYK9t1s3drrXqJkE=\", false, function() {\n    return [\n        useModelSelector\n    ];\n});\nvar compareFn = {\n    deepEqual: deepEqual,\n    shallowEqual: react_redux__WEBPACK_IMPORTED_MODULE_3__.shallowEqual,\n    strictEqual: void 0\n};\n// src/api/getLoading.ts\nfunction getLoading(effect, category) {\n    var args = arguments;\n    if (effect._.hasRoom && !isFunction(category)) {\n        var loadings = loadingStore.get(effect).loadings;\n        return category === void 0 ? loadings : loadings.find(category);\n    }\n    for(var i = args.length; i-- > 0;){\n        if (loadingStore.get(args[i]).loadings.find(LOADING_CATEGORY)) {\n            return true;\n        }\n    }\n    return false;\n}\n// src/api/useLoading.ts\nfunction useLoading() {\n    _s1();\n    var args = arguments;\n    return useLoadingSelector(function() {\n        return getLoading.apply(null, args);\n    });\n}\n_s1(useLoading, \"IPWQIrp/CTzO5gr9hbBlKxWC5kM=\", false, function() {\n    return [\n        useLoadingSelector\n    ];\n});\n// src/api/use-computed.ts\nfunction useComputed(ref) {\n    _s2();\n    var args = toArgs(arguments, 1);\n    return useModelSelector(function() {\n        return ref.apply(null, args);\n    });\n}\n_s2(useComputed, \"XeoUvFGYRm6jYK9t1s3drrXqJkE=\", false, function() {\n    return [\n        useModelSelector\n    ];\n});\n// src/api/use-isolate.ts\n\nvar globalCounter = 0;\nvar hotReloadCounter = {};\nvar useIsolate = function(globalModel) {\n    _s3();\n    var _localModelRef_current;\n    var initialCount = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(function() {\n        return globalCounter++;\n    })[0];\n    var uniqueName =  false ? 0 : useDevName(globalModel, initialCount, new Error());\n    var localModelRef = (0,react__WEBPACK_IMPORTED_MODULE_4__.useRef)();\n    (0,react__WEBPACK_IMPORTED_MODULE_4__.useEffect)(function() {\n        localModelRef.current = isolateModel;\n    });\n    var isolateModel = ((_localModelRef_current = localModelRef.current) == null ? void 0 : _localModelRef_current.name) === uniqueName ? localModelRef.current : cloneModel(uniqueName, globalModel);\n    return isolateModel;\n};\n_s3(useIsolate, \"tkm1gYuYNeVN8UJDT1YAGpabLTA=\", false, function() {\n    return [\n        useProdName,\n        useDevName\n    ];\n});\nvar useProdName = function(modelName, count) {\n    _s4();\n    var uniqueName = \"@isolate:\" + modelName + \"#\" + count;\n    (0,react__WEBPACK_IMPORTED_MODULE_4__.useEffect)(function() {\n        return function() {\n            setTimeout(unmountModel, 0, uniqueName);\n        };\n    }, [\n        uniqueName\n    ]);\n    return uniqueName;\n};\n_s4(useProdName, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\nvar useDevName = function(model, count, err) {\n    _s5();\n    var componentName = (0,react__WEBPACK_IMPORTED_MODULE_4__.useMemo)(function() {\n        try {\n            var stacks = err.stack.split(\"\\n\");\n            var innerNamePattern = new RegExp(\"at\\\\s(?:Module\\\\.)?\" + useIsolate.name + \"\\\\s\\\\(\", \"i\");\n            var componentNamePattern = /at\\s(.+?)\\s\\(/i;\n            for(var i = 0; i < stacks.length; ++i){\n                if (innerNamePattern.test(stacks[i])) {\n                    return stacks[i + 1].match(componentNamePattern)[1];\n                }\n            }\n        } catch (e) {}\n        return \"Component\";\n    }, [\n        err.stack\n    ]);\n    var globalModelRef = (0,react__WEBPACK_IMPORTED_MODULE_4__.useRef)({\n        count: 0\n    });\n    (0,react__WEBPACK_IMPORTED_MODULE_4__.useEffect)(function() {\n        if (globalModelRef.current.model !== model) {\n            globalModelRef.current = {\n                model: model,\n                count: ++globalModelRef.current.count\n            };\n        }\n    });\n    var uniqueName = \"@isolate:\" + model.name + \":\" + componentName + \"#\" + count + \"-\" + (globalModelRef.current.count + Number(globalModelRef.current.model !== model));\n    (0,react__WEBPACK_IMPORTED_MODULE_4__.useMemo)(function() {\n        hotReloadCounter[uniqueName] || (hotReloadCounter[uniqueName] = 0);\n        ++hotReloadCounter[uniqueName];\n    }, [\n        uniqueName\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_4__.useEffect)(function() {\n        var prev = hotReloadCounter[uniqueName];\n        return function() {\n            setTimeout(function() {\n                var unmounted = prev === hotReloadCounter[uniqueName];\n                unmounted && unmountModel(uniqueName);\n            });\n        };\n    }, [\n        uniqueName\n    ]);\n    return uniqueName;\n};\n_s5(useDevName, \"fE/xhHdPRU3DYBmrqMkozqcYzG4=\");\nvar unmountModel = function(modelName) {\n    ModelStore.removeReducer.call(modelStore, modelName);\n    loadingStore.dispatch({\n        type: DESTROY_LOADING,\n        model: modelName\n    });\n};\n// src/redux/connect.ts\n\nvar connect = function connect() {\n    var args = toArgs(arguments);\n    (args[3] || (args[3] = {})).context = ProxyContext;\n    return react_redux__WEBPACK_IMPORTED_MODULE_3__.connect.apply(null, args);\n};\n// src/index.ts\n\n// src/redux/FocaProvider.tsx\n\n// src/persist/PersistGate.tsx\n\n\nvar PersistGate = function(props) {\n    _s6();\n    var state = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(function() {\n        return modelStore.isReady;\n    }), isReady = state[0], setIsReady = state[1];\n    var _props_loading = props.loading, loading = _props_loading === void 0 ? null : _props_loading, children = props.children;\n    (0,react__WEBPACK_IMPORTED_MODULE_4__.useEffect)(function() {\n        isReady || modelStore.onInitialized().then(function() {\n            setIsReady(true);\n        });\n    }, []);\n    if (true) {\n        if (loading && isFunction(children)) {\n            console.error(\"[PersistGate] 当前children为函数类型，loading属性无效\");\n        }\n    }\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.Fragment, {\n        children: isFunction(children) ? children(isReady) : isReady ? children : loading\n    });\n};\n_s6(PersistGate, \"xJdpRevivudTJIb7CUezZi/UWOM=\", false, function() {\n    return [\n        react__WEBPACK_IMPORTED_MODULE_4__.useState,\n        react__WEBPACK_IMPORTED_MODULE_4__.useState,\n        react__WEBPACK_IMPORTED_MODULE_4__.useState,\n        react__WEBPACK_IMPORTED_MODULE_4__.useEffect\n    ];\n});\n_c = PersistGate;\n// src/redux/FocaProvider.tsx\n\nvar FocaProvider = function(param) {\n    var children = param.children, loading = param.loading;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(react_redux__WEBPACK_IMPORTED_MODULE_3__.Provider, {\n        context: ProxyContext,\n        store: proxyStore,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(react_redux__WEBPACK_IMPORTED_MODULE_3__.Provider, {\n            context: LoadingContext,\n            store: loadingStore,\n            children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(react_redux__WEBPACK_IMPORTED_MODULE_3__.Provider, {\n                context: ModelContext,\n                store: modelStore,\n                children: modelStore[\"persister\"] ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(PersistGate, {\n                    loading: loading,\n                    children: children\n                }) : isFunction(children) ? children(true) : children\n            })\n        })\n    });\n};\n_c1 = FocaProvider;\n// src/engines/local.ts\nvar local = {\n    getItem: function getItem(key) {\n        return localStorage.getItem(key);\n    },\n    setItem: function setItem(key, value) {\n        localStorage.setItem(key, value);\n    },\n    removeItem: function removeItem(key) {\n        localStorage.removeItem(key);\n    },\n    clear: function clear() {\n        localStorage.clear();\n    }\n};\n// src/engines/memory.ts\nvar cache = {};\nvar memoryStorage = {\n    getItem: function getItem(key) {\n        return cache[key] === void 0 ? null : cache[key];\n    },\n    setItem: function setItem(key, value) {\n        cache[key] = value;\n    },\n    removeItem: function removeItem(key) {\n        cache[key] = void 0;\n    },\n    clear: function clear() {\n        cache = {};\n    }\n};\n// src/engines/session.ts\nvar session = {\n    getItem: function getItem(key) {\n        return sessionStorage.getItem(key);\n    },\n    setItem: function setItem(key, value) {\n        sessionStorage.setItem(key, value);\n    },\n    removeItem: function removeItem(key) {\n        sessionStorage.removeItem(key);\n    },\n    clear: function clear() {\n        sessionStorage.clear();\n    }\n};\n// src/engines/index.ts\nvar engines = {\n    /**\n   * @deprecated 请直接使用浏览器内置的 localStorage\n   */ localStorage: local,\n    /**\n   * 适用于测试的memoryStorage存储引擎\n   *\n   * @deprecated 请从foca直接引入\n   * ```typescript\n   * import { memoryStorage } from 'foca';\n   * ```\n   */ memoryStorage: memoryStorage,\n    /**\n   * @deprecated 请直接使用浏览器内置的 sessionStorage\n   */ sessionStorage: session\n};\n //# sourceMappingURL=index.js.map\nvar _c, _c1;\n$RefreshReg$(_c, \"PersistGate\");\n$RefreshReg$(_c1, \"FocaProvider\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/foca/dist/esm/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/immer/dist/immer.esm.mjs":
/*!***********************************************!*\
  !*** ./node_modules/immer/dist/immer.esm.mjs ***!
  \***********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Immer: function() { return /* binding */ un; },\n/* harmony export */   applyPatches: function() { return /* binding */ pn; },\n/* harmony export */   castDraft: function() { return /* binding */ K; },\n/* harmony export */   castImmutable: function() { return /* binding */ $; },\n/* harmony export */   createDraft: function() { return /* binding */ ln; },\n/* harmony export */   current: function() { return /* binding */ R; },\n/* harmony export */   enableAllPlugins: function() { return /* binding */ J; },\n/* harmony export */   enableES5: function() { return /* binding */ F; },\n/* harmony export */   enableMapSet: function() { return /* binding */ C; },\n/* harmony export */   enablePatches: function() { return /* binding */ T; },\n/* harmony export */   finishDraft: function() { return /* binding */ dn; },\n/* harmony export */   freeze: function() { return /* binding */ d; },\n/* harmony export */   immerable: function() { return /* binding */ L; },\n/* harmony export */   isDraft: function() { return /* binding */ r; },\n/* harmony export */   isDraftable: function() { return /* binding */ t; },\n/* harmony export */   nothing: function() { return /* binding */ H; },\n/* harmony export */   original: function() { return /* binding */ e; },\n/* harmony export */   produce: function() { return /* binding */ fn; },\n/* harmony export */   produceWithPatches: function() { return /* binding */ cn; },\n/* harmony export */   setAutoFreeze: function() { return /* binding */ sn; },\n/* harmony export */   setUseProxies: function() { return /* binding */ vn; }\n/* harmony export */ });\nfunction n(n) {\n    for(var r = arguments.length, t = Array(r > 1 ? r - 1 : 0), e = 1; e < r; e++)t[e - 1] = arguments[e];\n    if (true) {\n        var i = Y[n], o = i ? \"function\" == typeof i ? i.apply(null, t) : i : \"unknown error nr: \" + n;\n        throw Error(\"[Immer] \" + o);\n    }\n    throw Error(\"[Immer] minified error nr: \" + n + (t.length ? \" \" + t.map(function(n) {\n        return \"'\" + n + \"'\";\n    }).join(\",\") : \"\") + \". Find the full error at: https://bit.ly/3cXEKWf\");\n}\nfunction r(n) {\n    return !!n && !!n[Q];\n}\nfunction t(n) {\n    var r;\n    return !!n && (function(n) {\n        if (!n || \"object\" != typeof n) return !1;\n        var r = Object.getPrototypeOf(n);\n        if (null === r) return !0;\n        var t = Object.hasOwnProperty.call(r, \"constructor\") && r.constructor;\n        return t === Object || \"function\" == typeof t && Function.toString.call(t) === Z;\n    }(n) || Array.isArray(n) || !!n[L] || !!(null === (r = n.constructor) || void 0 === r ? void 0 : r[L]) || s(n) || v(n));\n}\nfunction e(t) {\n    return r(t) || n(23, t), t[Q].t;\n}\nfunction i(n, r, t) {\n    void 0 === t && (t = !1), 0 === o(n) ? (t ? Object.keys : nn)(n).forEach(function(e) {\n        t && \"symbol\" == typeof e || r(e, n[e], n);\n    }) : n.forEach(function(t, e) {\n        return r(e, t, n);\n    });\n}\nfunction o(n) {\n    var r = n[Q];\n    return r ? r.i > 3 ? r.i - 4 : r.i : Array.isArray(n) ? 1 : s(n) ? 2 : v(n) ? 3 : 0;\n}\nfunction u(n, r) {\n    return 2 === o(n) ? n.has(r) : Object.prototype.hasOwnProperty.call(n, r);\n}\nfunction a(n, r) {\n    return 2 === o(n) ? n.get(r) : n[r];\n}\nfunction f(n, r, t) {\n    var e = o(n);\n    2 === e ? n.set(r, t) : 3 === e ? n.add(t) : n[r] = t;\n}\nfunction c(n, r) {\n    return n === r ? 0 !== n || 1 / n == 1 / r : n != n && r != r;\n}\nfunction s(n) {\n    return X && n instanceof Map;\n}\nfunction v(n) {\n    return q && n instanceof Set;\n}\nfunction p(n) {\n    return n.o || n.t;\n}\nfunction l(n) {\n    if (Array.isArray(n)) return Array.prototype.slice.call(n);\n    var r = rn(n);\n    delete r[Q];\n    for(var t = nn(r), e = 0; e < t.length; e++){\n        var i = t[e], o = r[i];\n        !1 === o.writable && (o.writable = !0, o.configurable = !0), (o.get || o.set) && (r[i] = {\n            configurable: !0,\n            writable: !0,\n            enumerable: o.enumerable,\n            value: n[i]\n        });\n    }\n    return Object.create(Object.getPrototypeOf(n), r);\n}\nfunction d(n, e) {\n    return void 0 === e && (e = !1), y(n) || r(n) || !t(n) || (o(n) > 1 && (n.set = n.add = n.clear = n.delete = h), Object.freeze(n), e && i(n, function(n, r) {\n        return d(r, !0);\n    }, !0)), n;\n}\nfunction h() {\n    n(2);\n}\nfunction y(n) {\n    return null == n || \"object\" != typeof n || Object.isFrozen(n);\n}\nfunction b(r) {\n    var t = tn[r];\n    return t || n(18, r), t;\n}\nfunction m(n, r) {\n    tn[n] || (tn[n] = r);\n}\nfunction _() {\n    return  false || U || n(0), U;\n}\nfunction j(n, r) {\n    r && (b(\"Patches\"), n.u = [], n.s = [], n.v = r);\n}\nfunction g(n) {\n    O(n), n.p.forEach(S), n.p = null;\n}\nfunction O(n) {\n    n === U && (U = n.l);\n}\n_c = O;\nfunction w(n) {\n    return U = {\n        p: [],\n        l: U,\n        h: n,\n        m: !0,\n        _: 0\n    };\n}\nfunction S(n) {\n    var r = n[Q];\n    0 === r.i || 1 === r.i ? r.j() : r.g = !0;\n}\n_c1 = S;\nfunction P(r, e) {\n    e._ = e.p.length;\n    var i = e.p[0], o = void 0 !== r && r !== i;\n    return e.h.O || b(\"ES5\").S(e, r, o), o ? (i[Q].P && (g(e), n(4)), t(r) && (r = M(e, r), e.l || x(e, r)), e.u && b(\"Patches\").M(i[Q].t, r, e.u, e.s)) : r = M(e, i, []), g(e), e.u && e.v(e.u, e.s), r !== H ? r : void 0;\n}\n_c2 = P;\nfunction M(n, r, t) {\n    if (y(r)) return r;\n    var e = r[Q];\n    if (!e) return i(r, function(i, o) {\n        return A(n, e, r, i, o, t);\n    }, !0), r;\n    if (e.A !== n) return r;\n    if (!e.P) return x(n, e.t, !0), e.t;\n    if (!e.I) {\n        e.I = !0, e.A._--;\n        var o = 4 === e.i || 5 === e.i ? e.o = l(e.k) : e.o, u = o, a = !1;\n        3 === e.i && (u = new Set(o), o.clear(), a = !0), i(u, function(r, i) {\n            return A(n, e, o, r, i, t, a);\n        }), x(n, o, !1), t && n.u && b(\"Patches\").N(e, t, n.u, n.s);\n    }\n    return e.o;\n}\n_c3 = M;\nfunction A(e, i, o, a, c, s, v) {\n    if ( true && c === o && n(5), r(c)) {\n        var p = M(e, c, s && i && 3 !== i.i && !u(i.R, a) ? s.concat(a) : void 0);\n        if (f(o, a, p), !r(p)) return;\n        e.m = !1;\n    } else v && o.add(c);\n    if (t(c) && !y(c)) {\n        if (!e.h.D && e._ < 1) return;\n        M(e, c), i && i.A.l || x(e, c);\n    }\n}\n_c4 = A;\nfunction x(n, r, t) {\n    void 0 === t && (t = !1), !n.l && n.h.D && n.m && d(r, t);\n}\nfunction z(n, r) {\n    var t = n[Q];\n    return (t ? p(t) : n)[r];\n}\nfunction I(n, r) {\n    if (r in n) for(var t = Object.getPrototypeOf(n); t;){\n        var e = Object.getOwnPropertyDescriptor(t, r);\n        if (e) return e;\n        t = Object.getPrototypeOf(t);\n    }\n}\n_c5 = I;\nfunction k(n) {\n    n.P || (n.P = !0, n.l && k(n.l));\n}\nfunction E(n) {\n    n.o || (n.o = l(n.t));\n}\n_c6 = E;\nfunction N(n, r, t) {\n    var e = s(r) ? b(\"MapSet\").F(r, t) : v(r) ? b(\"MapSet\").T(r, t) : n.O ? function(n, r) {\n        var t = Array.isArray(n), e = {\n            i: t ? 1 : 0,\n            A: r ? r.A : _(),\n            P: !1,\n            I: !1,\n            R: {},\n            l: r,\n            t: n,\n            k: null,\n            o: null,\n            j: null,\n            C: !1\n        }, i = e, o = en;\n        t && (i = [\n            e\n        ], o = on);\n        var u = Proxy.revocable(i, o), a = u.revoke, f = u.proxy;\n        return e.k = f, e.j = a, f;\n    }(r, t) : b(\"ES5\").J(r, t);\n    return (t ? t.A : _()).p.push(e), e;\n}\n_c7 = N;\nfunction R(e) {\n    return r(e) || n(22, e), function n(r) {\n        if (!t(r)) return r;\n        var e, u = r[Q], c = o(r);\n        if (u) {\n            if (!u.P && (u.i < 4 || !b(\"ES5\").K(u))) return u.t;\n            u.I = !0, e = D(r, c), u.I = !1;\n        } else e = D(r, c);\n        return i(e, function(r, t) {\n            u && a(u.t, r) === t || f(e, r, n(t));\n        }), 3 === c ? new Set(e) : e;\n    }(e);\n}\n_c8 = R;\nfunction D(n, r) {\n    switch(r){\n        case 2:\n            return new Map(n);\n        case 3:\n            return Array.from(n);\n    }\n    return l(n);\n}\n_c9 = D;\nfunction F() {\n    function t(n, r) {\n        var t = s[n];\n        return t ? t.enumerable = r : s[n] = t = {\n            configurable: !0,\n            enumerable: r,\n            get: function() {\n                var r = this[Q];\n                return  true && f(r), en.get(r, n);\n            },\n            set: function(r) {\n                var t = this[Q];\n                 true && f(t), en.set(t, n, r);\n            }\n        }, t;\n    }\n    function e(n) {\n        for(var r = n.length - 1; r >= 0; r--){\n            var t = n[r][Q];\n            if (!t.P) switch(t.i){\n                case 5:\n                    a(t) && k(t);\n                    break;\n                case 4:\n                    o(t) && k(t);\n            }\n        }\n    }\n    function o(n) {\n        for(var r = n.t, t = n.k, e = nn(t), i = e.length - 1; i >= 0; i--){\n            var o = e[i];\n            if (o !== Q) {\n                var a = r[o];\n                if (void 0 === a && !u(r, o)) return !0;\n                var f = t[o], s = f && f[Q];\n                if (s ? s.t !== a : !c(f, a)) return !0;\n            }\n        }\n        var v = !!r[Q];\n        return e.length !== nn(r).length + (v ? 0 : 1);\n    }\n    function a(n) {\n        var r = n.k;\n        if (r.length !== n.t.length) return !0;\n        var t = Object.getOwnPropertyDescriptor(r, r.length - 1);\n        if (t && !t.get) return !0;\n        for(var e = 0; e < r.length; e++)if (!r.hasOwnProperty(e)) return !0;\n        return !1;\n    }\n    function f(r) {\n        r.g && n(3, JSON.stringify(p(r)));\n    }\n    var s = {};\n    m(\"ES5\", {\n        J: function(n, r) {\n            var e = Array.isArray(n), i = function(n, r) {\n                if (n) {\n                    for(var e = Array(r.length), i = 0; i < r.length; i++)Object.defineProperty(e, \"\" + i, t(i, !0));\n                    return e;\n                }\n                var o = rn(r);\n                delete o[Q];\n                for(var u = nn(o), a = 0; a < u.length; a++){\n                    var f = u[a];\n                    o[f] = t(f, n || !!o[f].enumerable);\n                }\n                return Object.create(Object.getPrototypeOf(r), o);\n            }(e, n), o = {\n                i: e ? 5 : 4,\n                A: r ? r.A : _(),\n                P: !1,\n                I: !1,\n                R: {},\n                l: r,\n                t: n,\n                k: i,\n                o: null,\n                g: !1,\n                C: !1\n            };\n            return Object.defineProperty(i, Q, {\n                value: o,\n                writable: !0\n            }), i;\n        },\n        S: function(n, t, o) {\n            o ? r(t) && t[Q].A === n && e(n.p) : (n.u && function n(r) {\n                if (r && \"object\" == typeof r) {\n                    var t = r[Q];\n                    if (t) {\n                        var e = t.t, o = t.k, f = t.R, c = t.i;\n                        if (4 === c) i(o, function(r) {\n                            r !== Q && (void 0 !== e[r] || u(e, r) ? f[r] || n(o[r]) : (f[r] = !0, k(t)));\n                        }), i(e, function(n) {\n                            void 0 !== o[n] || u(o, n) || (f[n] = !1, k(t));\n                        });\n                        else if (5 === c) {\n                            if (a(t) && (k(t), f.length = !0), o.length < e.length) for(var s = o.length; s < e.length; s++)f[s] = !1;\n                            else for(var v = e.length; v < o.length; v++)f[v] = !0;\n                            for(var p = Math.min(o.length, e.length), l = 0; l < p; l++)o.hasOwnProperty(l) || (f[l] = !0), void 0 === f[l] && n(o[l]);\n                        }\n                    }\n                }\n            }(n.p[0]), e(n.p));\n        },\n        K: function(n) {\n            return 4 === n.i ? o(n) : a(n);\n        }\n    });\n}\n_c10 = F;\nfunction T() {\n    function e(n) {\n        if (!t(n)) return n;\n        if (Array.isArray(n)) return n.map(e);\n        if (s(n)) return new Map(Array.from(n.entries()).map(function(n) {\n            return [\n                n[0],\n                e(n[1])\n            ];\n        }));\n        if (v(n)) return new Set(Array.from(n).map(e));\n        var r = Object.create(Object.getPrototypeOf(n));\n        for(var i in n)r[i] = e(n[i]);\n        return u(n, L) && (r[L] = n[L]), r;\n    }\n    function f(n) {\n        return r(n) ? e(n) : n;\n    }\n    var c = \"add\";\n    m(\"Patches\", {\n        $: function(r, t) {\n            return t.forEach(function(t) {\n                for(var i = t.path, u = t.op, f = r, s = 0; s < i.length - 1; s++){\n                    var v = o(f), p = i[s];\n                    \"string\" != typeof p && \"number\" != typeof p && (p = \"\" + p), 0 !== v && 1 !== v || \"__proto__\" !== p && \"constructor\" !== p || n(24), \"function\" == typeof f && \"prototype\" === p && n(24), \"object\" != typeof (f = a(f, p)) && n(15, i.join(\"/\"));\n                }\n                var l = o(f), d = e(t.value), h = i[i.length - 1];\n                switch(u){\n                    case \"replace\":\n                        switch(l){\n                            case 2:\n                                return f.set(h, d);\n                            case 3:\n                                n(16);\n                            default:\n                                return f[h] = d;\n                        }\n                    case c:\n                        switch(l){\n                            case 1:\n                                return \"-\" === h ? f.push(d) : f.splice(h, 0, d);\n                            case 2:\n                                return f.set(h, d);\n                            case 3:\n                                return f.add(d);\n                            default:\n                                return f[h] = d;\n                        }\n                    case \"remove\":\n                        switch(l){\n                            case 1:\n                                return f.splice(h, 1);\n                            case 2:\n                                return f.delete(h);\n                            case 3:\n                                return f.delete(t.value);\n                            default:\n                                return delete f[h];\n                        }\n                    default:\n                        n(17, u);\n                }\n            }), r;\n        },\n        N: function(n, r, t, e) {\n            switch(n.i){\n                case 0:\n                case 4:\n                case 2:\n                    return function(n, r, t, e) {\n                        var o = n.t, s = n.o;\n                        i(n.R, function(n, i) {\n                            var v = a(o, n), p = a(s, n), l = i ? u(o, n) ? \"replace\" : c : \"remove\";\n                            if (v !== p || \"replace\" !== l) {\n                                var d = r.concat(n);\n                                t.push(\"remove\" === l ? {\n                                    op: l,\n                                    path: d\n                                } : {\n                                    op: l,\n                                    path: d,\n                                    value: p\n                                }), e.push(l === c ? {\n                                    op: \"remove\",\n                                    path: d\n                                } : \"remove\" === l ? {\n                                    op: c,\n                                    path: d,\n                                    value: f(v)\n                                } : {\n                                    op: \"replace\",\n                                    path: d,\n                                    value: f(v)\n                                });\n                            }\n                        });\n                    }(n, r, t, e);\n                case 5:\n                case 1:\n                    return function(n, r, t, e) {\n                        var i = n.t, o = n.R, u = n.o;\n                        if (u.length < i.length) {\n                            var a = [\n                                u,\n                                i\n                            ];\n                            i = a[0], u = a[1];\n                            var s = [\n                                e,\n                                t\n                            ];\n                            t = s[0], e = s[1];\n                        }\n                        for(var v = 0; v < i.length; v++)if (o[v] && u[v] !== i[v]) {\n                            var p = r.concat([\n                                v\n                            ]);\n                            t.push({\n                                op: \"replace\",\n                                path: p,\n                                value: f(u[v])\n                            }), e.push({\n                                op: \"replace\",\n                                path: p,\n                                value: f(i[v])\n                            });\n                        }\n                        for(var l = i.length; l < u.length; l++){\n                            var d = r.concat([\n                                l\n                            ]);\n                            t.push({\n                                op: c,\n                                path: d,\n                                value: f(u[l])\n                            });\n                        }\n                        i.length < u.length && e.push({\n                            op: \"replace\",\n                            path: r.concat([\n                                \"length\"\n                            ]),\n                            value: i.length\n                        });\n                    }(n, r, t, e);\n                case 3:\n                    return function(n, r, t, e) {\n                        var i = n.t, o = n.o, u = 0;\n                        i.forEach(function(n) {\n                            if (!o.has(n)) {\n                                var i = r.concat([\n                                    u\n                                ]);\n                                t.push({\n                                    op: \"remove\",\n                                    path: i,\n                                    value: n\n                                }), e.unshift({\n                                    op: c,\n                                    path: i,\n                                    value: n\n                                });\n                            }\n                            u++;\n                        }), u = 0, o.forEach(function(n) {\n                            if (!i.has(n)) {\n                                var o = r.concat([\n                                    u\n                                ]);\n                                t.push({\n                                    op: c,\n                                    path: o,\n                                    value: n\n                                }), e.unshift({\n                                    op: \"remove\",\n                                    path: o,\n                                    value: n\n                                });\n                            }\n                            u++;\n                        });\n                    }(n, r, t, e);\n            }\n        },\n        M: function(n, r, t, e) {\n            t.push({\n                op: \"replace\",\n                path: [],\n                value: r === H ? void 0 : r\n            }), e.push({\n                op: \"replace\",\n                path: [],\n                value: n\n            });\n        }\n    });\n}\n_c11 = T;\nfunction C() {\n    function r(n, r) {\n        function t() {\n            this.constructor = n;\n        }\n        a(n, r), n.prototype = (t.prototype = r.prototype, new t);\n    }\n    function e(n) {\n        n.o || (n.R = new Map, n.o = new Map(n.t));\n    }\n    function o(n) {\n        n.o || (n.o = new Set, n.t.forEach(function(r) {\n            if (t(r)) {\n                var e = N(n.A.h, r, n);\n                n.p.set(r, e), n.o.add(e);\n            } else n.o.add(r);\n        }));\n    }\n    function u(r) {\n        r.g && n(3, JSON.stringify(p(r)));\n    }\n    var a = function(n, r) {\n        return (a = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(n, r) {\n            n.__proto__ = r;\n        } || function(n, r) {\n            for(var t in r)r.hasOwnProperty(t) && (n[t] = r[t]);\n        })(n, r);\n    }, f = function() {\n        function n(n, r) {\n            return this[Q] = {\n                i: 2,\n                l: r,\n                A: r ? r.A : _(),\n                P: !1,\n                I: !1,\n                o: void 0,\n                R: void 0,\n                t: n,\n                k: this,\n                C: !1,\n                g: !1\n            }, this;\n        }\n        r(n, Map);\n        var o = n.prototype;\n        return Object.defineProperty(o, \"size\", {\n            get: function() {\n                return p(this[Q]).size;\n            }\n        }), o.has = function(n) {\n            return p(this[Q]).has(n);\n        }, o.set = function(n, r) {\n            var t = this[Q];\n            return u(t), p(t).has(n) && p(t).get(n) === r || (e(t), k(t), t.R.set(n, !0), t.o.set(n, r), t.R.set(n, !0)), this;\n        }, o.delete = function(n) {\n            if (!this.has(n)) return !1;\n            var r = this[Q];\n            return u(r), e(r), k(r), r.t.has(n) ? r.R.set(n, !1) : r.R.delete(n), r.o.delete(n), !0;\n        }, o.clear = function() {\n            var n = this[Q];\n            u(n), p(n).size && (e(n), k(n), n.R = new Map, i(n.t, function(r) {\n                n.R.set(r, !1);\n            }), n.o.clear());\n        }, o.forEach = function(n, r) {\n            var t = this;\n            p(this[Q]).forEach(function(e, i) {\n                n.call(r, t.get(i), i, t);\n            });\n        }, o.get = function(n) {\n            var r = this[Q];\n            u(r);\n            var i = p(r).get(n);\n            if (r.I || !t(i)) return i;\n            if (i !== r.t.get(n)) return i;\n            var o = N(r.A.h, i, r);\n            return e(r), r.o.set(n, o), o;\n        }, o.keys = function() {\n            return p(this[Q]).keys();\n        }, o.values = function() {\n            var n, r = this, t = this.keys();\n            return (n = {})[V] = function() {\n                return r.values();\n            }, n.next = function() {\n                var n = t.next();\n                return n.done ? n : {\n                    done: !1,\n                    value: r.get(n.value)\n                };\n            }, n;\n        }, o.entries = function() {\n            var n, r = this, t = this.keys();\n            return (n = {})[V] = function() {\n                return r.entries();\n            }, n.next = function() {\n                var n = t.next();\n                if (n.done) return n;\n                var e = r.get(n.value);\n                return {\n                    done: !1,\n                    value: [\n                        n.value,\n                        e\n                    ]\n                };\n            }, n;\n        }, o[V] = function() {\n            return this.entries();\n        }, n;\n    }(), c = function() {\n        function n(n, r) {\n            return this[Q] = {\n                i: 3,\n                l: r,\n                A: r ? r.A : _(),\n                P: !1,\n                I: !1,\n                o: void 0,\n                t: n,\n                k: this,\n                p: new Map,\n                g: !1,\n                C: !1\n            }, this;\n        }\n        r(n, Set);\n        var t = n.prototype;\n        return Object.defineProperty(t, \"size\", {\n            get: function() {\n                return p(this[Q]).size;\n            }\n        }), t.has = function(n) {\n            var r = this[Q];\n            return u(r), r.o ? !!r.o.has(n) || !(!r.p.has(n) || !r.o.has(r.p.get(n))) : r.t.has(n);\n        }, t.add = function(n) {\n            var r = this[Q];\n            return u(r), this.has(n) || (o(r), k(r), r.o.add(n)), this;\n        }, t.delete = function(n) {\n            if (!this.has(n)) return !1;\n            var r = this[Q];\n            return u(r), o(r), k(r), r.o.delete(n) || !!r.p.has(n) && r.o.delete(r.p.get(n));\n        }, t.clear = function() {\n            var n = this[Q];\n            u(n), p(n).size && (o(n), k(n), n.o.clear());\n        }, t.values = function() {\n            var n = this[Q];\n            return u(n), o(n), n.o.values();\n        }, t.entries = function() {\n            var n = this[Q];\n            return u(n), o(n), n.o.entries();\n        }, t.keys = function() {\n            return this.values();\n        }, t[V] = function() {\n            return this.values();\n        }, t.forEach = function(n, r) {\n            for(var t = this.values(), e = t.next(); !e.done;)n.call(r, e.value, e.value, this), e = t.next();\n        }, n;\n    }();\n    m(\"MapSet\", {\n        F: function(n, r) {\n            return new f(n, r);\n        },\n        T: function(n, r) {\n            return new c(n, r);\n        }\n    });\n}\n_c12 = C;\nfunction J() {\n    F(), C(), T();\n}\n_c13 = J;\nfunction K(n) {\n    return n;\n}\n_c14 = K;\nfunction $(n) {\n    return n;\n}\nvar G, U, W = \"undefined\" != typeof Symbol && \"symbol\" == typeof Symbol(\"x\"), X = \"undefined\" != typeof Map, q = \"undefined\" != typeof Set, B = \"undefined\" != typeof Proxy && void 0 !== Proxy.revocable && \"undefined\" != typeof Reflect, H = W ? Symbol.for(\"immer-nothing\") : ((G = {})[\"immer-nothing\"] = !0, G), L = W ? Symbol.for(\"immer-draftable\") : \"__$immer_draftable\", Q = W ? Symbol.for(\"immer-state\") : \"__$immer_state\", V = \"undefined\" != typeof Symbol && Symbol.iterator || \"@@iterator\", Y = {\n    0: \"Illegal state\",\n    1: \"Immer drafts cannot have computed properties\",\n    2: \"This object has been frozen and should not be mutated\",\n    3: function(n) {\n        return \"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \" + n;\n    },\n    4: \"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\",\n    5: \"Immer forbids circular references\",\n    6: \"The first or second argument to `produce` must be a function\",\n    7: \"The third argument to `produce` must be a function or undefined\",\n    8: \"First argument to `createDraft` must be a plain object, an array, or an immerable object\",\n    9: \"First argument to `finishDraft` must be a draft returned by `createDraft`\",\n    10: \"The given draft is already finalized\",\n    11: \"Object.defineProperty() cannot be used on an Immer draft\",\n    12: \"Object.setPrototypeOf() cannot be used on an Immer draft\",\n    13: \"Immer only supports deleting array indices\",\n    14: \"Immer only supports setting array indices and the 'length' property\",\n    15: function(n) {\n        return \"Cannot apply patch, path doesn't resolve: \" + n;\n    },\n    16: 'Sets cannot have \"replace\" patches.',\n    17: function(n) {\n        return \"Unsupported patch operation: \" + n;\n    },\n    18: function(n) {\n        return \"The plugin for '\" + n + \"' has not been loaded into Immer. To enable the plugin, import and call `enable\" + n + \"()` when initializing your application.\";\n    },\n    20: \"Cannot use proxies if Proxy, Proxy.revocable or Reflect are not available\",\n    21: function(n) {\n        return \"produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '\" + n + \"'\";\n    },\n    22: function(n) {\n        return \"'current' expects a draft, got: \" + n;\n    },\n    23: function(n) {\n        return \"'original' expects a draft, got: \" + n;\n    },\n    24: \"Patching reserved attributes like __proto__, prototype and constructor is not allowed\"\n}, Z = \"\" + Object.prototype.constructor, nn = \"undefined\" != typeof Reflect && Reflect.ownKeys ? Reflect.ownKeys : void 0 !== Object.getOwnPropertySymbols ? function(n) {\n    return Object.getOwnPropertyNames(n).concat(Object.getOwnPropertySymbols(n));\n} : Object.getOwnPropertyNames, rn = Object.getOwnPropertyDescriptors || function(n) {\n    var r = {};\n    return nn(n).forEach(function(t) {\n        r[t] = Object.getOwnPropertyDescriptor(n, t);\n    }), r;\n}, tn = {}, en = {\n    get: function(n, r) {\n        if (r === Q) return n;\n        var e = p(n);\n        if (!u(e, r)) return function(n, r, t) {\n            var e, i = I(r, t);\n            return i ? \"value\" in i ? i.value : null === (e = i.get) || void 0 === e ? void 0 : e.call(n.k) : void 0;\n        }(n, e, r);\n        var i = e[r];\n        return n.I || !t(i) ? i : i === z(n.t, r) ? (E(n), n.o[r] = N(n.A.h, i, n)) : i;\n    },\n    has: function(n, r) {\n        return r in p(n);\n    },\n    ownKeys: function(n) {\n        return Reflect.ownKeys(p(n));\n    },\n    set: function(n, r, t) {\n        var e = I(p(n), r);\n        if (null == e ? void 0 : e.set) return e.set.call(n.k, t), !0;\n        if (!n.P) {\n            var i = z(p(n), r), o = null == i ? void 0 : i[Q];\n            if (o && o.t === t) return n.o[r] = t, n.R[r] = !1, !0;\n            if (c(t, i) && (void 0 !== t || u(n.t, r))) return !0;\n            E(n), k(n);\n        }\n        return n.o[r] === t && (void 0 !== t || r in n.o) || Number.isNaN(t) && Number.isNaN(n.o[r]) || (n.o[r] = t, n.R[r] = !0), !0;\n    },\n    deleteProperty: function(n, r) {\n        return void 0 !== z(n.t, r) || r in n.t ? (n.R[r] = !1, E(n), k(n)) : delete n.R[r], n.o && delete n.o[r], !0;\n    },\n    getOwnPropertyDescriptor: function(n, r) {\n        var t = p(n), e = Reflect.getOwnPropertyDescriptor(t, r);\n        return e ? {\n            writable: !0,\n            configurable: 1 !== n.i || \"length\" !== r,\n            enumerable: e.enumerable,\n            value: t[r]\n        } : e;\n    },\n    defineProperty: function() {\n        n(11);\n    },\n    getPrototypeOf: function(n) {\n        return Object.getPrototypeOf(n.t);\n    },\n    setPrototypeOf: function() {\n        n(12);\n    }\n}, on = {};\ni(en, function(n, r) {\n    on[n] = function() {\n        return arguments[0] = arguments[0][0], r.apply(this, arguments);\n    };\n}), on.deleteProperty = function(r, t) {\n    return  true && isNaN(parseInt(t)) && n(13), on.set.call(this, r, t, void 0);\n}, on.set = function(r, t, e) {\n    return  true && \"length\" !== t && isNaN(parseInt(t)) && n(14), en.set.call(this, r[0], t, e, r[0]);\n};\nvar un = function() {\n    function e(r) {\n        var e = this;\n        this.O = B, this.D = !0, this.produce = function(r, i, o) {\n            if (\"function\" == typeof r && \"function\" != typeof i) {\n                var u = i;\n                i = r;\n                var a = e;\n                return function(n) {\n                    var r = this;\n                    void 0 === n && (n = u);\n                    for(var t = arguments.length, e = Array(t > 1 ? t - 1 : 0), o = 1; o < t; o++)e[o - 1] = arguments[o];\n                    return a.produce(n, function(n) {\n                        var t;\n                        return (t = i).call.apply(t, [\n                            r,\n                            n\n                        ].concat(e));\n                    });\n                };\n            }\n            var f;\n            if (\"function\" != typeof i && n(6), void 0 !== o && \"function\" != typeof o && n(7), t(r)) {\n                var c = w(e), s = N(e, r, void 0), v = !0;\n                try {\n                    f = i(s), v = !1;\n                } finally{\n                    v ? g(c) : O(c);\n                }\n                return \"undefined\" != typeof Promise && f instanceof Promise ? f.then(function(n) {\n                    return j(c, o), P(n, c);\n                }, function(n) {\n                    throw g(c), n;\n                }) : (j(c, o), P(f, c));\n            }\n            if (!r || \"object\" != typeof r) {\n                if (void 0 === (f = i(r)) && (f = r), f === H && (f = void 0), e.D && d(f, !0), o) {\n                    var p = [], l = [];\n                    b(\"Patches\").M(r, f, p, l), o(p, l);\n                }\n                return f;\n            }\n            n(21, r);\n        }, this.produceWithPatches = function(n, r) {\n            if (\"function\" == typeof n) return function(r) {\n                for(var t = arguments.length, i = Array(t > 1 ? t - 1 : 0), o = 1; o < t; o++)i[o - 1] = arguments[o];\n                return e.produceWithPatches(r, function(r) {\n                    return n.apply(void 0, [\n                        r\n                    ].concat(i));\n                });\n            };\n            var t, i, o = e.produce(n, r, function(n, r) {\n                t = n, i = r;\n            });\n            return \"undefined\" != typeof Promise && o instanceof Promise ? o.then(function(n) {\n                return [\n                    n,\n                    t,\n                    i\n                ];\n            }) : [\n                o,\n                t,\n                i\n            ];\n        }, \"boolean\" == typeof (null == r ? void 0 : r.useProxies) && this.setUseProxies(r.useProxies), \"boolean\" == typeof (null == r ? void 0 : r.autoFreeze) && this.setAutoFreeze(r.autoFreeze);\n    }\n    var i = e.prototype;\n    return i.createDraft = function(e) {\n        t(e) || n(8), r(e) && (e = R(e));\n        var i = w(this), o = N(this, e, void 0);\n        return o[Q].C = !0, O(i), o;\n    }, i.finishDraft = function(r, t) {\n        var e = r && r[Q];\n         true && (e && e.C || n(9), e.I && n(10));\n        var i = e.A;\n        return j(i, t), P(void 0, i);\n    }, i.setAutoFreeze = function(n) {\n        this.D = n;\n    }, i.setUseProxies = function(r) {\n        r && !B && n(20), this.O = r;\n    }, i.applyPatches = function(n, t) {\n        var e;\n        for(e = t.length - 1; e >= 0; e--){\n            var i = t[e];\n            if (0 === i.path.length && \"replace\" === i.op) {\n                n = i.value;\n                break;\n            }\n        }\n        e > -1 && (t = t.slice(e + 1));\n        var o = b(\"Patches\").$;\n        return r(n) ? o(n, t) : this.produce(n, function(n) {\n            return o(n, t);\n        });\n    }, e;\n}(), an = new un, fn = an.produce, cn = an.produceWithPatches.bind(an), sn = an.setAutoFreeze.bind(an), vn = an.setUseProxies.bind(an), pn = an.applyPatches.bind(an), ln = an.createDraft.bind(an), dn = an.finishDraft.bind(an);\n/* harmony default export */ __webpack_exports__[\"default\"] = (fn);\n //# sourceMappingURL=immer.esm.js.map\nvar _c, _c1, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14;\n$RefreshReg$(_c, \"O\");\n$RefreshReg$(_c1, \"S\");\n$RefreshReg$(_c2, \"P\");\n$RefreshReg$(_c3, \"M\");\n$RefreshReg$(_c4, \"A\");\n$RefreshReg$(_c5, \"I\");\n$RefreshReg$(_c6, \"E\");\n$RefreshReg$(_c7, \"N\");\n$RefreshReg$(_c8, \"R\");\n$RefreshReg$(_c9, \"D\");\n$RefreshReg$(_c10, \"F\");\n$RefreshReg$(_c11, \"T\");\n$RefreshReg$(_c12, \"C\");\n$RefreshReg$(_c13, \"J\");\n$RefreshReg$(_c14, \"K\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/immer/dist/immer.esm.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/topic/dist/esm/index.js":
/*!**********************************************!*\
  !*** ./node_modules/topic/dist/esm/index.js ***!
  \**********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Topic: function() { return /* binding */ Topic; },\n/* harmony export */   topic: function() { return /* binding */ topic; }\n/* harmony export */ });\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n// index.ts\nvar when = function(deps) {\n    return typeof deps === \"boolean\" ? deps : deps();\n};\nvar aps = Array.prototype.slice;\nvar counter = 0;\nvar Topic = /*#__PURE__*/ function() {\n    \"use strict\";\n    function _class() {\n        _classCallCheck(this, _class);\n        this.listeners = {};\n        this.origins = {};\n        this.keeps = [];\n    }\n    _createClass(_class, [\n        {\n            key: \"publish\",\n            value: function publish() {\n                var name = arguments[0];\n                var args = aps.call(arguments, 1);\n                var listeners = this.origins[name] = this.listeners[name];\n                if (!listeners || !listeners.length) {\n                    return;\n                }\n                for(var i = 0; i < listeners.length; ++i){\n                    listeners[i].fn.apply(null, args);\n                }\n                this.origins[name] = void 0;\n            }\n        },\n        {\n            key: \"subscribeOnce\",\n            value: function subscribeOnce(name, fn) {\n                var executed = false;\n                var ref = {};\n                ref.token = this.subscribe(name, function() {\n                    fn.apply(null, arguments);\n                    if (ref.token) {\n                        ref.token.unsubscribe();\n                    } else {\n                        executed = true;\n                    }\n                });\n                if (executed) {\n                    ref.token.unsubscribe();\n                }\n                return ref.token;\n            }\n        },\n        {\n            key: \"subscribe\",\n            value: function subscribe(name, fn) {\n                var token = \"Token_\" + counter++;\n                var listeners = this.listeners[name];\n                if (listeners) {\n                    var origin = this.origins[name];\n                    if (origin && listeners === origin) {\n                        listeners = this.listeners[name] = listeners.slice(0);\n                    }\n                } else {\n                    listeners = this.listeners[name] = [];\n                }\n                listeners.push({\n                    token: token,\n                    fn: fn\n                });\n                if (this.keeps.length) {\n                    var keeps = this.keeps.filter(function(item) {\n                        return item.name === name && when(item.shouldPublish);\n                    });\n                    for(var i = 0; i < keeps.length; ++i){\n                        fn.apply(null, keeps[i].args);\n                    }\n                }\n                return {\n                    unsubscribe: this.unsubscribe.bind(this, name, token)\n                };\n            }\n        },\n        {\n            key: \"keep\",\n            value: function keep() {\n                var name = arguments[0];\n                var shouldPublish = arguments[1];\n                var args = aps.call(arguments, 2);\n                var token = \"Token_\" + counter++;\n                when(shouldPublish) && this.publish.apply(this, [\n                    name\n                ].concat(args));\n                this.keeps.push({\n                    shouldPublish: shouldPublish,\n                    token: token,\n                    name: name,\n                    args: args\n                });\n                return {\n                    release: this.release.bind(this, token)\n                };\n            }\n        },\n        {\n            key: \"unsubscribe\",\n            value: function unsubscribe(name, token) {\n                var listeners = this.listeners[name];\n                if (!listeners || !listeners.length) {\n                    return;\n                }\n                this.listeners[name] = listeners.filter(function(item) {\n                    return item.token !== token;\n                });\n            }\n        },\n        {\n            key: \"release\",\n            value: function release(token) {\n                this.keeps = this.keeps.filter(function(item) {\n                    return item.token !== token;\n                });\n            }\n        }\n    ]);\n    return _class;\n}();\nvar topic = new Topic();\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/topic/dist/esm/index.js\n"));

/***/ })

}]);